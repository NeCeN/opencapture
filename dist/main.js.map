{"version":3,"file":"main.js","mappings":"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":["./src/frontend/app/accounts/customers/create/create-customer.component.ts","./src/frontend/app/accounts/customers/create/create-customer.component.html","./src/frontend/app/accounts/customers/list/customers-list.component.ts","./src/frontend/app/accounts/customers/list/customers-list.component.html","./src/frontend/app/accounts/customers/update/update-customer.component.ts","./src/frontend/app/accounts/customers/update/update-customer.component.html","./src/frontend/app/accounts/suppliers/create/create-supplier.component.ts","./src/frontend/app/accounts/suppliers/create/create-supplier.component.html","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.ts","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.html","./src/frontend/app/accounts/suppliers/update/update-supplier.component.ts","./src/frontend/app/accounts/suppliers/update/update-supplier.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/app/app-routing.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/app.module.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/env.ts","./src/frontend/app/errors/error-500/error-500.component.ts","./src/frontend/app/errors/error-500/error-500.component.html","./src/frontend/app/history/history.component.ts","./src/frontend/app/history/history.component.html","./src/frontend/app/home/home.component.html","./src/frontend/app/home/home.component.ts","./src/frontend/app/loader.component.ts","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/middleware.component.ts","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/settings/general/about-us/about-us.component.ts","./src/frontend/app/settings/general/about-us/about-us.component.html","./src/frontend/app/settings/general/configurations/configurations.component.ts","./src/frontend/app/settings/general/configurations/configurations.component.html","./src/frontend/app/settings/general/custom-fields/custom-fields.component.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.html","./src/frontend/app/settings/general/docservers/docservers.component.ts","./src/frontend/app/settings/general/docservers/docservers.component.html","./src/frontend/app/settings/general/login-methods/login-methods.component.ts","./src/frontend/app/settings/general/login-methods/login-methods.component.html","./src/frontend/app/settings/general/mailcollect/mailcollect.component.ts","./src/frontend/app/settings/general/mailcollect/mailcollect.component.html","./src/frontend/app/settings/general/regex/regex.component.ts","./src/frontend/app/settings/general/regex/regex.component.html","./src/frontend/app/settings/general/roles/create/create-role.component.ts","./src/frontend/app/settings/general/roles/create/create-role.component.html","./src/frontend/app/settings/general/roles/list/roles-list.component.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.html","./src/frontend/app/settings/general/roles/update/update-role.component.ts","./src/frontend/app/settings/general/roles/update/update-role.component.html","./src/frontend/app/settings/general/user-quota/user-quota.component.ts","./src/frontend/app/settings/general/user-quota/user-quota.component.html","./src/frontend/app/settings/general/users/create/create-user.component.ts","./src/frontend/app/settings/general/users/create/create-user.component.html","./src/frontend/app/settings/general/users/list/users-list.component.ts","./src/frontend/app/settings/general/users/list/users-list.component.html","./src/frontend/app/settings/general/users/update/update-user.component.ts","./src/frontend/app/settings/general/users/update/update-user.component.html","./src/frontend/app/settings/settings-menu.component.html","./src/frontend/app/settings/settings-menu.component.ts","./src/frontend/app/settings/settings-routing.module.ts","./src/frontend/app/settings/settings.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/create/create-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/list/list-ai-model.component.html","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.ts","./src/frontend/app/settings/splitter/ai-model/update/update-ai-model.component.html","./src/frontend/app/settings/splitter/doc-types/create-folder/create-folder-doc-type.component.ts","./src/frontend/app/settings/splitter/doc-types/create-folder/create-folder-doc-type.component.html","./src/frontend/app/settings/splitter/doc-types/create/create-doc-type.component.ts","./src/frontend/app/settings/splitter/doc-types/create/create-doc-type.component.html","./src/frontend/app/settings/splitter/doc-types/list/list-doc-type.component.ts","./src/frontend/app/settings/splitter/doc-types/list/list-doc-type.component.html","./src/frontend/app/settings/splitter/form/builder/form-builder.component.ts","./src/frontend/app/settings/splitter/form/builder/form-builder.component.html","./src/frontend/app/settings/splitter/form/list/form-list.component.ts","./src/frontend/app/settings/splitter/form/list/form-list.component.html","./src/frontend/app/settings/splitter/inputs/create/create-input.component.ts","./src/frontend/app/settings/splitter/inputs/create/create-input.component.html","./src/frontend/app/settings/splitter/inputs/list/input-list.component.ts","./src/frontend/app/settings/splitter/inputs/list/input-list.component.html","./src/frontend/app/settings/splitter/inputs/update/update-input.component.ts","./src/frontend/app/settings/splitter/inputs/update/update-input.component.html","./src/frontend/app/settings/splitter/output/create/create-output.component.ts","./src/frontend/app/settings/splitter/output/create/create-output.component.html","./src/frontend/app/settings/splitter/output/list/output-list.component.ts","./src/frontend/app/settings/splitter/output/list/output-list.component.html","./src/frontend/app/settings/splitter/output/update/update-output.component.ts","./src/frontend/app/settings/splitter/output/update/update-output.component.html","./src/frontend/app/settings/splitter/separator/separator.component.ts","./src/frontend/app/settings/splitter/separator/separator.component.html","./src/frontend/app/settings/verifier/display/display.component.ts","./src/frontend/app/settings/verifier/display/display.component.html","./src/frontend/app/settings/verifier/form/builder/form-builder.component.ts","./src/frontend/app/settings/verifier/form/builder/form-builder.component.html","./src/frontend/app/settings/verifier/form/list/form-list.component.ts","./src/frontend/app/settings/verifier/form/list/form-list.component.html","./src/frontend/app/settings/verifier/inputs/create/create-input.component.ts","./src/frontend/app/settings/verifier/inputs/create/create-input.component.html","./src/frontend/app/settings/verifier/inputs/list/inputs-list.component.ts","./src/frontend/app/settings/verifier/inputs/list/inputs-list.component.html","./src/frontend/app/settings/verifier/inputs/update/update-input.component.ts","./src/frontend/app/settings/verifier/inputs/update/update-input.component.html","./src/frontend/app/settings/verifier/outputs/create/create-output.component.ts","./src/frontend/app/settings/verifier/outputs/create/create-output.component.html","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.ts","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.html","./src/frontend/app/settings/verifier/outputs/update/update-output.component.ts","./src/frontend/app/settings/verifier/outputs/update/update-output.component.html","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.html","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.ts","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.html","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.html","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.ts","./src/frontend/app/splitter/document-type-factory/document-type-factory.component.html","./src/frontend/app/splitter/document-type/document-type.component.ts","./src/frontend/app/splitter/document-type/document-type.component.html","./src/frontend/app/splitter/list/splitter-list.component.ts","./src/frontend/app/splitter/list/splitter-list.component.html","./src/frontend/app/splitter/viewer/splitter-viewer.component.ts","./src/frontend/app/splitter/viewer/splitter-viewer.component.html","./src/frontend/app/statistics/statistics.component.ts","./src/frontend/app/statistics/statistics.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/app/verifier/list/verifier-list.component.ts","./src/frontend/app/verifier/list/verifier-list.component.html","./src/frontend/app/verifier/viewer/verifier-viewer.component.ts","./src/frontend/app/verifier/viewer/verifier-viewer.component.html","./src/frontend/main.ts","./src/frontend/services/auth.service.ts","./src/frontend/services/config.service.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/services/has-privilege.service.ts","./src/frontend/services/hint/hint.service.ts","./src/frontend/services/hint/hint.service.html","./src/frontend/services/history.service.ts","./src/frontend/services/last-url.service.ts","./src/frontend/services/local-storage.service.ts","./src/frontend/services/locale.service.ts","./src/frontend/services/login-redirect.service.ts","./src/frontend/services/login-required.service.ts","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/notifications/notification.service.html","./src/frontend/services/pipes/filter.pipe.ts","./src/frontend/services/privileges.service.ts","./src/frontend/services/services.module.ts","./src/frontend/services/settings.service.ts","./src/frontend/services/tasks-watcher/tasks-watcher.component.ts","./src/frontend/services/tasks-watcher/tasks-watcher.component.html","./src/frontend/services/user.service.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-customer.component.html',\n    styleUrls: ['./create-customer.component.scss']\n})\nexport class CreateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    customer        : any;\n    loading         : boolean       = true;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        }\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.loading = false;\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module', 'address1', 'postal_code', 'city'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n            address['module'] = this.currentModule;\n            this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    if (data) {\n                        customer['address_id'] = data.id;\n                    }\n                    this.http.post(environment['url'] + '/ws/accounts/customers/create', {'args': customer}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('accounts', 'create_customer', this.translate.instant('HISTORY-DESC.create-customer', {customer: customer['name']}));\n                            this.notify.success(this.translate.instant('ACCOUNTS.customer_created'));\n                            this.router.navigate(['/accounts/customers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/customers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex h-14 justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.create_customer' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { HistoryService } from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.scss']\n})\nexport class CustomersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'name', 'company_number', 'vat_number', 'siret', 'siren', 'module', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    allCustomers    : any         = [];\n    customers       : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/customers') || lastUrl === '/') {\n            if (this.localStorageService.get('customersPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('customersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('customersPageIndex');\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allCustomers = data.customers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadCustomers();\n    }\n\n    loadCustomers() {\n        this.http.get(environment['url'] + '/ws/accounts/customers/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                if (this.customers.length !== 0) {\n                    this.total = data.customers[0].total;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchCustomer(event: any) {\n        this.search = event.target.value;\n        this.loadCustomers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('customersPageIndex', event.pageIndex);\n        this.loadCustomers();\n    }\n\n    deleteConfirmDialog(customerId: number, customer: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_customer', {\"customer\": customer}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteCustomer(customerId);\n                this.historyService.addHistory('accounts', 'delete_customer', this.translate.instant('HISTORY-DESC.delete-customer', {customer: customer}));\n            }\n        });\n    }\n\n    deleteCustomer(customerId: number) {\n        if (customerId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/customers/delete/' + customerId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allCustomers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.customers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.customers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'company_number': return this.compare(a.company_number, b.company_number, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                default: return 0;\n            }\n        });\n        this.customers = this.customers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_customer' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchCustomer($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <button routerLink=\"/accounts/customers/create\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\" [matTooltip]=\"'ACCOUNTS.create_customer' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <mat-table matSort [dataSource]=\"customers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.customer_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"company_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.company_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.company_number }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.vat_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.vat_number }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siret' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.siret }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siren' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.siren }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"module\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.module }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/customers/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-customer.component.html',\n    styleUrls: ['./update-customer.component.scss']\n})\nexport class UpdateCustomerComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    customerId      : any;\n    addressId       : any;\n    customer        : any;\n    currentModule   : string        = '';\n    customerForm    : any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'module',\n            label: marker('CUSTOM-FIELDS.module'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [\n                {id: 'verifier', label: this.translate.instant('HOME.verifier')},\n                {id: 'splitter', label: this.translate.instant('HOME.splitter')}\n            ]\n        },\n    ];\n    addressForm     : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n    defaultValue    : Country       = {\n        name: 'France',\n        alpha2Code: '',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.customerId = this.route.snapshot.params['id'];\n        this.http.get(environment['url'] + '/ws/accounts/customers/getById/' + this.customerId, {headers: this.authService.headers}).pipe(\n            tap((customer: any) => {\n                this.customer = customer;\n                for (const field in this.customer) {\n                    if (field === 'module') {\n                        this.currentModule = this.customer[field];\n                        this.updateRequired({control: {value: this.currentModule}});\n                    }\n                }\n                for (const field in this.customer) {\n                    if (customer.hasOwnProperty(field)) {\n                        this.customerForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.customer[field]);\n                            } else if (field === 'address_id') {\n                                this.addressId = this.customer[field];\n                                if (this.addressId) {\n                                    this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                        tap((address: any) => {\n                                            for (const field in address) {\n                                                if (address.hasOwnProperty(field)) {\n                                                    this.addressForm.forEach(element => {\n                                                        if (element.id === field) {\n                                                            if (field === 'country') {\n                                                                this.defaultValue.name = address[field];\n                                                            }\n                                                            element.control.setValue(address[field]);\n                                                        }\n                                                    });\n                                                }\n                                            }\n                                        }),\n                                        finalize(() => this.loading = false),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                } else {\n                                    this.http.post(environment['url'] + '/ws/accounts/addresses/create',\n                                        {'args': {\n                                                'address1': '',\n                                                'address2': '',\n                                                'postal_code': '',\n                                                'city': '',\n                                                'country': '',\n                                                'module': this.currentModule\n                                            }\n                                        }, {headers: this.authService.headers},\n                                    ).pipe(\n                                        tap((data: any) => {\n                                            this.addressId = data.id;\n                                            this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                            ).pipe(\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err, '/accounts/customers/list');\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateRequired(field: any) {\n        let requiredFields: any = [];\n        this.currentModule = field.control.value;\n        if (field.control.value === 'splitter') {\n            requiredFields = ['name', 'module'];\n        } else {\n            requiredFields = ['name', 'vat_number', 'siret', 'siren', 'module', 'address1', 'postal_code', 'city'];\n        }\n\n        this.customerForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n        this.addressForm.forEach((element: any) => {\n            element.required = requiredFields.includes(element.id);\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/accounts/customers/update/' + this.customerId, {'args': customer}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('accounts', 'update_customer', this.translate.instant('HISTORY-DESC.update-customer', {customer: customer['name']}));\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_updated'));\n                    this.router.navigate(['/accounts/customers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex h-14 justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.customer\">\n                    {{ this.customer['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"updateRequired(field)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                {{ option['label'] | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_customer' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { Country } from '@angular-material-extensions/select-country';\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-supplier.component.html',\n    styleUrls: ['./create-supplier.component.scss']\n})\nexport class CreateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(true),\n            required: true,\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            hint: marker('ACCOUNTS.only_one_email'),\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: []\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        },\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true,\n        }\n    ];\n\n    defaultValue: Country = {\n        name: 'France',\n        alpha2Code: 'FR',\n        alpha3Code: 'FRA',\n        numericCode: '250',\n        callingCode: '+33'\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const forms = data.forms;\n                for (const cpt in forms) {\n                    if (forms.hasOwnProperty(cpt)) {\n                        this.supplierForm.forEach(element => {\n                            if (element.id === 'form_id') {\n                                element.values = forms;\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                    this.loading = false;\n                }\n            }\n        });\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    supplier['address_id'] = data.id;\n                    this.http.post(environment['url'] + '/ws/accounts/suppliers/create', {'args': supplier}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('accounts', 'create_supplier', this.translate.instant('HISTORY-DESC.create-supplier', {supplier: supplier['name']}));\n                            this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                            this.router.navigate(['/accounts/suppliers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n            if (element.control.errors && element.control.errors.email) {\n                error = this.translate.instant('ACCOUNTS.email_format_error');\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex h-14 justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }}\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field.control\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-7 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                        <mat-hint *ngIf=\"field.hint\" class=\"text-gray-600\">{{ field.hint | translate }}</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-7\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.create_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { HistoryService } from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'suppliers-list',\n    templateUrl: './suppliers-list.component.html',\n    styleUrls: ['./suppliers-list.component.scss']\n})\nexport class SuppliersListComponent implements OnInit {\n    columnsToDisplay : string[]    = ['id', 'name', 'email', 'vat_number', 'siret', 'siren', 'iban', 'form_label', 'actions'];\n    headers          : HttpHeaders = this.authService.headers;\n    loading          : boolean     = true;\n    allSuppliers     : any         = [];\n    suppliers        : any         = [];\n    pageSize         : number      = 10;\n    pageIndex        : number      = 0;\n    total            : number      = 0;\n    offset           : number      = 0;\n    search           : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/suppliers') || lastUrl === '/') {\n            if (this.localStorageService.get('suppliersPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('suppliersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('suppliersPageIndex');\n\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSuppliers = data.suppliers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadSuppliers();\n    }\n\n    loadSuppliers() {\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name&limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = data.suppliers;\n                if (this.suppliers.length !== 0) {\n                    this.total = data.suppliers[0].total;\n                }\n                this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        for (const cpt in this.suppliers) {\n                            for (const form of data.forms) {\n                                if (form.id === this.suppliers[cpt].form_id) {\n                                    this.suppliers[cpt].form_label = form.label;\n                                }\n                            }\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchSupplier(event: any) {\n        this.search = event.target.value;\n        this.loadSuppliers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('suppliersPageIndex', event.pageIndex);\n        this.loadSuppliers();\n    }\n\n    deleteConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplier(supplierId);\n                this.historyService.addHistory('accounts', 'delete_supplier', this.translate.instant('HISTORY-DESC.delete-supplier', {supplier: supplier}));\n            }\n        });\n    }\n\n    deletePositionsConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier_positions', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteSupplierPositions(supplierId);\n                this.historyService.addHistory('accounts', 'delete_supplier_positions', this.translate.instant('HISTORY-DESC.delete-supplier-positions', {supplier: supplier}));\n            }\n        });\n    }\n\n    skipAutoValidateConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_skip_auto_validate', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.skipAutoValidate(supplierId);\n                this.historyService.addHistory('accounts', 'skip_auto_validate', this.translate.instant('HISTORY-DESC.skip-auto-validate', {supplier: supplier}));\n            }\n        });\n    }\n\n    deleteSupplier(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/delete/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadSuppliers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    skipAutoValidate(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/skipAutoValidate/' + supplierId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.skip_validated_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deleteSupplierPositions(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/accounts/suppliers/deletePositions/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.positions_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allSuppliers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.suppliers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.suppliers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                case 'iban': return this.compare(a.iban, b.iban, isAsc);\n                default: return 0;\n            }\n        });\n        this.suppliers = this.suppliers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    getReferenceFile() {\n        this.http.get(environment['url'] + '/ws/accounts/supplier/getReferenceFile', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const mimeType = data.mimetype;\n                const referenceFile = 'data:' + mimeType + ';base64, ' + data.file;\n                const link = document.createElement(\"a\");\n                link.href = referenceFile;\n                link.download = data.filename;\n                link.click();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    importSuppliers(event: any) {\n        const file:File = event.target.files[0];\n        if (file) {\n            this.loading = true;\n            const formData: FormData = new FormData();\n            formData.append(file.name, file);\n            this.http.post(environment['url'] + '/ws/accounts/supplier/importSuppliers', formData, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.suppliers_referencial_loaded'));\n                    this.loadSuppliers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"settings_search\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_supplier' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchSupplier($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex\">\n                <input type=\"file\" class=\"hidden\" accept=\".csv, .ods, .xlsx\" (change)=\"importSuppliers($event)\" #suppliersUpload>\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('import_suppliers')\"\n                        [matTooltip]=\"'ACCOUNTS.import_suppliers' | translate\" (click)=\"suppliersUpload.click()\"\n                        [disabled]=\"this.loading\" class=\"ml-4\">\n                    <i class=\"fa-solid fa-file-import text-2xl ml-2\"></i>\n                </button>\n                <button [class.hidden]=\"!this.privilegesService.hasPrivilege('export_suppliers')\"\n                        (click)=\"getReferenceFile()\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.export_suppliers' | translate\" [disabled]=\"this.loading\">\n                    <i class=\"fa-solid fa-file-export text-2xl ml-2\"></i>\n                </button>\n                <button routerLink=\"/accounts/suppliers/create\" class=\"ml-4\"\n                        [matTooltip]=\"'ACCOUNTS.create_supplier' | translate\">\n                    <i class=\"fa-solid fa-plus text-2xl ml-2\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400\">\n        <mat-table matSort [dataSource]=\"suppliers\" (matSortChange)=\"sortData($event)\" class=\"w-full table\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'HEADER.id' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.id }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.supplier_name' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'FORMATS.email' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.email }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.vat_number' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.vat_number }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siret' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.siret }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.siren' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.siren }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"iban\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.iban' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.iban }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"form_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef>{{ 'ACCOUNTS.form' | translate }}</mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">{{ element.form_label }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deletePositionsConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete_supplier_positions' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-circle-xmark text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();skipAutoValidateConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.skip_auto_validate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-forward text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/suppliers/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { Country } from \"@angular-material-extensions/select-country\";\nimport { LocaleService } from \"../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-supplier.component.html',\n    styleUrls: ['./update-supplier.component.scss']\n})\nexport class UpdateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplierId: any;\n    addressId: any;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'iban',\n            label: marker('ACCOUNTS.iban'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'email',\n            label: marker('FORMATS.email'),\n            type: 'text',\n            control: new FormControl('', Validators.email),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values:[]\n        },\n        {\n            id: 'document_lang',\n            label: marker('ADDRESSES.document_lang'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: []\n        },\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'country',\n            control: new FormControl('France'),\n            required: true,\n        },\n    ];\n\n    defaultValue: Country = {\n        name: 'France',\n        alpha2Code: '',\n        alpha3Code: '',\n        numericCode: '',\n        callingCode: ''\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.supplierId = this.route.snapshot.params['id'];\n        this.supplierForm.forEach((element: any) => {\n            if (element.id === 'vat_number' || element.id === 'siret' || element.id === 'siren' || element.id === 'iban') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value && value.includes(' ')) {\n                        element.control.setValue(value.replace(' ', ''));\n                    }\n                });\n            }\n            if (element.id === 'document_lang') {\n                if (this.localeService.langs.length === 0) {\n                    this.http.get(environment['url'] + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            data.langs.forEach((lang: any) => {\n                                element.control.setValue('fra');\n                                element.values.push({\n                                    'id': lang[0],\n                                    'label': lang[1]\n                                });\n                            });\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.localeService.langs.forEach((lang: any) => {\n                        element.control.setValue('fra');\n                        element.values.push({\n                            'id': lang[0],\n                            'label': lang[1]\n                        });\n                    });\n                }\n            }\n        });\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.http.get(environment['url'] + '/ws/accounts/suppliers/getById/' + this.supplierId, {headers: this.authService.headers}).pipe(\n                    tap((supplier: any) => {\n                        this.supplier = supplier;\n                        for (const field in this.supplier) {\n                            if (supplier.hasOwnProperty(field)) {\n                                this.supplierForm.forEach(element => {\n                                    if (element.id === field) {\n                                        if (element.id === 'get_only_raw_footer') {\n                                            element.control.setValue(!this.supplier[field]);\n                                        } else {\n                                            element.control.setValue(this.supplier[field]);\n                                        }\n                                        if (element.id === 'form_id') {\n                                            element.values = forms.forms;\n                                        }\n                                    } else if (field === 'address_id') {\n                                        this.addressId = this.supplier[field];\n                                        if (this.addressId) {\n                                            this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                                tap((address: any) => {\n                                                    for (const adr_field in address) {\n                                                        if (address.hasOwnProperty(adr_field)) {\n                                                            this.addressForm.forEach(adr_element => {\n                                                                if (adr_element.id === adr_field) {\n                                                                    if (adr_field === 'country') {\n                                                                        this.defaultValue.name = address[adr_field];\n                                                                    }\n                                                                    adr_element.control.setValue(address[adr_field]);\n                                                                }\n                                                            });\n                                                        }\n                                                    }\n                                                }),\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        } else {\n                                            this.http.post(environment['url'] + '/ws/accounts/addresses/create',\n                                                {'args': {\n                                                        'address1': '',\n                                                        'address2': '',\n                                                        'postal_code': '',\n                                                        'city': '',\n                                                        'country': ''\n                                                    }\n                                                }, {headers: this.authService.headers},\n                                            ).pipe(\n                                                tap((data: any) => {\n                                                    this.addressId = data.id;\n                                                    this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                                    ).pipe(\n                                                        finalize(() => this.loading = false),\n                                                        catchError((err: any) => {\n                                                            console.debug(err);\n                                                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                                                            return of(false);\n                                                        })\n                                                    ).subscribe();\n                                                }),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onCountrySelected(country: Country) {\n        this.addressForm.forEach((element: any) => {\n            if (element.id === 'country') {\n                element.control.setValue(country['name']);\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': supplier}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('accounts', 'update_supplier', this.translate.instant('HISTORY-DESC.update-supplier', {supplier: supplier['name']}));\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n                    this.router.navigate(['/accounts/suppliers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n                if (element.control.errors && element.control.errors.email) {\n                    error = this.translate.instant('ACCOUNTS.email_format_error');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex h-14 justify-between items-center pl-2 pr-2 bg-green-400 bg-opacity-60 text-gray-900\">\n            <div class=\"flex\">\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.supplier\">\n                    {{ this.supplier['name'] }}\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400\">\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type === 'mat-slide-toggle'\" [formControl]=\"field.control\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-7 gap-2 w-full m-5 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id === 'address1'\" class=\"block\" *ngIf=\"field.type !== 'country'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-select-country class=\"w-full\" *ngIf=\"field.type === 'country'\"\n                                        [label]=\"field.label | translate\"\n                                        [value]=\"defaultValue\"\n                                        (onCountrySelected)=\"onCountrySelected($event)\">\n                    </mat-select-country>\n                </ng-container>\n                <div class=\"button col-span-7\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MomentDateAdapter,MAT_MOMENT_DATE_ADAPTER_OPTIONS,MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { DateAdapter } from '@angular/material/core';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule,\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule,\n    ],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]},\n        {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n    ],\n})\nexport class AppMaterialModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { HistoryComponent } from \"./history/history.component\";\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\nimport { Error500Component } from \"./errors/error-500/error-500.component\";\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterListComponent } from \"./splitter/list/splitter-list.component\";\nimport { SplitterViewerComponent } from \"./splitter/viewer/splitter-viewer.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { CustomersListComponent } from \"./accounts/customers/list/customers-list.component\";\nimport { SuppliersListComponent } from \"./accounts/suppliers/list/suppliers-list.component\";\nimport { UpdateSupplierComponent } from \"./accounts/suppliers/update/update-supplier.component\";\nimport { CreateSupplierComponent } from \"./accounts/suppliers/create/create-supplier.component\";\nimport { UpdateCustomerComponent } from \"./accounts/customers/update/update-customer.component\";\nimport { CreateCustomerComponent } from \"./accounts/customers/create/create-customer.component\";\n\nconst routes: Routes = [\n    { path: '500', component: Error500Component },\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent , data: { title: 'GLOBAL.home' }, canActivate: [LoginRequiredService] },\n    { path: 'login', component: LoginComponent , data: { title: 'GLOBAL.login' }, canActivate: [LoginRedirectService] },\n    { path: 'logout', component: LogoutComponent , canActivate: [LoginRequiredService] },\n    { path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService] },\n    {\n        path: 'splitter/viewer/:currentTime/:id', component: SplitterViewerComponent,\n        data: { title: marker('SPLITTER.viewer'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'splitter/list', component: SplitterListComponent,\n        data: { title: marker('SPLITTER.list'), privileges: ['access_splitter'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full' },\n    {\n        path: 'verifier/viewer/:id', component: VerifierViewerComponent,\n        data: { title: marker('VERIFIER.viewer'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'verifier/list', component: VerifierListComponent,\n        data: { title: marker('VERIFIER.list'), privileges: ['access_verifier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full' },\n\n    {\n        path: 'upload', component: UploadComponent,\n        data: { title: marker('GLOBAL.upload'), privileges: ['upload'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'history', component: HistoryComponent,\n        data: { title: marker('GLOBAL.history'), privileges: ['history'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'statistics', component: StatisticsComponent,\n        data: { title: marker('GLOBAL.statistics'), privileges: ['statistics'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: 'accounts/suppliers', redirectTo: 'accounts/suppliers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/suppliers/list', component: SuppliersListComponent,\n        data: { title: marker('ACCOUNTS.suppliers_list'), privileges: ['suppliers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/update/:id', component: UpdateSupplierComponent,\n        data: { title: marker('ACCOUNTS.update_supplier'), privileges: ['update_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/suppliers/create', component: CreateSupplierComponent,\n        data: { title: marker('ACCOUNTS.create_supplier'), privileges: ['create_supplier'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n    { path: 'accounts/customers', redirectTo: 'accounts/customers/list', pathMatch: 'full' },\n    {\n        path: 'accounts/customers/list', component: CustomersListComponent,\n        data: { title: marker('ACCOUNTS.customers_list'), privileges: ['customers_list'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/update/:id', component: UpdateCustomerComponent,\n        data: { title: marker('ACCOUNTS.update_customer'), privileges: ['update_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'accounts/customers/create', component: CreateCustomerComponent,\n        data: { title: marker('ACCOUNTS.create_customer'), privileges: ['create_customer'] },\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    { path: '404', component: NotFoundComponent }, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    { path: '**', redirectTo: '404' }, // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"./env\";\nimport { Location } from '@angular/common';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocaleService } from \"../services/locale.service\";\nimport { catchError, filter, map, tap } from 'rxjs/operators';\nimport { DomSanitizer, SafeUrl, Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { LocalStorageService } from \"../services/local-storage.service\";\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport { AfterContentChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit, AfterContentChecked {\n    title       : string = 'Open-Capture';\n    image       : SafeUrl = '';\n    imageMobile : string = '';\n    loading     : boolean = true;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        public location: Location,\n        private titleService: Title,\n        private sanitizer: DomSanitizer,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n        private activatedRoute: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                let child = this.activatedRoute.firstChild;\n                let childImage = 'assets/imgs/login_image.png';\n                let childImageMobile = 'assets/imgs/Open-Capture_Verifier.svg';\n                let splitterOrVerifier;\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n                    if (this.router.url !== '/home' && !this.router.url.includes('settings')) {\n                        splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n                        if (splitterOrVerifier !== undefined) {\n                            if (splitterOrVerifier === 'splitter') {\n                                childImage = 'assets/imgs/logo_splitter.png';\n                                childImageMobile = 'assets/imgs/Open-Capture_Splitter.png';\n                            } else {\n                                childImage = 'assets/imgs/logo_verifier.png';\n                            }\n                        }\n                    }\n\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], childImage, childImageMobile, splitterOrVerifier];\n                    }\n                }\n                return [appTitle, childImage, childImageMobile, splitterOrVerifier];\n            })\n        ).subscribe((data: any) => {\n            const ttl = data[0];\n            this.image = data[1];\n            this.imageMobile = data[2];\n            const splitterOrVerifier = data[3];\n            if (!splitterOrVerifier) {\n                const b64Content = this.localStorageService.get('login_image_b64');\n                if (!b64Content) {\n                    this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                        tap((data: any) => {\n                            this.localStorageService.save('login_image_b64', data);\n                            this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.image = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n                }\n            }\n            if (this.localeService.currentLang === undefined) {\n                this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                    tap((data: any) => {\n                        this.translate.use(data.lang);\n                        this.translate.get(ttl).subscribe((data:any)=> {\n                            this.titleService.setTitle(data + ' - ' + this.title);\n                        });\n                        this.loading = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.translate.get(ttl).subscribe((data:any)=> {\n                    this.titleService.setTitle(data + ' - ' + this.title);\n                });\n                this.loading = false;\n            }\n        });\n    }\n\n    ngAfterContentChecked(): void {\n        this.changeDetector.detectChanges();\n    }\n}\n","<app-menu [image]=\"this.image\" [imageMobile]=\"this.imageMobile\" *ngIf=\"this.location.path() !== '/login' && this.location.path() !== '/404' && loading === this.loading\"></app-menu>\n\n<router-outlet></router-outlet>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsRoutingModule } from './settings/settings-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/splitter-viewer.component';\nimport { SplitterListComponent } from './splitter/list/splitter-list.component';\n\nimport { FilterPipe } from '../services/pipes/filter.pipe';\nimport { NgxFileDragDropModule } from 'ngx-file-drag-drop';\nimport { NgClickOutsideModule } from 'ng-click-outside2';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { NgsgModule } from 'ng-sortgrid';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { DocumentTypeFactoryComponent } from './splitter/document-type-factory/document-type-factory.component';\nimport { DocumentTypeComponent } from './splitter/document-type/document-type.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { UsersListComponent } from './settings/general/users/list/users-list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { CustomMatPaginatorIntl } from './custom-mat-paginator';\nimport { LastUrlService } from '../services/last-url.service';\nimport { AboutUsComponent } from './settings/general/about-us/about-us.component';\nimport { CreateUserComponent } from './settings/general/users/create/create-user.component';\nimport { UpdateUserComponent } from './settings/general/users/update/update-user.component';\nimport { RolesListComponent } from './settings/general/roles/list/roles-list.component';\nimport { UpdateRoleComponent } from './settings/general/roles/update/update-role.component';\nimport { CreateRoleComponent } from './settings/general/roles/create/create-role.component';\nimport { LoginMethodsComponent } from './settings/general/login-methods/login-methods.component';\nimport { LoaderComponent } from './loader.component';\nimport { CustomFieldsComponent } from './settings/general/custom-fields/custom-fields.component';\nimport { FormListComponent } from './settings/verifier/form/list/form-list.component';\nimport { FormBuilderComponent } from './settings/verifier/form/builder/form-builder.component';\nimport { SuppliersListComponent } from './accounts/suppliers/list/suppliers-list.component';\nimport { UpdateSupplierComponent } from './accounts/suppliers/update/update-supplier.component';\nimport { CreateSupplierComponent } from './accounts/suppliers/create/create-supplier.component';\nimport { CustomersListComponent } from './accounts/customers/list/customers-list.component';\nimport { UpdateCustomerComponent } from './accounts/customers/update/update-customer.component';\nimport { CreateCustomerComponent } from './accounts/customers/create/create-customer.component';\nimport { CreateOutputComponent } from './settings/verifier/outputs/create/create-output.component';\nimport { OutputsListComponent } from './settings/verifier/outputs/list/outputs-list.component';\nimport { HighlightPipe, UpdateOutputComponent } from './settings/verifier/outputs/update/update-output.component';\nimport { CreateInputComponent } from './settings/verifier/inputs/create/create-input.component';\nimport { InputsListComponent } from './settings/verifier/inputs/list/inputs-list.component';\nimport { UpdateInputComponent } from './settings/verifier/inputs/update/update-input.component';\nimport { UpdatePositionsMaskComponent } from './settings/verifier/positions-mask/update/update-positions-mask.component';\nimport { PositionsMaskListComponent } from './settings/verifier/positions-mask/list/positions-mask-list.component';\nimport { CreatePositionsMaskComponent } from './settings/verifier/positions-mask/create/create-positions-mask.component';\nimport { HistoryComponent } from './history/history.component';\nimport { SeparatorComponent } from './settings/splitter/separator/separator.component';\nimport { SplitterCreateInputComponent } from './settings/splitter/inputs/create/create-input.component';\nimport { SplitterUpdateInputComponent } from './settings/splitter/inputs/update/update-input.component';\nimport { SplitterInputListComponent } from './settings/splitter/inputs/list/input-list.component';\nimport { SplitterUpdateOutputComponent } from './settings/splitter/output/update/update-output.component';\nimport { SplitterCreateOutputComponent } from './settings/splitter/output/create/create-output.component';\nimport { SplitterOutputListComponent } from './settings/splitter/output/list/output-list.component';\nimport { SplitterFormBuilderComponent } from './settings/splitter/form/builder/form-builder.component';\nimport { SplitterFormListComponent } from './settings/splitter/form/list/form-list.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { CreateDocTypeComponent } from './settings/splitter/doc-types/create/create-doc-type.component';\nimport { ListDocTypeComponent } from './settings/splitter/doc-types/list/list-doc-type.component';\nimport { CreateFolderDocTypeComponent } from './settings/splitter/doc-types/create-folder/create-folder-doc-type.component';\nimport { ListAiModelComponent } from \"./settings/splitter/ai-model/list/list-ai-model.component\";\nimport { CreateAiModelComponent } from \"./settings/splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateAiModelComponent } from \"./settings/splitter/ai-model/update/update-ai-model.component\";\nimport { ConfigurationsComponent } from './settings/general/configurations/configurations.component';\nimport { DocserversComponent } from './settings/general/docservers/docservers.component';\nimport { RegexComponent } from './settings/general/regex/regex.component';\nimport { HintServiceComponent } from \"../services/hint/hint.service\";\nimport { Error500Component } from './errors/error-500/error-500.component';\nimport { MatSelectCountryModule } from \"@angular-material-extensions/select-country\";\nimport { MiddlewareComponent } from \"./middleware.component\";\nimport { VerifierDisplayComponent } from './settings/verifier/display/display.component';\nimport { MailCollectComponent } from './settings/general/mailcollect/mailcollect.component';\nimport { UserQuotaComponent } from './settings/general/user-quota/user-quota.component';\nimport { SettingsMenuComponent } from './settings/settings-menu.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        HighlightPipe,\n        AppComponent,\n        VerifierViewerComponent,\n        VerifierListComponent,\n        SplitterListComponent,\n        SplitterViewerComponent,\n        DocumentTypeFactoryComponent,\n        DocumentTypeComponent,\n        LoginComponent,\n        LogoutComponent,\n        HomeComponent,\n        MenuComponent,\n        NotFoundComponent,\n        UserProfileComponent,\n        UploadComponent,\n        UsersListComponent,\n        SettingsComponent,\n        AboutUsComponent,\n        RolesListComponent,\n        CreateUserComponent,\n        UpdateUserComponent,\n        UpdateRoleComponent,\n        CreateRoleComponent,\n        LoaderComponent,\n        CustomFieldsComponent,\n        SeparatorComponent,\n        FormBuilderComponent,\n        FormListComponent,\n        SuppliersListComponent,\n        UpdateSupplierComponent,\n        CreateSupplierComponent,\n        CustomersListComponent,\n        CreateCustomerComponent,\n        UpdateCustomerComponent,\n        CreateOutputComponent,\n        OutputsListComponent,\n        UpdateOutputComponent,\n        CreateInputComponent,\n        InputsListComponent,\n        UpdateInputComponent,\n        UpdatePositionsMaskComponent,\n        PositionsMaskListComponent,\n        CreatePositionsMaskComponent,\n        FilterPipe,\n        SplitterFormListComponent,\n        SplitterFormBuilderComponent,\n        SplitterCreateInputComponent,\n        SplitterUpdateInputComponent,\n        SplitterInputListComponent,\n        SplitterUpdateOutputComponent,\n        SplitterCreateOutputComponent,\n        SplitterOutputListComponent,\n        ListAiModelComponent,\n        CreateAiModelComponent,\n        UpdateAiModelComponent,\n        HistoryComponent,\n        StatisticsComponent,\n        CreateDocTypeComponent,\n        ListDocTypeComponent,\n        CreateFolderDocTypeComponent,\n        ConfigurationsComponent,\n        DocserversComponent,\n        RegexComponent,\n        HintServiceComponent,\n        Error500Component,\n        LoginMethodsComponent,\n        VerifierDisplayComponent,\n        MailCollectComponent,\n        UserQuotaComponent,\n        SettingsMenuComponent\n    ],\n    imports: [\n        BrowserModule,\n        SettingsRoutingModule,\n        AppRoutingModule,\n        AppMaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ServicesModule,\n        NgsgModule,\n        NgxChartsModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'fra',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        FormsModule,\n        NgxFileDragDropModule,\n        NgClickOutsideModule,\n        DragDropModule,\n        NgxMatSelectSearchModule,\n        MatSelectCountryModule.forRoot('fr')\n    ],\n    providers: [\n        Title,\n        TranslateService,\n        LastUrlService,\n        HintServiceComponent,\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'outline'}},\n        {\n            provide: MatPaginatorIntl,\n            useClass: CustomMatPaginatorIntl\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: MiddlewareComponent,\n            multi: true,\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {}\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from  \"./env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"../services/locale.service\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private http: HttpClient,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        if (this.localeService.currentLang === undefined) {\n            this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n                tap((data: any) => {\n                    this.translate.use(data.lang);\n                    this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                        this.itemsPerPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                        this.nextPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                        this.firstPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                        this.lastPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                        this.previousPageLabel = translated;\n                    });\n                    this.changes.next();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                this.itemsPerPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                this.nextPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                this.firstPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                this.lastPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                this.previousPageLabel = translated;\n            });\n            this.changes.next();\n        }\n    }\n\n    override getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length === 0 || pageSize === 0) { return '0 ' + this.translate.instant('PAGINATOR.of') + ` ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ?\n            Math.min(startIndex + pageSize, length):\n            startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        return ` ${startIndex + 1} - ${endIndex} ` + this.translate.instant('PAGINATOR.on') + ` ${length} ` + ' | ' +\n            this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    };\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\ndeclare const require: any;\n\nexport const environment = {\n    url: 'http://localhost:5000',\n    customId: '',\n    fqdn: '',\n    production: false,\n    version: require('../../../package.json').version + ' (development mode)'\n};\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../../../services/user.service\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error-500.component.html',\n    styleUrls: ['./error-500.component.scss']\n})\nexport class Error500Component implements OnInit {\n\n    constructor(\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0 flex justify-center\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"flex items-center\">\n        <div class=\"text-center\">\n            <div class=\"relative text-gray-900 -top-28\" style=\"font-size: 15rem\">\n                500\n            </div>\n            <div class=\"relative text-green-400 top-14\">\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 3s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin fa-spin-reverse mx-4\" style=\"--fa-animation-duration: 3.5s;\"></i>\n                <i class=\"fa-solid fa-gear fa-3x fa-spin mx-4\" style=\"--fa-animation-duration: 4s;\"></i>\n            </div>\n            <div class=\"relative top-28 text-5xl\" [innerHTML]=\"'ERROR.500' | translate\"></div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { DatePipe } from '@angular/common';\nimport { UserService } from \"../../services/user.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    providers: [DatePipe]\n})\nexport class HistoryComponent implements OnInit {\n    filteredUsers       : Observable<any> | undefined;\n    columnsToDisplay    : string[] = ['id', 'history_module', 'history_submodule', 'history_date', 'user_info', 'history_desc', 'user_ip'];\n    loading             : boolean  = true;\n    toHighlight         : string   = '';\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    history             : any;\n    users               : any;\n    userSelected        : string = '';\n    moduleSelected      : string = '';\n    subModuleSelected   : string = '';\n    form                : any[]    = [\n        {\n            'id': 'user_id',\n            'type': 'autocomplete',\n            'label': this.translate.instant('HISTORY.user'),\n            'control': new FormControl(),\n            'values': []\n        },\n        {\n            'id': 'module',\n            'label': this.translate.instant('CUSTOM-FIELDS.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'general',\n                    'label': this.translate.instant('HISTORY.general')\n                },\n                {\n                    'id': 'accounts',\n                    'label': this.translate.instant('HISTORY.accounts')\n                },\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'submodule',\n            'type': 'select',\n            'label': this.translate.instant('HISTORY.submodule'),\n            'control': new FormControl(),\n            'values': []\n        },\n    ];\n\n    constructor(\n        private http: HttpClient,\n        private datePipe: DatePipe,\n        private userService: UserService,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService,\n    ) {}\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.users = [];\n                this.form.forEach((element: any) => {\n                    if (element.id === 'user_id') {\n                        this.http.get(environment['url'] + '/ws/history/users', {headers: this.authService.headers}).pipe(\n                            tap((userHistory: any) => {\n                                userHistory.history.forEach((_user: any) => {\n                                    data.users.forEach((user: any) => {\n                                        if (_user.user_id === user.id) {\n                                            this.users.push(user);\n                                        }\n                                    });\n                                });\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.filteredUsers = element.control.valueChanges\n                            .pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.users) : this.users)\n                            );\n                    } else if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadHistory();\n    }\n\n    loadHistory() {\n        this.http.get(\n            environment['url'] + '/ws/history/list?limit=' + this.pageSize + '&offset=' + this.offset + '&user=' + this.userSelected + '&submodule=' + this.subModuleSelected + '&module=' + this.moduleSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.history[0]) this.total = data.history[0].total;\n                this.history = data.history;\n                this.form.forEach((element: any) => {\n                    if (element.id === 'module') {\n                        element.values.forEach((module: any) => {\n                            this.history.forEach((history: any) => {\n                                if (history.history_module === module.id) {\n                                    history.history_module = this.translate.instant(module.label);\n                                }\n                            });\n                        });\n                    }\n                    if (element.id === 'submodule') {\n                        this.http.get(environment['url'] + '/ws/history/submodules?module=' + this.moduleSelected, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n\n                this.history.forEach((element: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    element.history_date = this.datePipe.transform(element.history_date, format + ' HH:mm:ss');\n                });\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.loading = true;\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n    }\n\n    setSelectedUser(userId: any) {\n        this.userSelected = userId;\n        this.pageIndex = 0;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedModule(module: any) {\n        this.moduleSelected = module;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedSubModule(subModule: any) {\n        this.subModuleSelected = subModule;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    resetFilter() {\n        this.subModuleSelected = '';\n        this.moduleSelected = '';\n        this.userSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadHistory();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadHistory();\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    sortData(sort: Sort) {\n        const data = this.history.slice();\n        if (!sort.active || sort.direction === '') {\n            this.history = data;\n            return;\n        }\n\n        this.history = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'history_module': return this.compare(a.history_module, b.history_module, isAsc);\n                case 'history_submodule': return this.compare(a.history_submodule, b.history_submodule, isAsc);\n                case 'history_date': return this.compare(a.history_date, b.history_date, isAsc);\n                case 'user_info': return this.compare(a.user_info, b.user_info, isAsc);\n                case 'history_desc': return this.compare(a.history_desc, b.history_desc, isAsc);\n                case 'user_ip': return this.compare(a.user_ip, b.user_ip, isAsc);\n                default: return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900\">\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center\">\n            <div class=\"m-auto w-1/12 text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n            <form class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                <ng-container *ngFor=\"let field of form\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id === 'submodule'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"setSelectedSubModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['history_submodule']\">{{ option['history_submodule'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id === 'module'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"setSelectedModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'autocomplete'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                        <mat-hint *ngIf=\"field.hint\" class=\"text-gray-600\">{{ field.hint }}</mat-hint>\n                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\"\n                                          (optionSelected)=\"setSelectedUser($event.option.id)\">\n                            <mat-option *ngFor=\"let option of filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                <span [innerHTML]=\"option.lastname + ' ' + option.firstname + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                 [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                <i class=\"fa-solid fa-sync-alt\"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n        <div class=\"flex justify-center\">\n            <mat-table matSort [dataSource]=\"history\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 180px!important;\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 180px!important;\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_module\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'CUSTOM-FIELDS.module' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.history_module }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_submodule\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 190px!important;\"> {{ 'HISTORY.submodule' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 190px!important;\"> {{ element.history_submodule }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_date\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'HISTORY.history_date' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.date }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_info\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'HISTORY.user_info' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.user_info }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_desc\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HISTORY.history_desc' | translate }} </mat-header-cell>\n                    <mat-cell class=\"p-0.5\" *matCellDef=\"let element\" [innerHTML]=\"'<span>' + element.history_desc + '</span>'\"></mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_ip\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 350px !important\"> {{ 'HISTORY.user_ip' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 350px !important\"> {{ element.user_ip }} </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"hover:text-green-400 select-none hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n        </div>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_splitter')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 20rem\"></div>\n        </a>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card *ngIf=\"this.privilegesService.hasPrivilege('access_verifier')\"\n              class=\"text-center w-full 2xl:w-1/5 lg:w-1/3 sm:w-1/2 shadow-lg transition duration-500 ease-in-out\n                     transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier md:w-full bg-no-repeat bg-center h-64 transition duration-500 ease-in-out hover:opacity-30\" style=\"background-size: 12rem\"></div>\n        </a>\n        <mat-card-subtitle class=\"mb-5\">\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../../services/user.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Router } from \"@angular/router\";\nimport { LastUrlService } from \"../../services/last-url.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private userService: UserService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        this.setValue('');\n        this.localStorageService.save('task_watcher_minimize_display', 'true');\n        const splitter = this.privilegesService.hasPrivilege('access_splitter');\n        const verifier = this.privilegesService.hasPrivilege('access_verifier');\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl === '/login') {\n            if (verifier && !splitter) {\n                this.router.navigate(['/verifier/list']).then();\n            } else if (splitter && !verifier) {\n                this.router.navigate(['/splitter/list']).then();\n            }\n        }\n    }\n\n    setValue(value: string) {\n        this.localStorageService.save('splitter_or_verifier', value);\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-loader',\n    template:\n        '<div class=\"w-full h-full\">' +\n        '    <div id=\"preloader\" class=\"absolute inset-0 bg-white z-30\">' +\n        '            <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">' +\n        '                <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"' +\n        '                     height=\"300\">' +\n        '                    <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">' +\n        '                        <stop offset=\"0%\" stop-color=\"#76B442\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                        <stop offset=\"100%\" stop-color=\"#A7A8AA\">' +\n        '                            <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"' +\n        '                                     repeatCount=\"indefinite\"></animate>' +\n        '                        </stop>' +\n        '                    </linearGradient>' +\n        '                    <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7' +\n        '                            c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1' +\n        '                            c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4' +\n        '                            L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7' +\n        '                            C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>' +\n        '            </svg>' +\n        '        </div>' +\n        '    </div>' +\n        '</div>',\n})\n\nexport class LoaderComponent implements OnInit {\n\n    ngOnInit() {\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../env\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { HistoryService } from \"../../services/history.service\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm               : any;\n    enableLoginMethodName   : any;\n    loginImage              : SafeUrl = '';\n    loading                 : boolean = true;\n    processLogin            : boolean = false;\n    showPassword            : boolean = false;\n    isConnectionBtnDisabled : boolean = true;\n    subtitle                : string  = '';\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n\n        this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n            tap((data: any) => {\n                this.localStorageService.save('login_image_b64', data);\n                this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/loginMessage', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.subtitle = data.configuration[0].data.value;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/auth/getEnabledLoginMethod', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const login_method_name = data['login_method_name'][0];\n                this.enableLoginMethodName = login_method_name['method_name'];\n                this.isConnectionBtnDisabled = false;\n            }),\n            catchError((err: any) => {\n                this.isConnectionBtnDisabled = true;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onSubmit() {\n        const password = this.loginForm.get('password').value;\n        const username = this.loginForm.get('username').value;\n        if (password && username) {\n            this.processLogin = true;\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())));\n                    this.localStorageService.save('task_watcher_minimize_display', 'true');\n                    this.authService.generateHeaders();\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                    this.historyService.addHistory('general', 'login', this.translate.instant('HISTORY-DESC.login'));\n                        if (this.authService.getCachedUrl()) {\n                            this.router.navigate([this.authService.getCachedUrl()]).then(() => {\n                                if (data.body.admin_password_alert) {\n                                    this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                }\n                            });\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.router.navigate(['/home']).then(() => {\n                                if (data.body.admin_password_alert) {\n                                    this.notify.error(this.translate.instant('ERROR.admin_password_alert'));\n                                }\n                            });\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    this.processLogin = false;\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if (this.loginForm.get(field).hasError('required'))\n            return this.translate.instant('AUTH.field_required');\n        return this.translate.instant('ERROR.unknow_error');\n    }\n}\n","<div class=\"relative top-16 2xl:top-32 flex justify-center h-20\" *ngIf=\"this.loginImage\">\n    <img [src]=\"this.loginImage\" alt=\"Open-Capture logo\">\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <app-loader *ngIf=\"this.loading\"></app-loader>\n    <mat-card class=\"text-center w-full 2xl:w-1/4 sm:w-1/2\">\n        <mat-card-title class=\"mb-5\">\n            {{ 'GLOBAL.login' | translate }}\n        </mat-card-title>\n        <mat-card-subtitle class=\"mt-5 mb-5\">\n            {{ this.subtitle }}\n        </mat-card-subtitle>\n        <mat-card-content>\n            <form [formGroup]=\"this.loginForm\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                    <input matInput formControlName=\"username\" type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                    <mat-error *ngIf=\"this.loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                    <input matInput name=\"password\" autocomplete=\"off\" formControlName=\"password\"\n                           [type]=\"this.showPassword ? 'text' : 'password'\"\n                           placeholder=\"{{ 'USER.password' | translate }}\" required>\n                    <mat-icon matSuffix (click)=\"this.showPassword = !this.showPassword\"\n                              class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                        <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"!this.showPassword\" [class.fa-eye]=\"this.showPassword\"></i>\n                    </mat-icon>\n                    <mat-error *ngIf=\"this.loginForm.controls.password.invalid\">\n                        {{ getErrorMessage('password') }}\n                    </mat-error>\n                    <mat-hint align=\"end\" *ngIf=\"this.enableLoginMethodName === 'ldap'\">\n                        <span class=\"underline decoration-1\" >\n                            {{ this.enableLoginMethodName | uppercase }} {{ 'LOGIN-METHODS.enabled' | translate }}\n                        </span>\n                    </mat-hint>\n                </mat-form-field>\n                <button mat-button [disabled]=\"this.processLogin || this.isConnectionBtnDisabled\"\n                        class=\"w-1/3 p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                               transition duration-300\" type=\"submit\">\n                    <span *ngIf=\"!this.processLogin && !this.isConnectionBtnDisabled\">\n                        {{ 'AUTH.login' | translate }}\n                    </span>\n                    <i *ngIf=\"this.processLogin || this.isConnectionBtnDisabled\"\n                       class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n            </form>\n        </mat-card-content>\n        <span class=\"relative my-4 text-green-400 font-bold\">\n            <a href=\"https://kutt.it/GuideDutilisation\" target=\"_blank\">\n                {{ 'GLOBAL.utilisation_guide' | translate }}\n            </a>\n        </span>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { HistoryService } from \"../../services/history.service\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.historyService.addHistory('general', 'logout', this.translate.instant('HISTORY-DESC.logout'));\n        this.authService.logout();\n    }\n}\n","<app-tasks-watcher></app-tasks-watcher>\n<nav style=\"background: #f8f9fa\" class=\"shadow-md relative z-40\">\n    <div class=\"mx-auto px-2 sm:px-6 lg:px-8\" style=\"max-width: 100rem\">\n        <div class=\"relative flex items-center justify-between h-16 z-50\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center md:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white\n                        hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\"\n                        aria-expanded=\"false\">\n                    <svg *ngIf=\"!this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"this.mobileMenuState\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 items-center sm:hidden xl:flex\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.image\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"flex-shrink-0 items-center sm:flex xl:hidden\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.imageMobile\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden md:block sm:ml-3\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                [class.text-gray-500]=\"!location.path().includes('/home')\"\n                                [class.bg-transparent]=\"!location.path().includes('/home')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/verifier\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'verifier'\"\n                                [class.text-gray-500]=\"!location.path().includes('/verifier') || location.path().includes('/settings')\"\n                                [class.bg-transparent]=\"!location.path().includes('/verifier') || location.path().includes('/settings')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/splitter\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() === 'splitter'\"\n                                [class.text-gray-500]=\"!location.path().includes('/splitter') || location.path().includes('/settings')\"\n                                [class.bg-transparent]=\"!location.path().includes('/splitter') || location.path().includes('/settings')\"\n                                class=\"hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && getSplitterOrVerifier() !== undefined && getSplitterOrVerifier() !== '' && getSplitterOrVerifier() !== null\"\n                                [disabled]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.cursor-not-allowed]=\"!privilegesService.hasPrivilege('upload')\"\n                                [class.hover:bg-gray-500]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.hover:text-white]=\"privilegesService.hasPrivilege('upload')\"\n                                [class.text-gray-500]=\"!location.path().includes('/upload')\"\n                                [class.bg-transparent]=\"!location.path().includes('/upload')\"\n                                class=\"px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex absolute inset-y-0 right-0 items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <!-- Profile dropdown -->\n                <div class=\"ml-3 mr-0 md:mr-2 relative\">\n                    <div *ngIf=\"this.userService.user\">\n                        <button [class.settings_active]=\"location.path().includes('profile/' + this.userService.user['id'])\"\n                                mat-mini-fab (click)=\"toggleProfileDropdown()\" id=\"user-menu\" aria-haspopup=\"true\"\n                                [matTooltip]=\"this.translate.instant('USER.my_profile')\"\n                                (clickOutside)=\"closeprofileDropDown()\"\n                                class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                            <i class=\"fa-solid fa-users-cog\"></i>\n                        </button>\n                    </div>\n                    <div [class.hidden]=\"!this.profileDropdownCurrentState\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                         role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\" *ngIf=\"this.userService.user\">\n                        <span class=\"block text-center mb-2 text-gray-900\">\n                            <strong>{{ this.userService.user['lastname'] }}</strong> {{ this.userService.user['firstname'] }} ({{ this.userService.user['username'] }})\n                            <i *ngIf=\"this.userService.user['role']\">{{ this.userService.user['role']['label'] }}</i>\n                            <hr>\n                        </span>\n                        <a (click)=\"closeprofileDropDown()\" routerLink=\"/profile/{{ this.userService.user['id'] }}\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                            {{ 'USER.my_profile' | translate }}\n                        </a>\n                        <a (click)=\"closeprofileDropDown()\"\n                           routerLink=\"/logout\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\" role=\"menuitem\">\n                            {{ 'GLOBAL.log_out' | translate }}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ml-3 mr-0 md:mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/settings\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            [matTooltip]=\"this.translate.instant('GLOBAL.settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-cog\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('history')\">\n                    <button id=\"history-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/history\"\n                            [class.settings_active]=\"location.path().includes('history')\"\n                            [matTooltip]=\"'GLOBAL.history' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-history\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('statistics')\">\n                    <button id=\"statistics-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/statistics\"\n                            [class.settings_active]=\"location.path().includes('statistics')\"\n                            [matTooltip]=\"'GLOBAL.statistics' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-chart-bar\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative hidden md:block\" *ngIf=\"false && this.privilegesService.hasPrivilege('monitoring')\">\n                    <button id=\"monitoring-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/statistics\"\n                            [class.settings_active]=\"location.path().includes('monitoring')\"\n                            [matTooltip]=\"'GLOBAL.monitoring' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-magnifying-glass-chart\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative border-l border-green-400 pl-5 hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('suppliers_list')\">\n                    <button id=\"supplier-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/suppliers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/suppliers')\"\n                            [matTooltip]=\"'ACCOUNTS.suppliers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-city\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('customers_list')\">\n                    <button id=\"customer-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/customers\"\n                            [class.settings_active]=\"this.location.path().includes('accounts/customers')\"\n                            [matTooltip]=\"'ACCOUNTS.customers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fa-solid fa-users\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative hidden md:block\" *ngIf=\"this.privilegesService.hasPrivilege('change_language')\">\n                    <mat-form-field class=\"language origin-top-right right-0 mt-4 w-32\">\n                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                        <mat-select (selectionChange)=\"this.localeService.changeLocale($event)\"\n                                    [disabled]=\"this.localeService.localeLoading\"\n                                    [(value)]=\"this.localeService.currentLang\">\n                            <mat-option *ngFor=\"let lang of this.localeService.langs\" [value]=\"lang[0]\">\n                                {{ lang[1] }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <i *ngIf=\"this.localeService.localeLoading\"\n                       class=\"fa-solid fa-earth-europe fa-beat fa-lg text-gray-900 ml-4\"></i>\n                </div>\n                <div class=\"ml-6 relative\">\n                    <span class=\"text-gray-600\" *ngIf=\"this.userService.user\">\n                        <strong>{{ this.userService.user['lastname'] }}</strong>\n                        {{ this.userService.user['firstname'] }} ({{ this.userService.user['username'] }})\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Location } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Component, Input, OnInit } from '@angular/core';\nimport { UserService } from \"../../services/user.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss']\n})\n\nexport class MenuComponent implements OnInit {\n    @Input() image              : any;\n    @Input() imageMobile        : any;\n    profileDropdownCurrentState : boolean = false;\n    mobileMenuState             : boolean = false;\n\n    constructor(\n        public router: Router,\n        public location: Location,\n        public authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        public localeService: LocaleService,\n        public privilegesService: PrivilegesService,\n        public localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            this.userService.user = this.userService.getUserFromLocal();\n        }, 100);\n        if (this.userService.user) {\n            this.localeService.getLocales();\n            this.localeService.getCurrentLocale();\n        }\n        const k = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];\n        let n = 0;\n        document.addEventListener('keydown', (e) => {\n            if (e.keyCode === k[n++]) {\n                if (n === k.length) {\n                    const audio = new Audio(\"assets/imgs/konami.mp3\");\n                    const konami = document.getElementById('konami'); //.fadeIn(\"slow\").delay(3000).fadeOut();\n                    konami!.style.display = \"block\";\n                    konami!.style.transition = \"opacity .5s\";\n                    konami!.style.opacity = \"1\";\n                    setTimeout(() => {\n                        konami!.style.transition = \"opacity 1s\";\n                        konami!.style.opacity = \"0\";\n                        setTimeout(() => {\n                            konami!.style.display = \"none\";\n                        },1000);\n                    }, 3000);\n                    audio.play().then();\n                    n = 0;\n                }\n            }\n            else n = 0;\n        });\n    }\n\n    getSplitterOrVerifier() {\n        return this.localStorageService.get('splitter_or_verifier');\n    }\n\n    toggleProfileDropdown() {\n        this.profileDropdownCurrentState = !this.profileDropdownCurrentState;\n    }\n\n    closeprofileDropDown() {\n        this.profileDropdownCurrentState = false;\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = !this.mobileMenuState;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from \"./env\";\nimport { Observable } from \"rxjs\";\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { LocalStorageService } from \"../services/local-storage.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class MiddlewareComponent implements HttpInterceptor {\n\n    constructor(\n        private router: Router,\n        private localStorage: LocalStorageService,\n    ) {}\n\n    isValidIP(str: any) {\n        const arr = str.split(\".\").filter((el: any) => !/^0.|\\D/g.test(el));\n        return arr.filter((el: any) => el.length && el >= 0 && el <= 255).length === 4;\n    }\n\n    isValidFQDN(str: any) {\n        return /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/g.test(str);\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        if (!environment['customId'] && /http(s)?:\\/\\/|backend_oc\\//.test(request.url)) {\n            let currentUrl = window.location.href;\n            currentUrl = currentUrl.replace('http://', '').replace('https://', '');\n            currentUrl = currentUrl.replace(new RegExp('//'), '/');\n            const currentUrlArray = currentUrl.split('/');\n            if (this.isValidFQDN(currentUrlArray[0])) {\n                environment['fqdn'] = currentUrlArray[0];\n            }\n            for (let i = 0; i <= currentUrlArray.length; i++) {\n                if (currentUrlArray[i] === 'dist') {\n                    let customId = '';\n                    const isIp = this.isValidIP(currentUrlArray[i - 1]);\n                    const isFQDN = this.isValidFQDN(currentUrlArray[i - 1]);\n                    const currentCustom = environment['customId'];\n                    customId = currentUrlArray[i - 1];\n                    if (!isFQDN && !isIp && currentUrlArray[i - 1] !== 'localhost' && !currentUrlArray[i - 1].includes('opencapture') && !currentUrlArray[i - 1].includes('opencaptureforinvoices') && !currentUrlArray[i - 1].includes('backend_oc')) {\n                        customId = currentUrlArray[i - 1];\n                        const oldUrl = environment['url'];\n                        environment['customId'] = customId;\n                        environment['url'] += '/' + customId;\n                        if (environment.production) {\n                            environment['url'] = '../' + environment['url'];\n                        }\n                        const token = this.localStorage.get('OpenCaptureToken_' + customId);\n                        if (currentCustom && customId !== currentCustom) {\n                            this.router.navigate(['/logout']).then();\n                        }\n                        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n                        const newRequest = new HttpRequest(request.method as any,\n                            request.url.replace(oldUrl, environment['url']), {headers: headers});\n                        request = Object.assign(request, newRequest);\n                        return next.handle(request);\n                    }\n                }\n            }\n        }\n        return next.handle(request);\n    }\n}\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit  } from '@angular/core';\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(\n        private notify: NotificationService,\n        private router: Router,\n        private translate: TranslateService,\n    ) { }\n\n    ngOnInit(): void {\n        this.translate.get('ERROR.404').subscribe((translated: string) => {\n            this.notify.error(translated);\n            this.router.navigate(['/login']).then();\n        });\n    }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\" height=\"300\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { HistoryService } from \"../../services/history.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    userId                      : any;\n    profile                     : any;\n    roles                       : any[]         = [];\n    profileForm                 : any[]         = [\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'old_password',\n            label: this.translate.instant('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: this.translate.instant('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private privilegeService: PrivilegesService\n    ) { }\n\n    ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.userId = parseInt(this.route.snapshot.params['id']);\n        let loggedUserId = this.userService.user.id;\n        if (loggedUserId === undefined) {\n            loggedUserId = this.userService.getUserFromLocal().id;\n        }\n\n        if (this.userId !== parseInt(loggedUserId)) {\n            if (!this.privilegeService.hasPrivilege('update_user')) {\n                this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                    this.notify.error(translated);\n                    this.router.navigateByUrl('/home').then();\n                });\n            }\n        }\n\n        this.http.get(environment['url'] + '/ws/roles/list?full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    } else {\n                        if ((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                for (const field in this.profile) {\n                    if (this.profile.hasOwnProperty(field)) {\n                        this.profileForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.value = this.profile[field];\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            this.loading = true;\n            const user : any = {};\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                environment['url'] + '/ws/users/update/' + this.userId,{'args': user},\n                {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.historyService.addHistory('general', 'profile_updated', this.translate.instant('HISTORY-DESC.profile-updated', {user: user['lastname'] + ' ' + user['firstname']}));\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId === this.userService.user.id) {\n                        this.userService.setUser(data.user);\n                    }\n                }),\n                finalize(() => this.loading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.profileForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId === this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId !== this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{ this.profile['username'] }}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\"\n                                    [class.pointer-events-none]=\"field.type === 'password' && this.disablePasswordModification\">\n                        <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input [readonly]=\"field.type === 'password' && this.disablePasswordModification\" matInput\n                               [formControl]=\"field.control\" [type]=\"field.type\" [required]=\"field.required\"\n                               [email]=\"field.type === 'email'\"\n                               placeholder=\"{{ field.label | translate }}\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['privileges'] !== '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-about-us',\n    templateUrl: './about-us.component.html',\n    styleUrls: ['./about-us.component.scss']\n})\n\nexport class AboutUsComponent implements OnInit {\n    loading        : boolean   = true;\n    isProd         : boolean   = false;\n    currentVersion : any       = 'dev';\n    lastVersion    : any       = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.isProd = environment.production;\n        this.currentVersion = environment.version;\n        this.http.get(environment['url'] + '/ws/config/gitInfo', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.git_latest) {\n                    this.lastVersion = data.git_latest;\n                } else {\n                    this.lastVersion = undefined;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                Open-Capture&nbsp;<span *ngIf=\"!this.loading\"><strong>version {{ this.currentVersion }}</strong></span>\n                <span *ngIf=\"this.lastVersion === undefined\">\n                        | <span class=\"text-red-600\">{{ 'ERROR.git_connection' | translate }}</span>\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion > this.currentVersion && this.isProd\">\n                        | {{ 'ABOUT-US.new_version_available' | translate }} (<strong>\n                                <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                                   target=\"_blank\">{{ this.lastVersion }}</a>\n                            </strong>)\n                </span>\n                <span *ngIf=\"!this.loading && this.lastVersion < this.currentVersion && this.isProd\">\n                        | {{ 'ABOUT-US.are_you_in_future' | translate }} ({{ 'ABOUT-US.last_official_version' | translate }} : <strong>\n                                <a [href]=\"'https://github.com/edissyum/opencapture/releases/tag/' + this.lastVersion\"\n                                   target=\"_blank\">{{ this.lastVersion }}</a>\n                            </strong>)\n                </span>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div id=\"license\" class=\"text-center mt-10\">\n                <h2>{{ 'ABOUT-US.license' | translate }}</h2>\n                {{ 'ABOUT-US.distributed_under' | translate }}\n                <a class=\"text-green-400\" href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n                    {{ 'ABOUT-US.gnu_license' | translate }}\n                </a>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"edissyum text-center mt-10 text-lg\" style=\"line-height: 35px !important;\">\n                <h2>{{ 'ABOUT-US.editor' | translate }}</h2>\n                <div class=\"grid grid-cols-2 gap-10 w-1/2 m-auto\">\n                    <div class=\"text-right\">\n                        Edissyum Consulting <br>\n                        98 Avenue Pierre Semard <br>\n                        84200 Carpentras\n                    </div>\n                    <div class=\"text-left\" style=\"width: 200%\">\n                        {{ 'ABOUT-US.official_website' | translate }} : <a class=\"text-green-400\" href=\"https://kutt.it/OpenCaptureWebSite\">open-capture.com</a><br>\n                        Documentation : <a class=\"text-green-400\" href=\"https://kutt.it/DocumentationV2\">edissyum.gitbook.io/open-capture-for-invoices-v2</a> <br>\n                        Support : <a class=\"text-green-400\" href=\"https://kutt.it/OCForInvoices_ISSUES\">github.com/edissyum/opencapture</a>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div class=\"flex justify-center items-center mt-10 mb-5\">\n                <div>\n                    <img src=\"assets/imgs/login_image.png\" alt=\"Open-Capture\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n            </div>\n            <div class=\"logo grid grid-cols-7\">\n                <div id=\"verifier\" class=\"m-auto col-start-2 col-span-2\">\n                    <img src=\"assets/imgs/logo_verifier.png\" alt=\"Open-Capture Verifier\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n                </div>\n                <div id=\"splitter\" class=\"m-auto col-start-5 col-span-2\">\n                    <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n                    <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                    <h3 class=\"mt-6 text-center\">{{ 'ABOUT-US.lead_dev' | translate }} : BRICH Oussama</h3>\n                </div>\n            </div>\n            <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n            <div id=\"dependency\" class=\"text-center mt-10 mb-10\">\n                <h2>{{ 'ABOUT-US.dependency' | translate }}</h2>\n                <h4><i>{{ 'ABOUT-US.thanks_to_developers' | translate }}</i></h4>\n                <div>\n                    <ul>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://angular.io/\">Angular</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://material.angular.io/\">Angular Material</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://jquery.com/download/\">jQuery</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/kreuzerk/ng-sortgrid\">NgSortGridModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/telebroad/ngx-file-drag-drop\">NgxFileDragDropModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/ngx-translate/core\">NgxTranslateModule</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/swimlane/ngx-charts\">NgxCharts</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/ngx-translate/\">NgxTranslate</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/Kr0san89/ng-click-outside\">Click Outside 2</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/tyxla/remove-accents\">Remove-accent</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/hjnilsson/country-flags\">SVG Country Flags</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://github.com/angular-material-extensions/select-country\">Select Country</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://tailwindcss.com/\">Tailwind CSS</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://fontawesome.com/\">FontAwesome</a></li>\n                        <li><a class=\"text-green-400\" target=\"_blank\" href=\"https://www.npmjs.com/package/moment\">moment</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { HistoryService } from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-configurations',\n    templateUrl: './configurations.component.html',\n    styleUrls: ['./configurations.component.scss'],\n    providers: [\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }},\n    ]\n})\nexport class ConfigurationsComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['id', 'label', 'description', 'type', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    configurations      : any           = [];\n    allConfigurations   : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n    loginImage          : SafeUrl       = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/configurations') || lastUrl === '/') {\n            if (this.localStorageService.get('configurationsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('configurationsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('configurationsPageIndex');\n\n        this.http.get(environment['url'] + '/ws/config/getConfigurations', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allConfigurations = data.configurations;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        const b64Content = this.localStorageService.get('login_image_b64');\n        if (!b64Content) {\n            this.http.get(environment['url'] + '/ws/config/getLoginImage').pipe(\n                tap((data: any) => {\n                    this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + data);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loginImage = this.sanitizer.bypassSecurityTrustUrl('data:image/png;base64, ' + b64Content);\n        }\n\n        this.loadConfigurations();\n    }\n\n    onClick(logo: any) {\n        logo.click();\n    }\n\n    upload(fileInput: any) {\n        if (fileInput.target.files && fileInput.target.files[0]) {\n            this.loading = true;\n            const reader = new FileReader();\n            reader.readAsDataURL(fileInput.target.files[0]);\n            reader.onload = (value: any) => {\n                const args = {\n                    'image_content': value.target.result\n                };\n                this.http.put(environment['url'] + '/ws/config/updateLoginImage',{'args': args},\n                    {headers: this.authService.headers},\n                ).pipe(\n                    tap(() => {\n                        this.loginImage = this.sanitizer.bypassSecurityTrustUrl(args['image_content']);\n                        this.localStorageService.save('login_image_b64', args['image_content'].replace('data:image/png;base64,', ''));\n                        const currentUrl = this.router.url;\n                        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n                            this.router.navigate([currentUrl]).then();\n                        });\n                        this.historyService.addHistory('general', 'update_login_image', this.translate.instant('HISTORY-DESC.update_login_image'));\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.login_image_changed'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            };\n        }\n    }\n\n    loadConfigurations() {\n        this.http.get(environment['url'] + '/ws/config/getConfigurations?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configurations[0]) this.total = data.configurations[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadConfigurations();\n                }\n                this.configurations = data.configurations;\n                this.configurations.forEach((element: any) => {\n                    switch (element.data.type) {\n                        case 'int':\n                            element.data.label_type = marker('CONFIGURATIONS.int');\n                            break;\n                        case 'float':\n                            element.data.label_type = marker('CONFIGURATIONS.float');\n                            break;\n                        case 'string':\n                            element.data.label_type = marker('CONFIGURATIONS.string');\n                            break;\n                        case 'bool':\n                            element.data.label_type = marker('CONFIGURATIONS.bool');\n                            break;\n                        default:\n                            break;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number, name: string) {\n        this.updateLoading = true;\n        const value = event.target ? event.target.value : event.value;\n        this.configurations.forEach((element: any) => {\n            if (element.id === id) {\n                element.data.value = value;\n                this.http.put(environment['url'] + '/ws/config/updateConfiguration/' + element.id, element, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('CONFIGURATIONS.configuration_updated'));\n                        this.historyService.addHistory('general', 'update_configuration', this.translate.instant('HISTORY-DESC.update_configuration', {configuration: name}));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchConfiguration(event: any) {\n        this.search = event.target.value;\n        this.loadConfigurations();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('configurationsPageIndex', event.pageIndex);\n        this.loadConfigurations();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allConfigurations.slice();\n        if (!sort.active || sort.direction === '') {\n            this.configurations = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.configurations = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'description': return this.compare(a.data.description, b.data.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.configurations = this.configurations.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'CONFIGURATIONS.search_config' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchConfiguration($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div class=\"text-center\">\n                <h3 class=\"text-gray-900 m-4\">{{ \"CONFIGURATIONS.change_image\" | translate }}</h3>\n                <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n                <div>\n                    <img class=\"shadow-md hover:shadow-2xl m-auto p-2 transition-all ease-in-out duration-500\n                         cursor-pointer shadow-gray-900 hover:shadow-gray-900\" [src]=\"this.loginImage\" alt=\"Login image\"\n                         (click)=\"onClick(logo)\">\n                    <input type=\"file\" name=\"files[]\" #logo (change)=\"upload($event)\" accept=\"image/png\" class=\"hidden\">\n                </div>\n                <mat-hint class=\"text-gray-600 relative top-2\">\n                    {{ \"CONFIGURATIONS.authorized_extensions\" | translate }}\n                </mat-hint>\n            </div>\n            <mat-divider class=\"border-green-400 mt-4 mb-4 w-3/4 m-auto\"></mat-divider>\n            <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n            <mat-table matSort [dataSource]=\"configurations\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"description\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.data.description }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"type\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.type' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.data.label_type | translate }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"content\">\n                    <mat-header-cell *matHeaderCellDef>{{ 'HEADER.value' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                        <ng-container *ngIf=\"!element.updateMode else update\">\n                            {{ element.data.value }}\n                        </ng-container>\n                        <ng-template #update>\n                            <mat-form-field appearance=\"outline\" *ngIf=\"element.data.type === 'bool'\">\n                                <mat-select class=\"relative -top-2\" [(ngModel)]=\"element.data.value\"\n                                            (selectionChange)=\"updateValue($event, element.id, element.label)\">\n                                    <mat-option [value]=\"true\">Activer</mat-option>\n                                    <mat-option [value]=\"false\">Désactiver</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\"\n                                            *ngIf=\"element.data.type === 'int' || element.data.type === 'float'\">\n                                <input matInput type=\"number\" [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id, element.label)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id, element.label)\">\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\"\n                                            *ngIf=\"element.data.type === 'string'\">\n                                <input matInput [value]=\"element.data.value\" (keyup.enter)=\"updateValue($event, element.id, element.label)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id, element.label)\">\n                            </mat-form-field>\n                        </ng-template>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"!element.updateMode\"\n                                (click)=\"element.updateMode = true\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.update' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-edit text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"element.updateMode\"\n                                (click)=\"element.updateMode = false;\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i *ngIf=\"!this.updateLoading\" class=\"fa-solid text-lg fa-check\"></i>\n                            <i *ngIf=\"this.updateLoading\" class=\"fa-solid text-lg fa-circle-notch fa-spin\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           *ngIf=\"this.total > 0\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { remove } from \"remove-accents\";\n\n@Component({\n    selector: 'app-custom-fields',\n    templateUrl: './custom-fields.component.html',\n    styleUrls: ['./custom-fields.component.scss'],\n})\nexport class CustomFieldsComponent implements OnInit {\n    update              : boolean   = false;\n    loading             : boolean   = true;\n    inactiveFields      : any[]     = [];\n    activeFields        : any[]     = [];\n    selectOptions       : any[]     = [];\n    inactiveOrActive    : string    = '';\n    updateCustomId      : any;\n    form!               : FormGroup;\n    parent              : any[]     = [\n        {\n            'id': 'verifier',\n            'label': this.translate.instant('HOME.verifier')\n        },\n        {\n            'id': 'splitter',\n            'label': this.translate.instant('HOME.splitter')\n        }\n    ];\n    addFieldInputs      : any[]     = [\n        {\n            field_id    : 'label_short',\n            controlType : 'text',\n            control     : new FormControl(),\n            label       : this.translate.instant('HEADER.label_short'),\n            autoComplete: [],\n            required    : true,\n        },\n        {\n            field_id    : 'label',\n            controlType : 'text',\n            control     : new FormControl(),\n            label       : this.translate.instant('HEADER.label'),\n            autoComplete: [],\n            required    : true,\n        },\n        {\n            field_id    : 'module',\n            controlType : 'dropdown',\n            control     : new FormControl(),\n            label       : this.translate.instant('CUSTOM-FIELDS.module'),\n            options     : [\n                {key: 'verifier', value: this.translate.instant('HOME.verifier')},\n                {key: 'splitter', value: this.translate.instant('HOME.splitter')}\n            ],\n            required: true,\n            autoComplete: [],\n        },\n        {\n            field_id    : 'type',\n            controlType : 'dropdown',\n            control     : new FormControl(),\n            label       : this.translate.instant('CUSTOM-FIELDS.type'),\n            options     : [\n                {key: 'text', value: this.translate.instant('FORMATS.text')},\n                {key: 'date', value: this.translate.instant('FORMATS.date')},\n                {key: 'textarea', value: this.translate.instant('FORMATS.textarea')},\n                {key: 'select', value: this.translate.instant('FORMATS.select')},\n                {key: 'checkbox', value: this.translate.instant('CUSTOM-FIELDS.checkbox')},\n            ],\n            autoComplete: [],\n            required: true,\n        },\n        {\n            field_id    : 'metadata_key',\n            controlType : 'text',\n            control     : new FormControl(),\n            label       : this.translate.instant('SETTINGS.autocomplete'),\n            limit       : 'splitter',\n            autoComplete: [\n                {key: '', value: this.translate.instant('SPLITTER.Other')},\n                {key: 'SEPARATOR_MEM', value: this.translate.instant('SPLITTER.separator_mem')},\n                {key: 'SEPARATOR_META1', value: this.translate.instant('SPLITTER.separator_meta1')},\n                {key: 'SEPARATOR_META2', value: this.translate.instant('SPLITTER.separator_meta2')},\n                {key: 'SEPARATOR_META3', value: this.translate.instant('SPLITTER.separator_meta3')},\n            ],\n            required    : false,\n            class       : \"\",\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.retrieveCustomFields();\n        this.form = this.toFormGroup();\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'label_short') {\n                element.control.valueChanges.subscribe((value: any) => {\n                    if (value.match(/[\\u00C0-\\u017F]/g) !== null) {\n                        element.control.setValue(remove(value));\n                    }\n                    if (value.match(/[^\\u00C0-\\u017Fa-zA-Z]/g) !== null) {\n                        element.control.setValue(value.replace(/[^\\u00C0-\\u017Fa-zA-Z]/g, \"\"));\n                    }\n                });\n            }\n        });\n    }\n\n    dropCustomField(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.enableCustomField(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n        }\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.addFieldInputs.forEach(input => {\n            group[input.field_id] = input.required ? new FormControl(input.value || '', Validators.required)\n                : new FormControl(input.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    moveToActive(index: number) {\n        this.enableCustomField(this.inactiveFields, this.activeFields, index, this.activeFields.length);\n    }\n\n    moveToInactive(index: number) {\n        this.enableCustomField(this.activeFields, this.inactiveFields, index, this.inactiveFields.length);\n    }\n\n    displayInput(input: any) {\n        let _return = false;\n        if (input.limit) {\n            this.addFieldInputs.forEach((element: any) => {\n                if (element.field_id === 'module') {\n                    if (element.control.value === input.limit) {\n                        _return = true;\n                    }\n                }\n            });\n        }\n        return _return;\n    }\n\n    retrieveCustomFields() {\n        this.loading        = true;\n        this.activeFields   = [];\n        this.inactiveFields = [];\n        let newField;\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: any) => {\n                    newField = {\n                        'id'            : field.id,\n                        'label_short'   : field.label_short,\n                        'module'        : field.module,\n                        'label'         : field.label,\n                        'type'          : field.type,\n                        'enabled'       : field.enabled,\n                        'settings'      : field.settings,\n                        'metadata_key'  : field.metadata_key,\n                    };\n                    field.enabled ? this.activeFields.push(newField) : this.inactiveFields.push(newField);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    addSelectOption() {\n        this.selectOptions.push({\n            idControl      : new FormControl(),\n            labelControl   : new FormControl(),\n        });\n    }\n\n    displayChoicesList() {\n        let _return = false;\n        this.addFieldInputs.forEach((element: any) => {\n            if (element.field_id === 'type') {\n                if (element.control.value && (element.control.value === 'checkbox' || element.control.value === 'select')) {\n                    _return = true;\n                }\n            }\n        });\n        return _return;\n    }\n\n    dropSelectOption(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.selectOptions, event.previousIndex, event.currentIndex);\n    }\n\n    deleteSelectOption(optionIndex: number) {\n        this.selectOptions.splice(optionIndex, 1);\n    }\n\n    addSelectOptionsToArgs(args: any) {\n        args.options  = [];\n        for(const option of this.selectOptions) {\n            args.options.push({\n                id      : option.idControl.value,\n                label   : option.labelControl.value\n            });\n        }\n        return args;\n    }\n\n    addCustomField() {\n        this.loading = true;\n        let newField: any = {};\n        newField = this.addSelectOptionsToArgs(newField);\n        this.addFieldInputs.forEach((element: any) => {\n            newField[element.field_id] = element.control.value;\n        });\n        this.http.post(environment['url'] + '/ws/customFields/add', newField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                newField['id'] = data.id;\n                this.retrieveCustomFields();\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_added'));\n                this.resetForm();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustom(customFieldId: number, activeOrInactive: string) {\n        this.http.delete(environment['url'] + '/ws/customFields/delete/' + customFieldId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.deleted'));\n\n                if (activeOrInactive === 'active') {\n                    this.activeFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                } else {\n                    this.inactiveFields.forEach((element:any, index, object) => {\n                        if (element.id === customFieldId) {\n                            object.splice(index, 1);\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteCustomField(customFieldId: number, activeOrInactive: string) {\n        if (customFieldId) {\n            this.http.get(environment['url'] + '/ws/customFields/customPresentsInForm/' + customFieldId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data) {\n                        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                            data: {\n                                confirmTitle        : this.translate.instant('CUSTOM-FIELDS.custom_exists'),\n                                confirmText         : this.translate.instant('CUSTOM-FIELDS.confirm_delete'),\n                                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                                confirmButtonColor  : \"warn\",\n                                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                            },\n                            width: \"600px\",\n                        });\n\n                        dialogRef.afterClosed().subscribe((result: any) => {\n                            if (result) {\n                                this.deleteCustom(customFieldId, activeOrInactive);\n                            }\n                        });\n                    } else {\n                        this.deleteCustom(customFieldId, activeOrInactive);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableCustomField(oldList: any[], newList: any[], oldIndex: number, newIndex: number) {\n        let updatedField = oldList[oldIndex];\n\n        updatedField = {\n            'id': updatedField['id'],\n            'label_short': updatedField['label_short'],\n            'module': updatedField['module'],\n            'label': updatedField['label'],\n            'type': updatedField['type'],\n            'enabled': !updatedField['enabled'],\n            'metadata_key': updatedField['metadata_key']\n        };\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                transferArrayItem(\n                    oldList,\n                    newList,\n                    oldIndex,\n                    newIndex,\n                );\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomOnSubmit() {\n        let updatedField : any = {};\n        updatedField           = this.addSelectOptionsToArgs(updatedField);\n        updatedField['id']     = this.updateCustomId;\n        if (this.inactiveOrActive === 'active') {\n            this.addFieldInputs.forEach((field: any) => {\n                this.activeFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = true;\n        } else {\n            this.addFieldInputs.forEach((field: any) => {\n                this.inactiveFields.forEach((element: any) => {\n                    if (this.updateCustomId === element.id) {\n                        element[field.field_id] = updatedField[field.field_id] = field.control.value;\n                    }\n                });\n            });\n            updatedField['enabled'] = false;\n        }\n\n        this.http.put(environment['url'] + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n                this.resetForm();\n                this.retrieveCustomFields();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateCustomField(customField: any, activeOrInactive: string) {\n        this.update = true;\n        this.selectOptions = [];\n        if (customField) {\n            this.updateCustomId = customField.id;\n            this.inactiveOrActive = activeOrInactive;\n            this.addFieldInputs.forEach((element: any) => {\n                element.control.setValue(customField[element.field_id]);\n            });\n            if (customField.settings.hasOwnProperty('options')) {\n                for (const option of customField.settings.options) {\n                    this.selectOptions.push({\n                        'idControl'     : new FormControl(option.id),\n                        'labelControl'  : new FormControl(option.label)\n                    });\n                }\n            }\n        }\n    }\n\n    resetForm() {\n        this.addFieldInputs.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.selectOptions      = [];\n        this.inactiveOrActive   = '';\n        this.updateCustomId     = '';\n        this.update             = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-accordion>\n            <mat-expansion-panel [expanded]=\"true\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ 'SETTINGS.add_custom_fields' | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <form [formGroup]=\"form\">\n                    <div class=\"cursor-pointer relative top-9 ml-4 w-1/12\" matTooltip=\"{{ 'CUSTOM-FIELDS.reset' | translate }}\"\n                         (click)=\"resetForm()\">\n                        <i class=\"self-center fa-solid fa-sync fa-lg hover:text-green-400\"></i>\n                    </div>\n                    <div class=\"mx-12 grid grid-cols-6 gap-4\">\n                        <div *ngFor=\"let input of addFieldInputs\">\n                            <mat-form-field class=\"w-full\" *ngIf=\"!input.limit || (input.limit && displayInput(input))\">\n                                <mat-label [attr.for]=\"input.field_id\">{{ input.label | translate }}</mat-label>\n                                <div [ngSwitch]=\"input.controlType\">\n                                    <div *ngSwitchCase=\"'text'\">\n                                        <input matInput [formControl]=\"input.control\" [id]=\"input.field_id\"\n                                               [type]=\"input.type\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\">\n                                            <div *ngIf=\"input.control.value === null || input.control.value === '' || input.control.value === undefined\">\n                                                <mat-option *ngFor=\"let option of input.autoComplete\" [value]=\"option.key\">\n                                                    <span style=\"font-size: 12px;\" [innerHTML]=\"option.value\"></span>\n                                                    <span style=\"font-size: 10px;\" class=\"text-green-400 ml-3\">{{ option.key }}</span>\n                                                </mat-option>\n                                            </div>\n                                        </mat-autocomplete>\n                                    </div>\n                                    <div *ngSwitchCase=\"'dropdown'\">\n                                        <mat-select [id]=\"input.field_id\"\n                                                    [formControl]=\"input.control\">\n                                            <mat-option *ngFor=\"let opt of input.options\"\n                                                        [value]=\"opt.key\">\n                                                {{ opt.value | translate }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </div>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex justify-center\" *ngIf=\"displayChoicesList()\">\n                        <div>\n                            <span class=\"text-center\">{{ 'CUSTOM-FIELDS.select_options' | translate }}</span>\n                            <div class=\"flex\">\n                                <div cdkDropList class=\"select-options-list w-96\"\n                                     (cdkDropListDropped)=\"dropSelectOption($event)\">\n                                    <div *ngIf=\"selectOptions.length === 0\" class=\"my-14 text-center text-gray-400\">{{ 'CUSTOM-FIELDS.no_option_added' | translate }}</div>\n                                    <div class=\"drop-box-option p-4\" *ngFor=\"let option of selectOptions; let optionIndex = index;\" cdkDrag>\n                                        <mat-form-field class=\"w-40 mr-2\">\n                                            <mat-label>{{ 'HEADER.id' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option.idControl\" type=\"text\">\n                                        </mat-form-field>\n                                        <mat-form-field class=\"w-40\">\n                                            <mat-label>{{ 'HEADER.label' | translate }}</mat-label>\n                                            <input matInput [formControl]=\"option.labelControl\" type=\"text\">\n                                        </mat-form-field>\n                                        <div matTooltip=\"{{ 'CUSTOM-FIELDS.delete_choice' | translate }}\"\n                                             (click)=\"deleteSelectOption(optionIndex)\" class=\"top-0 mx-2 h-8 cursor-pointer\">\n                                            <i class=\"fa-solid fa-trash fa-lg hover:text-green-400\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div matTooltip=\"{{ 'CUSTOM-FIELDS.add_choice' | translate }}\"\n                                     (click)=\"addSelectOption()\" class=\"top-0 mx-2 h-8 inline-block\">\n                                    <i class=\"fa-solid fa-plus fa-lg hover:text-green-400\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex justify-center m-5\">\n                        <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                mat-button (click)=\"addCustomField()\" *ngIf=\"!update\">\n                            {{ 'CUSTOM-FIELDS.add' | translate }}\n                        </button>\n                        <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                mat-button (click)=\"$event.stopPropagation();updateCustomOnSubmit()\" *ngIf=\"update\">\n                            {{ 'CUSTOM-FIELDS.update' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </mat-expansion-panel>\n        </mat-accordion>\n        <div class=\"custom-fields-control w-full\">\n            <mat-tab-group>\n                <mat-tab *ngFor=\"let parent of this.parent\" [label]=\"this.translate.instant(parent.label)\">\n                    <div cdkDropListGroup class=\"w-max mx-auto\">\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.inactive' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"inactiveFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                 class=\"custom-fields-list\"\n                                 style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of inactiveFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button matTooltip=\"{{ 'GLOBAL.move_to_active' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToActive(i)\">\n                                                <i class=\"fa fa-plus\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.edit' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'inactive')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'inactive')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.active' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"activeFields\" (cdkDropListDropped)=\"dropCustomField($event)\"\n                                 class=\"custom-fields-list\"\n                                 style=\"max-height:47vh; overflow:auto;\">\n                                <span *ngFor=\"let item of activeFields; let i = index;\">\n                                    <div cdkDrag class=\"drop-box-custom-field\" *ngIf=\"item.module === parent['id']\">\n                                        <div class=\"text-left\">\n                                            <div>{{ item.label }}</div>\n                                            <div class=\"text-gray-400\">\n                                                ({{ 'TYPES.' + item.type | translate }})\n                                            </div>\n                                        </div>\n                                        <div class=\"actions\">\n                                            <button matTooltip=\"{{ 'GLOBAL.move_to_inactive' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\" (click)=\"moveToInactive(i)\">\n                                                <i class=\"fa fa-minus\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.edit' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"updateCustomField(item, 'active')\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                            </button>\n                                            <button matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                                                    class=\"hover:text-green-400\"\n                                                    (click)=\"deleteCustomField(item.id, 'active')\">\n                                                <i class=\"fa-solid fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { HistoryService } from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-docservers',\n    templateUrl: './docservers.component.html',\n    styleUrls: ['./docservers.component.scss'],\n    providers: [\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }},\n    ]\n})\nexport class DocserversComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['id', 'docserver_id', 'description', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    docservers          : any           = [];\n    allDocservers       : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/docservers') || lastUrl === '/') {\n            if (this.localStorageService.get('docserversPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('docserversPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('docserversPageIndex');\n\n        this.http.get(environment['url'] + '/ws/config/getDocservers', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allDocservers = data.docservers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadDocservers();\n    }\n\n    loadDocservers() {\n        this.http.get(environment['url'] + '/ws/config/getDocservers?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.docservers[0]) this.total = data.docservers[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadDocservers();\n                }\n                this.docservers = data.docservers;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number, docserver: string) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.docservers.forEach((element: any) => {\n            if (element.id === id) {\n                element.path = value;\n                this.http.put(environment['url'] + '/ws/config/updateDocserver/' + element.id, {'data': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('DOCSERVERS.docserver_updated'));\n                        this.historyService.addHistory('general', 'update_docserver', this.translate.instant('HISTORY-DESC.update_docserver', {docserver: docserver}));\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchDocservers(event: any) {\n        this.search = event.target.value;\n        this.loadDocservers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('docserversPageIndex', event.pageIndex);\n        this.loadDocservers();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allDocservers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.docservers = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.docservers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.docservers = this.docservers.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'DOCSERVERS.search_docserver' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchDocservers($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n            <mat-table matSort [dataSource]=\"docservers\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"docserver_id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"docserver_id\"> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.docserver_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"description\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> {{ 'HEADER.description' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.description }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"content\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.path' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true\">\n                        <ng-container *ngIf=\"!element.updateMode else update\">\n                            {{ element.path }}\n                        </ng-container>\n                        <ng-template #update>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input matInput [value]=\"element.path\" (keyup.enter)=\"updateValue($event, element.id, element.docserver_id)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id, element.docserver_id)\">\n                            </mat-form-field>\n                        </ng-template>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"!element.updateMode\"\n                                (click)=\"element.updateMode = true\"\n                                matTooltip=\"{{ 'DOCSERVERS.update' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-edit text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"element.updateMode\"\n                                (click)=\"element.updateMode = false;\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                            <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           *ngIf=\"this.total > 0\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Essaid MEGHELLET <essaid.meghellet@edissyum.com>*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n  selector: 'app-login-methods',\n  templateUrl: './login-methods.component.html',\n  styleUrls: ['./login-methods.component.scss']\n})\nexport class LoginMethodsComponent implements OnInit {\n    loading                 : boolean   = true;\n    isSaveBtnDisabled       : boolean   = true;\n    isLaunchBtnDisabled     : boolean   = false;\n    isLinear                : boolean   = false;\n    showPassword            : boolean   = false;\n    isLdapChecked           : boolean   = false;\n    isDefaultChecked        : boolean   = false;\n    connexionServerStatus   : boolean   = false;\n    synchroUsersStatus      : boolean   = false;\n    label                   : any[]     = [\n        marker ('LOGIN-METHODS.ldap'),\n        marker ('LOGIN-METHODS.default'),\n    ];\n    loginMethods      : any[]     = [\n        {\n            login_method_name : '',\n            enabled :''\n        }\n    ];\n    connectionFormGroup     : any[]     = [\n        {\n            id: 'typeAD',\n            label: this.translate.instant('LOGIN-METHODS.typeAD'),\n            type: 'select',\n            control: new FormControl(),\n            values: ['openLDAP', 'adLDAP'],\n            required: true,\n        },\n        {\n            id: 'host',\n            label: this.translate.instant('LOGIN-METHODS.host'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : ldap://192.168.10.180'\n        },\n        {\n            id: 'port',\n            label: this.translate.instant('LOGIN-METHODS.port'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : 389'\n        },\n        {\n            id: 'loginAdmin',\n            label: this.translate.instant('LOGIN-METHODS.login_admin'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : admin'\n        },\n        {\n            id: 'passwordAdmin',\n            label: this.translate.instant('LOGIN-METHODS.password_admin'),\n            type: 'password',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'baseDN',\n            label: this.translate.instant('LOGIN-METHODS.base_dn'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : dc=edissyum,dc=com'\n        },\n        {\n            id: 'prefix',\n            label: this.translate.instant('LOGIN-METHODS.prefix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : edissyum'\n        },\n        {\n            id: 'suffix',\n            label: this.translate.instant('LOGIN-METHODS.suffix'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: false,\n            hint:'Ex : @domaine-edisslab.com'\n        }\n\n    ];\n    synchroparamsFormGroup  : any[]     = [\n        {\n            id: 'attributSourceUser',\n            label: this.translate.instant('LOGIN-METHODS.source_user_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : uid'\n        },\n        {\n            id: 'classObject',\n            label: this.translate.instant('LOGIN-METHODS.class_Object'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : posixAccount'\n        },\n        {\n            id: 'classUser',\n            label: this.translate.instant('LOGIN-METHODS.class_user'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : objectClass'\n        },\n        {\n            id: 'attributFirstName',\n            label: this.translate.instant('LOGIN-METHODS.first_name_attribute'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : givenname'\n        },\n        {\n            id: 'attributLastName',\n            label: this.translate.instant('LOGIN-METHODS.last_name_attribute'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n             hint:'Ex : sn'\n        },\n        {\n            id: 'usersDN',\n            label: this.translate.instant('LOGIN-METHODS.usersDN'),\n            type: 'text',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : cn=employes,ou=utilisateurs,dc=edissyum,dc=com'\n        },\n        {\n            id: 'attributRoleDefault',\n            label: this.translate.instant('LOGIN-METHODS.role_default'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true,\n            hint:'Ex : Utilisateur'\n        }\n\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private _formBuilder: FormBuilder,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                this.loginMethods = data.login_methods;\n                for ( const login_method_name of this.loginMethods ) {\n                    if (login_method_name['method_name'] === 'default') {\n                        this.isDefaultChecked = !!login_method_name['enabled'];\n                    }\n                    if (login_method_name['method_name'] === 'ldap') {\n                        this.isLdapChecked = !!login_method_name['enabled'];\n                    }\n                }\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.synchroparamsFormGroup.forEach((element:any) => {\n                    if (element.id === 'attributRoleDefault') {\n                        element.values = data.roles;\n                    }\n                });\n\n                this.http.get(environment['url'] + '/ws/auth/retrieveLdapConfigurations', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        const configs : any = data.ldap_configurations;\n                        this.connectionFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                if (element.type !== 'password') {\n                                    element.control.setValue(config.data[element.id]);\n                                }\n                            }\n                        });\n                        this.synchroparamsFormGroup.forEach(element => {\n                            for (const config of configs) {\n                                element.control.setValue(config.data[element.id]);\n                            }\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    updateTypeAd(event: any, id: any) {\n        if  (event.isUserInput) {\n            let required = true;\n            if (id === 'typeAD' && event.source.value === 'adLDAP') {\n                required = false;\n            }\n            this.connectionFormGroup.forEach((element: any) => {\n                if (element.id === 'baseDN') {\n                    element.required = required;\n                }\n            });\n        }\n    }\n\n    changedDefaultMethod(loginMethodName: any): void {\n        if (!this.isDefaultChecked) {\n            this.enableLoginMethod(loginMethodName);\n        } else if (this.isDefaultChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    changedLdapMethod(loginMethodName: any): void {\n        if (!this.isLdapChecked) {\n            this.isLdapChecked = true;\n        } else if (this.isLdapChecked) {\n            this.disableLoginMethod(loginMethodName);\n        }\n    }\n\n    isValidConnexionForm() {\n        let state = true;\n        this.connectionFormGroup.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    isValidSynchronizationForm() {\n        let state = true;\n        this.connectionFormGroup.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    disableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/disableLoginMethodName', loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = false;\n                }\n                if (loginMethodName['method_name'] === 'ldap') {\n                    this.isLdapChecked = false;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_disabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    enableLoginMethod(loginMethodName: any): void {\n        this.http.post(environment['url'] + '/ws/auth/enableLoginMethodName',loginMethodName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (loginMethodName['method_name'] === 'default') {\n                    this.isDefaultChecked = true;\n                }\n                this.notify.success(this.translate.instant('LOGIN-METHODS.login_method_enabled'));\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n    }\n\n    checkLdapConnexion(): void {\n        if (this.isValidConnexionForm()) {\n            const server_data : any = {};\n            this.connectionFormGroup.forEach(element => {\n                server_data[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/connectionLdap', server_data,{headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.connexionServerStatus = true;\n                this.notify.success(this.translate.instant('LOGIN-METHODS.server_ldap_connection'));\n            }),\n            catchError ((err: any) => {\n                this.isSaveBtnDisabled = true;\n                this.connexionServerStatus = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n        }\n    }\n\n    ldapSynchronization(): void {\n        this.isLaunchBtnDisabled = true;\n        if (this.isValidSynchronizationForm() && this.isValidConnexionForm()) {\n            const synchronizationData : any = {};\n            this.connectionFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n             this.synchroparamsFormGroup.forEach(element => {\n                synchronizationData[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/auth/ldapSynchronization', synchronizationData, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.isSaveBtnDisabled = false;\n                this.isLaunchBtnDisabled = false;\n                this.synchroUsersStatus = true;\n                this.notify.success(this.translate.instant('LOGIN-METHODS.result_synchronization_operation', {'users_added':data['create_users'],'users_updated':data['update_users'],'users_disabled':data['disabled_users']}));\n            }),\n            catchError ((err: any) => {\n                this.isSaveBtnDisabled = true;\n                this.isLaunchBtnDisabled = false;\n                this.synchroUsersStatus = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n        }\n    }\n\n    saveLoginMethodConfigs(): void {\n        if (this.isValidSynchronizationForm() && this.isValidConnexionForm()) {\n            if (this.connexionServerStatus && this.synchroUsersStatus) {\n                const methodDataToSave : any = {};\n                this.connectionFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                 this.synchroparamsFormGroup.forEach(element => {\n                    methodDataToSave[element.id] = element.control.value;\n                });\n                this.http.post(environment['url'] + '/ws/auth/saveLoginMethodConfigs', methodDataToSave, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.isLdapChecked = true;\n                        this.notify.success(this.translate.instant('LOGIN-METHODS.save_ldap_infos_success'));\n                    }),\n                    catchError ((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of (false);\n                    })\n                ).subscribe();\n            }\n        } else {\n            this.isSaveBtnDisabled = true;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <app-hint [message]=\"'LOGIN-METHODS.limit_enabled_methods' | translate\"></app-hint>\n        <mat-tab-group class=\"login-methods-tab\">\n            <mat-tab *ngFor=\"let method of this.loginMethods\"\n                     [label]=\"'LOGIN-METHODS.' + method['method_name'] | translate\">\n                <div class=\"list-container\">\n                    <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'default'\">\n                        <mat-slide-toggle [checked]=\"this.isDefaultChecked\" (change)=\"changedDefaultMethod(method)\">\n                            <span class=\"justify-center\">\n                                {{ 'LOGIN-METHODS.enable_method' | translate }}\n                            </span>\n                        </mat-slide-toggle>\n                    </div>\n                    <div class=\"text-center text-base mt-8\" *ngIf=\"method['method_name'] === 'ldap'\">\n                        <mat-slide-toggle [checked]=\"this.isLdapChecked\" (change)=\"changedLdapMethod(method)\">\n                            <span class=\"justify-center\">\n                                {{ 'LOGIN-METHODS.enable_method' | translate }}\n                            </span>\n                        </mat-slide-toggle>\n                        <div [class.pointer-events-none]=\"!this.isLdapChecked\"\n                             [class.opacity-30]=\"!this.isLdapChecked\">\n                            <mat-stepper orientation=\"horizontal\" [linear]=\"this.isLinear\" #stepper>\n                                <mat-step>\n                                    <form class=\"grid gap-x-8 gap-y-2 grid-cols-3 text-center\">\n                                        <ng-template matStepLabel>\n                                            {{ \"LOGIN-METHODS.connection\" | translate }}\n                                        </ng-template>\n                                        <ng-container *ngFor=\"let field of connectionFormGroup\">\n                                            <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [(value)]=\"field.control.value\" [required]=\"field.required\">\n                                                    <mat-option *ngFor=\"let option of field.values\"\n                                                                (onSelectionChange)=\"updateTypeAd($event, field.id)\"\n                                                            [value]=\"option\">{{ option }}</mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'password'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field.control\"\n                                                       placeholder=\"{{ field.label | translate }}\"\n                                                       [required]=\"field.required\"\n                                                       [type]=\"showPassword ? 'text' : 'password'\">\n                                                <mat-icon matSuffix class=\"text-green-400 relative cursor-pointer -top-1.5 text-base\"\n                                                          (click)=\"this.showPassword = !this.showPassword\">\n                                                    <i class=\"fa fa-1x\"  [class.fa-eye-slash]=\"!showPassword\"\n                                                       [class.fa-eye]=\"showPassword\"></i>\n                                                </mat-icon>\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field.control\"\n                                                       [type]=\"field.type\" [required]=\"field.required\"\n                                                       placeholder=\"{{ field.label | translate }}\">\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </form>\n                                    <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                        <button type=\"submit\" mat-button (click)=\"checkLdapConnexion()\"\n                                                class=\"p-6 border-solid border-gray-900 border bg-gray-900 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 col-start-3\">\n                                            {{ \"LOGIN-METHODS.test_connection\" | translate }}\n                                        </button>\n                                        <button matStepperNext mat-button class=\"p-6 border-solid border-green-400 border\n                                                bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 ml-2\">\n                                            {{ \"LOGIN-METHODS.next\" | translate }}\n                                        </button>\n                                    </div>\n                                </mat-step>\n                                <mat-step>\n                                    <ng-template matStepLabel>\n                                        {{ \"LOGIN-METHODS.synchronization\" | translate }}\n                                    </ng-template>\n                                    <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                        <ng-container *ngFor=\"let field of synchroparamsFormGroup\">\n                                            <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <mat-select [(value)]=\"field.control.value\" [required]=\"field.required\">\n                                                    <mat-option *ngFor=\"let option of field.values\"\n                                                            [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                                                </mat-select>\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                            <mat-form-field appearance=\"outline\" *ngIf=\"field.type === 'text'\">\n                                                <mat-label>{{ field.label | translate }}</mat-label>\n                                                <input matInput [formControl]=\"field.control\"\n                                                       [required]=\"field.required\"\n                                                       [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\">\n                                                <mat-hint>{{ field.hint }}</mat-hint>\n                                            </mat-form-field>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"my-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                                        <button matStepperPrevious mat-button class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 col-start-3\">\n                                            {{ \"LOGIN-METHODS.return\" | translate }}\n                                        </button>\n                                        <button matStepperNext mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                            {{ \"LOGIN-METHODS.next\" | translate }}\n                                        </button>\n                                    </div>\n                                </mat-step>\n                                <mat-step>\n                                    <ng-template matStepLabel>\n                                        {{ \"LOGIN-METHODS.launching\" | translate }}\n                                    </ng-template>\n                                    <p>{{ \"LOGIN-METHODS.end_ldap_setup\" | translate }}</p>\n                                    <div class=\"mb-6 grid grid-cols-3 gap-4 h-12 text-gray-900\">\n                                        <button matStepperPrevious mat-button class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                            {{ \"LOGIN-METHODS.return\" | translate }}\n                                        </button>\n                                        <button type=\"submit\" mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                                                (click)=\"ldapSynchronization()\">\n                                            <span *ngIf=\"!this.isLaunchBtnDisabled\">\n                                                {{ \"LOGIN-METHODS.launch\" | translate }}\n                                            </span>\n                                            <i *ngIf=\"this.isLaunchBtnDisabled\"\n                                               class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                                        </button>\n                                        <button (click)=\"saveLoginMethodConfigs()\" mat-button\n                                                [disabled]=\"this.isSaveBtnDisabled\"\n                                                [class.cursor-not-allowed]=\"this.isSaveBtnDisabled\"\n                                                class=\"p-6 border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                                            {{ \"LOGIN-METHODS.register\" | translate }}\n                                        </button>\n                                    </div>\n                                </mat-step>\n                            </mat-stepper>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl } from '@angular/forms';\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n    selector: 'app-mailcollect',\n    templateUrl: './mailcollect.component.html',\n    styleUrls: ['./mailcollect.component.scss']\n})\n\nexport class MailCollectComponent implements OnInit {\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    folderLoading       : boolean       = false;\n    processLoading      : boolean       = false;\n    loadingProcessName  : boolean       = false;\n    allCustomers        : any           = [];\n    allForms            : any           = [];\n    allSplitterInputs   : any           = [];\n    processesMail       : any           = [];\n    allprocessesMail    : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    selectedIndex       : number        = 0;\n    mailCollectConfigId : number        = 0;\n    search              : string        = '';\n    globalForm          : any[]         = [\n        {\n            id: 'batchPath',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.batch_path'),\n            type: 'text',\n            required: true,\n        },\n        {\n            id: 'smtpDelay',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_delay'),\n            type: 'number',\n            required: false,\n        },\n        {\n            id: 'smtpNotifOnError',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_notif_on_error'),\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'smtpSSL',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_ssl'),\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'smtpStartTLS',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_starttls'),\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'smtpAuth',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_auth'),\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'smtpHost',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_host'),\n            type: 'text',\n            required: false,\n        },\n        {\n            id: 'smtpPort',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_port'),\n            type: 'text',\n            required: false,\n        },\n        {\n            id: 'smtpLogin',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_login'),\n            type: 'text',\n            required: false,\n        },\n        {\n            id: 'smtpPwd',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_pwd'),\n            type: 'password',\n            required: false,\n        },\n        {\n            id: 'smtpFromMail',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_from_mail'),\n            type: 'text',\n            required: false,\n        },\n        {\n            id: 'smtpDestAdminMail',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.smtp_dest_admin_mail'),\n            type: 'text',\n            required: false,\n        }\n    ];\n    processes           : any           = [];\n    defaultProcessData  : any           = [\n        {\n            id: 'name',\n            control: new FormControl(),\n        },\n        {\n            id: 'hostname',\n            class: 'w-1/4',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.hostname'),\n            type: 'text',\n            required: true,\n        },\n        {\n            id: 'enabled',\n            class: 'w-1/4',\n            control: new FormControl(),\n            disabled: true,\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'port',\n            class: 'w-1/4',\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.port'),\n            type: 'number',\n            required: true,\n        },\n        {\n            id: 'login',\n            class: 'w-1/4',\n            control: new FormControl(),\n            label: marker('FORMATS.email'),\n            type: 'text',\n            required: true,\n        },\n        {\n            id: 'password',\n            class: 'w-1/4',\n            control: new FormControl(),\n            label: marker('USER.password'),\n            type: 'password',\n            required: true,\n        },\n        {\n            id: 'secured_connection',\n            class: 'w-1/5',\n            control: new FormControl(true),\n            label: marker('MAILCOLLECT.secured_connection'),\n            type: 'boolean',\n            required: true,\n        },\n        {\n            id: 'is_splitter',\n            class: 'w-1/5',\n            control: new FormControl(false),\n            label: marker('MAILCOLLECT.is_splitter'),\n            type: 'boolean',\n            required: false,\n        },\n        {\n            id: 'splitter_technical_input_id',\n            class: 'w-30',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.splitter_technical_input_id'),\n            type: 'autocomplete',\n            required: false,\n        },\n        {\n            id: 'folder_to_crawl',\n            class: 'w-30',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_to_crawl'),\n            type: 'autocomplete',\n            required: true,\n        },\n        {\n            id: 'folder_destination',\n            class: 'w-1/5',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_destination'),\n            type: 'autocomplete',\n            required: true,\n        },\n        {\n            id: 'folder_trash',\n            class: 'w-1/5',\n            hint: marker('MAILCOLLECT.load_folders_first'),\n            control: new FormControl(),\n            label: marker('MAILCOLLECT.folder_trash'),\n            type: 'autocomplete',\n            required: false,\n        },\n        {\n            id: 'action_after_process',\n            class: 'w-1/5',\n            control: new FormControl(''),\n            label: marker('MAILCOLLECT.action_after_process'),\n            type: 'select',\n            values: ['move', 'delete', 'none'],\n            required: true,\n        },\n        {\n            id: 'verifier_customer_id',\n            class: 'w-1/5',\n            control: new FormControl(),\n            label: marker('INPUT.associated_customer'),\n            type: 'autocomplete',\n            required: false,\n        },\n        {\n            id: 'verifier_form_id',\n            class: 'w-1/5',\n            control: new FormControl(),\n            label: marker('POSITIONS-MASKS.form_associated'),\n            type: 'autocomplete',\n            required: false,\n        }\n    ];\n    toHighlight         : string        = '';\n    folders             : any[]         = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/config/getConfiguration/mailCollectGeneral', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.configuration.length === 1) {\n                    this.mailCollectConfigId = data.configuration[0].id;\n                    Object.keys(data.configuration[0].data.value).forEach((config: any ) => {\n                        this.globalForm.forEach((element: any) => {\n                            if (element.id === config) {\n                                if (data.configuration[0].data.value[config]) {\n                                    element.control.setValue(data.configuration[0].data.value[config]);\n                                }\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allCustomers = data.customers;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'verifier_customer_id') {\n                        element.values = element.control.valueChanges\n                            .pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.allCustomers) : this.allCustomers)\n                            );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allForms = data.forms;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'verifier_form_id') {\n                        element.values = element.control.valueChanges\n                            .pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.allForms) : this.allForms)\n                            );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/inputs/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allSplitterInputs = data.inputs;\n                this.defaultProcessData.forEach((element: any) => {\n                    if (element.id === 'splitter_technical_input_id') {\n                        element.values = element.control.valueChanges\n                            .pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.allSplitterInputs) : this.allSplitterInputs)\n                            );\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.loadProcess();\n        });\n    }\n\n    processIsEnabled(process: any) {\n        let enabled = false;\n        process.forEach((element: any) => {\n            if (element.id === 'enabled') {\n                enabled = element.control.value;\n            }\n        });\n        return enabled;\n    }\n\n    updateGlobal() {\n        const data: any = {\n            'value': {}\n        };\n\n        this.globalForm.forEach((element: any) => {\n            data['value'][element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/' + this.mailCollectConfigId, {'data': data}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('MAILCOLLECT.general_settings_updated'));\n                this.historyService.addHistory('general', 'mailcollect', this.translate.instant('HISTORY-DESC.mailcollect_general_settings_updated'));\n            }),\n            finalize(() => this.processLoading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateProcessName(process: any, new_process_name: any, updateDatabase: boolean = true) {\n        if (new_process_name) {\n            this.loadingProcessName = true;\n            let oldProcessName = '';\n            process.forEach((element: any) => {\n                if (element.id === 'name') {\n                    oldProcessName = element.control.value;\n                    element.control.setValue(new_process_name);\n                }\n            });\n\n            if (updateDatabase && oldProcessName) {\n                this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + oldProcessName, {\"name\": new_process_name}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('MAILCOLLECT.process_name_updated'));\n                        this.historyService.addHistory('general', 'update_mailcollect_name', this.translate.instant('HISTORY-DESC.update_mailcollect_name', {process: oldProcessName}));\n                    }),\n                    finalize(() => {\n                        this.loadingProcessName = false;\n                        process.edit_name = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    displayFn(option: any) {\n        if (option) return option.name ? option.name : option.label ? option.label : option.input_label;\n        return '';\n    }\n\n    addProcess() {\n        const newProcess: any = [];\n        this.defaultProcessData.forEach((process_default: any) => {\n            newProcess.push(process_default);\n        });\n        this.processes.push(newProcess);\n    }\n\n    loadProcess() {\n        this.processes = [];\n        this.http.get(environment['url'] + '/ws/mailcollect/getProcesses', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.processes.forEach((process: any) => {\n                    const newProcess: any = [];\n                    this.defaultProcessData.forEach((process_default: any) => {\n                        Object.keys(process).forEach((element: any) => {\n                            if (element === process_default.id) {\n                                let value = process[element];\n                                if (element === 'verifier_customer_id') {\n                                    for (let i = 0; i < this.allCustomers.length; i++) {\n                                        if (parseInt(this.allCustomers[i].id) === parseInt(process[element])) {\n                                            value = this.allCustomers[i];\n                                        }\n                                    }\n                                } else if (element === 'verifier_form_id') {\n                                    for (let i = 0; i < this.allForms.length; i++) {\n                                        if (parseInt(this.allForms[i].id) === parseInt(process[element])) {\n                                            value = this.allForms[i];\n                                        }\n                                    }\n                                } else if (element === 'splitter_technical_input_id') {\n                                    for (let i = 0; i < this.allSplitterInputs.length; i++) {\n                                        if (parseInt(this.allSplitterInputs[i].id) === parseInt(process[element])) {\n                                            value = this.allSplitterInputs[i];\n                                        }\n                                    }\n                                }\n                                process_default.control.setValue(value);\n                                newProcess.push(process_default);\n                            }\n                        });\n                    });\n                    newProcess.exists = true;\n                    this.resetDefaultData();\n                    this.processes.push(newProcess);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetDefaultData() {\n        this.defaultProcessData = [\n            {\n                id: 'name',\n                control: new FormControl(),\n            },\n            {\n                id: 'enabled',\n                class: 'w-1/4',\n                control: new FormControl(),\n                disabled: true,\n                type: 'boolean',\n                required: false,\n            },\n            {\n                id: 'hostname',\n                class: 'w-1/4',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.hostname'),\n                type: 'text',\n                required: true,\n            },\n            {\n                id: 'port',\n                class: 'w-1/4',\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.port'),\n                type: 'number',\n                required: true,\n            },\n            {\n                id: 'login',\n                class: 'w-1/4',\n                control: new FormControl(),\n                label: marker('FORMATS.email'),\n                type: 'text',\n                required: true,\n            },\n            {\n                id: 'password',\n                class: 'w-1/4',\n                control: new FormControl(),\n                label: marker('USER.password'),\n                type: 'password',\n                required: true,\n            },\n            {\n                id: 'secured_connection',\n                class: 'w-1/5',\n                control: new FormControl(true),\n                label: marker('MAILCOLLECT.secured_connection'),\n                type: 'boolean',\n                required: true,\n            },\n            {\n                id: 'is_splitter',\n                class: 'w-1/5',\n                control: new FormControl(false),\n                label: marker('MAILCOLLECT.is_splitter'),\n                type: 'boolean',\n                required: false,\n            },\n            {\n                id: 'splitter_technical_input_id',\n                class: 'w-30',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.splitter_technical_input_id'),\n                type: 'autocomplete',\n                required: false,\n            },\n            {\n                id: 'folder_to_crawl',\n                class: 'w-30',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_to_crawl'),\n                type: 'autocomplete',\n                required: true,\n            },\n            {\n                id: 'folder_destination',\n                class: 'w-1/5',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_destination'),\n                type: 'autocomplete',\n                required: true,\n            },\n            {\n                id: 'folder_trash',\n                class: 'w-1/5',\n                hint: marker('MAILCOLLECT.load_folders_first'),\n                control: new FormControl(),\n                label: marker('MAILCOLLECT.folder_trash'),\n                type: 'autocomplete',\n                required: false,\n            },\n            {\n                id: 'action_after_process',\n                class: 'w-1/5',\n                control: new FormControl(''),\n                label: marker('MAILCOLLECT.action_after_process'),\n                type: 'select',\n                values: ['move', 'delete', 'none'],\n                required: true,\n            },\n            {\n                id: 'verifier_customer_id',\n                class: 'w-1/5',\n                control: new FormControl(),\n                label: marker('INPUT.associated_customer'),\n                type: 'autocomplete',\n                required: false,\n            },\n            {\n                id: 'verifier_form_id',\n                class: 'w-1/5',\n                control: new FormControl(),\n                label: marker('POSITIONS-MASKS.form_associated'),\n                type: 'autocomplete',\n                required: false,\n            }\n        ];\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'splitter_technical_input_id') {\n                element.values = element.control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option, this.allSplitterInputs) : this.allSplitterInputs)\n                    );\n            }\n        });\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'verifier_customer_id') {\n                element.values = element.control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option, this.allCustomers) : this.allCustomers)\n                    );\n            }\n        });\n\n        this.defaultProcessData.forEach((element: any) => {\n            if (element.id === 'verifier_form_id') {\n                element.values = element.control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option, this.allForms) : this.allForms)\n                    );\n            }\n        });\n    }\n\n    getNameOfProcess(process: any) {\n        let name = '';\n        process.forEach((element: any) => {\n            if (element.id === 'name') {\n                name = element.control.value;\n            }\n        });\n        return name;\n    }\n\n    createProcess(process: any) {\n        if (!this.getNameOfProcess(process)) {\n            this.notify.error(this.translate.instant('MAILCOLLECT.process_name_mandatory'));\n            return;\n        }\n\n        if (this.isValidForm(process)) {\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_customer_id' && element.id !== 'verifier_form_id' && element.id !== 'splitter_technical_input_id') {\n                    data[element.id] = element.control.value;\n                } else {\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/createProcess', data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_created'));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_duplicate_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateProcess(process);\n                this.historyService.addHistory('general', 'duplicate_mailcollect_process', this.translate.instant('HISTORY-DESC.duplicate-mailcollect-process', {process: processName}));\n            }\n        });\n    }\n\n    duplicateProcess(process: any) {\n        this.addProcess();\n        this.processes[this.processes.length - 1].forEach((element: any) => {\n            process.forEach((element_child: any ) => {\n                if (element.id === element_child.id && element.id !== 'name') {\n                    element.control.setValue(element_child.control.value);\n                }\n            });\n        });\n    }\n\n    disableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_disable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableProcess(processName);\n                this.historyService.addHistory('general', 'disable_mailcollect_process', this.translate.instant('HISTORY-DESC.disable-mailcollect-process', {process: processName}));\n            }\n        });\n    }\n\n    disableProcess(processName: string) {\n        this.http.delete(environment['url'] + '/ws/mailcollect/disableProcess/' + processName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_disabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    enableConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_enable_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableProcess(processName);\n                this.historyService.addHistory('general', 'enable_mailcollect_process', this.translate.instant('HISTORY-DESC.enable-mailcollect-process', {process: processName}));\n            }\n        });\n    }\n\n    enableProcess(processName: string) {\n        this.http.delete(environment['url'] + '/ws/mailcollect/enableProcess/' + processName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 200);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_enabled'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(process: any) {\n        const processName = this.getNameOfProcess(process);\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('MAILCOLLECT.confirm_delete_process', {\"process\": processName}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteProcess(processName);\n                this.historyService.addHistory('general', 'delete_mailcollect_process', this.translate.instant('HISTORY-DESC.delete-mailcollect-process', {process: processName}));\n            }\n        });\n    }\n\n    deleteProcess(processName: string) {\n        this.http.delete(environment['url'] + '/ws/mailcollect/deleteProcess/' + processName, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.selectedIndex = 1;\n                this.loadProcess();\n                setTimeout(() => {\n                    this.selectedIndex = 0;\n                }, 300);\n                this.notify.success(this.translate.instant('MAILCOLLECT.process_deleted'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateProcess(process: any) {\n        if (this.isValidForm(process)) {\n            this.processLoading = true;\n\n            const data: any = {};\n            process.forEach((element: any) => {\n                if (element.id !== 'verifier_customer_id' && element.id !== 'verifier_form_id' && element.id !== 'splitter_technical_input_id') {\n                    data[element.id] = element.control.value;\n                } else {\n                    data[element.id] = element.control.value ? element.control.value.id : null;\n                }\n            });\n\n            this.http.post(environment['url'] + '/ws/mailcollect/updateProcess/' + data['name'], data, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('MAILCOLLECT.process_updated'));\n                    this.historyService.addHistory('general', 'update_mailcollect', this.translate.instant('HISTORY-DESC.update_mailcollect', {process: data['name']}));\n                }),\n                finalize(() => this.processLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    retrieveFolders(process: any) {\n        this.folderLoading = true;\n        let port = '';\n        let login = '';\n        let hostname = '';\n        let password = '';\n        let secured_connection = '';\n        process.forEach((element: any) => {\n            if (element.id === 'hostname') {\n                hostname = element.control.value;\n            }\n            if (element.id === 'port') {\n                port = element.control.value;\n            }\n            if (element.id === 'secured_connection') {\n                secured_connection = element.control.value;\n            }\n            if (element.id === 'login') {\n                login = element.control.value;\n            }\n            if (element.id === 'password') {\n                password = element.control.value;\n            }\n        });\n\n        if (hostname && login && password) {\n            const data = {\n                'port': port,\n                'login': login,\n                'hostname': hostname,\n                'password': password,\n                'secured_connection': secured_connection\n            };\n\n            this.http.post(environment['url'] + '/ws/mailcollect/retrieveFolders', data, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.folders = data;\n                    process.forEach((element: any) => {\n                        if (element.id === 'folder_trash' || element.id === 'folder_to_crawl' || element.id === 'folder_destination') {\n                            element.values = element.control.valueChanges\n                                .pipe(\n                                    startWith(''),\n                                    map(option => option ? this._filter(option, this.folders) : this.folders)\n                                );\n                        }\n                    });\n                    this.notify.success(this.translate.instant('MAILCOLLECT.folders_updated'));\n                }),\n                finalize(() => this.folderLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.folderLoading = false;\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allprocessesMail.slice();\n        if (!sort.active || sort.direction === '') {\n            this.processesMail = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.processesMail = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'docserver_id': return this.compare(a.docserver_id, b.docserver_id, isAsc);\n                case 'description': return this.compare(a.description, b.description, isAsc);\n                default: return 0;\n            }\n        });\n        this.processesMail = this.processesMail.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    isValidForm(process: any) {\n        let state = true;\n\n        process.forEach((element: any) => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        if (!state) {\n            this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n        }\n\n        return state;\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.globalForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"flex text-gray-900\">\n                <button mat-icon-button (click)=\"addProcess()\" class=\"ml-2\">\n                    <i class=\"fa-solid fa-plus text-2xl\" [matTooltip]=\"'MAILCOLLECT.add_process' | translate\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full overflow-auto\" style=\"height: calc(100% - 70px)\">\n            <mat-accordion>\n                <mat-expansion-panel class=\"m-4\" #mep=\"matExpansionPanel\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"justify-center\">\n                            {{ 'MAILCOLLECT.global_parameters' | translate }}\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <hr *ngIf=\"mep.expanded\" class=\"border-green-400 w-1/2 m-auto\">\n                    <div class=\"flex flex-wrap m-10 mb-0 text-center\">\n                        <ng-container *ngFor=\"let field of this.globalForm\">\n                            <div class=\"w-1/3\" *ngIf=\"field.type === 'text' || field.type === 'password'\"\n                                 [ngClass]=\"{'w-1/4': field.id === 'smtpHost' || field.id === 'smtpPort' || field.id === 'smtpLogin'}\">\n                                <mat-form-field class=\"block m-1\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                                    <mat-icon matSuffix *ngIf=\"field.id === 'smtpPwd'\" (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text' \"\n                                              class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                        <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                    </mat-icon>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div *ngIf=\"field.type === 'number'\">\n                                <mat-form-field class=\"block m-1\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div *ngIf=\"field.type === 'boolean'\"\n                                 [ngClass]=\"{'w-1/4': field.id === 'smtpAuth', 'w-1/6': field.id !== 'smtpAuth'}\">\n                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field.control\">\n                                    {{ field.label | translate }}\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"w-full text-center mb-4\">\n                        <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                                        transition duration-300\" type=\"submit\" mat-button (click)=\"updateGlobal()\">\n                            {{ 'MAILCOLLECT.update_global' | translate }}\n                        </button>\n                    </div>\n                </mat-expansion-panel>\n            </mat-accordion>\n\n            <h3 class=\"text-center text-gray-900 mx-4\">{{ 'MAILCOLLECT.process_parameters' | translate }}</h3>\n            <hr class=\"border-green-400 relative z-30 w-1/2 m-auto mb-4\">\n\n            <mat-tab-group class=\"mx-5\" [selectedIndex]=\"this.selectedIndex\">\n                <mat-tab *ngFor=\"let process of this.processes\">\n                    <ng-template mat-tab-label>\n                        <span class=\"actions\" *ngIf=\"getNameOfProcess(process) !== '' && getNameOfProcess(process) !== null else input\">\n                            <span *ngIf=\"!process.edit_name\">\n                                {{ getNameOfProcess(process) }}\n                            </span>\n\n                            <i *ngIf=\"!process.edit_name\" [title]=\"'MAILCOLLECT.edit_process_name' | translate\"\n                               class=\"fas fa-edit ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"process.edit_name = true\"></i>\n                            <i *ngIf=\"!process.edit_name\" [title]=\"'MAILCOLLECT.delete_process' | translate\"\n                               class=\"fas fa-trash text-red-600 ml-5 hover:scale-125 transition-all duration-75\"\n                               (click)=\"deleteConfirmDialog(process)\"></i>\n                            <i *ngIf=\"processIsEnabled(process)\" [title]=\"'MAILCOLLECT.disable_process' | translate\"\n                               class=\"fas fa-pause ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"disableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"!processIsEnabled(process)\" [title]=\"'MAILCOLLECT.enable_process' | translate\"\n                               class=\"fas fa-play ml-5 text-gray-900 hover:scale-125 transition-all duration-75\"\n                               (click)=\"enableConfirmDialog(process)\"></i>\n                            <i *ngIf=\"process.exists\" [title]=\"'MAILCOLLECT.duplicate_process' | translate\"\n                               class=\"fas fa-clone ml-5 text-green-400 hover:scale-125 transition-all duration-75\"\n                               (click)=\"duplicateConfirmDialog(process)\"></i>\n\n                            <div *ngIf=\"process.edit_name\" class=\"grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name [value]=\"getNameOfProcess(process)\" matInput\n                                               (focusout)=\"updateProcessName(process, new_process_name.value)\"\n                                               type=\"text\" placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i *ngIf=\"!this.loadingProcessName\" class=\"fas fa-check ml-2\" (click)=\"updateProcessName(process, new_process_name.value)\"></i>\n                                    <i *ngIf=\"this.loadingProcessName\" class=\"fa-solid fa-circle-notch fa-spin\"></i>\n                                </div>\n                            </div>\n                        </span>\n                        <ng-template #input>\n                            <div class=\"actions grid grid-cols-5\">\n                                <div class=\"change_process_name settings_search col-span-4\">\n                                    <mat-form-field class=\"block\">\n                                        <input #new_process_name_input matInput type=\"text\"\n                                               (focusout)=\"updateProcessName(process, new_process_name_input.value)\"\n                                               placeholder=\"{{ 'MAILCOLLECT.process_name' | translate }}\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"relative top-5\">\n                                    <i class=\"fas fa-check ml-1\" (click)=\"updateProcessName(process, new_process_name_input.value, false)\"></i>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ng-template>\n                    <div class=\"flex flex-wrap m-10 mb-0 text-center\">\n                        <ng-container *ngFor=\"let field of process\">\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'text' || field.type === 'password'\">\n                                <mat-form-field class=\"block m-2\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                                    <mat-icon matSuffix *ngIf=\"field.id === 'password'\" (click)=\"field.type === 'text' ? field.type = 'password' : field.type = 'text' \"\n                                              class=\"text-green-400 relative cursor-pointer -top-0.5 text-base\">\n                                        <i class=\"fa fa-1x\" [class.fa-eye-slash]=\"field.type !== 'password'\" [class.fa-eye]=\"field.type === 'password'\"></i>\n                                    </mat-icon>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'autocomplete' &&\n                                                            field.id !== 'splitter_technical_input_id' &&\n                                                            field.id !== 'verifier_customer_id' &&\n                                                            field.id !== 'verifier_form_id'\">\n                                <mat-form-field class=\"block m-2\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [required]=\"field.required\"\n                                           [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                                    <mat-hint class=\"text-gray-600\" *ngIf=\"field.hint\">{{ field.hint | translate }}</mat-hint>\n                                    <mat-autocomplete #autocomplete=\"matAutocomplete\">\n                                        <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option\" [id]=\"option.id\">\n                                            <span [innerHTML]=\"option | highlight: toHighlight\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'autocomplete' &&\n                                                                (field.id === 'splitter_technical_input_id' ||\n                                                                field.id === 'verifier_customer_id' ||\n                                                                field.id === 'verifier_form_id')\">\n                                <mat-form-field class=\"block m-2\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [required]=\"field.required\"\n                                           [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                                    <mat-hint *ngIf=\"field.hint\">{{ field.hint | translate }}</mat-hint>\n                                    <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                        <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option\" [id]=\"option.id\">\n                                            <span [innerHTML]=\"option.name ? option.name : option.label ? option.label : option.input_label | highlight: toHighlight\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"block m-2\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <mat-select [formControl]=\"field.control\" [required]=\"field.required\">\n                                        <mat-option *ngFor=\"let option of field.values\" [value]=\"option\">\n                                            {{ option }}\n                                        </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'number'\">\n                                <mat-form-field class=\"block m-2\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [type]=\"field.type\"\n                                           placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div [class]=\"field.class\" *ngIf=\"field.type === 'boolean' && !field.disabled\">\n                                <mat-slide-toggle class=\"relative m-auto top-4\" [formControl]=\"field.control\">\n                                    {{ field.label | translate }}\n                                </mat-slide-toggle>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"mb-6 grid grid-cols-6 gap-4 h-10 mt-8\">\n                        <button class=\"p-6 border-solid border-gray-900 border bg-gray-900 text-white hover:bg-transparent hover:text-gray-900\n                                    transition duration-300 col-start-3\" mat-button (click)=\"retrieveFolders(process)\">\n                            <span *ngIf=\"!this.folderLoading\">{{ 'MAILCOLLECT.retrieve_folders' | translate }}</span>\n                            <i *ngIf=\"this.folderLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-green-400\"></i>\n                        </button>\n                        <button *ngIf=\"process.exists\" mat-button (click)=\"updateProcess(process)\"\n                                class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                                    transition duration-300\">\n                            <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.update_process' | translate }}</span>\n                            <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                        </button>\n                        <button *ngIf=\"!process.exists\" mat-button (click)=\"createProcess(process)\"\n                                class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                                    transition duration-300\">\n                            <span *ngIf=\"!this.processLoading\">{{ 'MAILCOLLECT.create_process' | translate }}</span>\n                            <i *ngIf=\"this.processLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                        </button>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { HistoryService } from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-regex',\n    templateUrl: './regex.component.html',\n    styleUrls: ['./regex.component.scss']\n})\nexport class RegexComponent implements OnInit {\n    columnsToDisplay    : string[]      = ['regex_id', 'label', 'content', 'actions'];\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    updateLoading       : boolean       = false;\n    regex               : any           = [];\n    allRegex            : any           = [];\n    pageSize            : number        = 10;\n    pageIndex           : number        = 0;\n    total               : number        = 0;\n    offset              : number        = 0;\n    search              : string        = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/regex') || lastUrl === '/') {\n            if (this.localStorageService.get('regexPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('regexPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('regexPageIndex');\n\n        this.http.get(environment['url'] + '/ws/config/getRegex', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allRegex = data.regex;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.loadRegex();\n    }\n\n    loadRegex() {\n        this.http.get(environment['url'] + '/ws/config/getRegex?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.regex[0]) this.total = data.regex[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRegex();\n                }\n                this.regex = data.regex;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateValue(event: any, id: number, regex_id: string) {\n        this.updateLoading = true;\n        const value = event.target.value;\n        this.regex.forEach((element: any) => {\n            if (element.id === id) {\n                element.content = value;\n                this.http.put(environment['url'] + '/ws/config/updateRegex/' + element.id, {'data': element}, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        element.updateMode = false;\n                        this.updateLoading = false;\n                        this.notify.success(this.translate.instant('REGEX.regex_updated'));\n                        this.historyService.addHistory('general', 'update_regex', this.translate.instant('HISTORY-DESC.update_regex', {regex: regex_id}));\n\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    searchRegex(event: any) {\n        this.search = event.target.value;\n        this.loadRegex();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('regexPageIndex', event.pageIndex);\n        this.loadRegex();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allRegex.slice();\n        if (!sort.active || sort.direction === '') {\n            this.regex = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.regex = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'regex_id': return this.compare(a.regex_id, b.regex_id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default: return 0;\n            }\n        });\n        this.regex = this.regex.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'REGEX.search_regex' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchRegex($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"w-full\">\n            <app-hint [message]=\"'GLOBAL.dont_touch' | translate\"></app-hint>\n            <mat-table matSort [dataSource]=\"regex\" (matSortChange)=\"sortData($event)\">\n                <ng-container matColumnDef=\"regex_id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"regex_id\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.regex_id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"label\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"label\"> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"content\">\n                    <mat-header-cell *matHeaderCellDef> {{ 'HEADER.value' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"element.updateMode = true;\">\n                        <ng-container *ngIf=\"!element.updateMode else update\">\n                            {{ element.content }}\n                        </ng-container>\n                        <ng-template #update>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input [id]=\"element.id\" autofocus matInput [value]=\"element.content\" (keyup.enter)=\"updateValue($event, element.id, element.regex_id)\"\n                                       class=\"relative -top-2.5\" (focusout)=\"updateValue($event, element.id, element.regex_id)\">\n                            </mat-form-field>\n                        </ng-template>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button *ngIf=\"!element.updateMode\"\n                                (click)=\"element.updateMode = true;\"\n                                matTooltip=\"{{ 'REGEX.update' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-edit text-lg\"></i>\n                        </button>\n                        <button *ngIf=\"element.updateMode\"\n                                (click)=\"element.updateMode = false;\"\n                                matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i *ngIf=\"!this.updateLoading\" class=\"fa-solid fa-check text-lg\"></i>\n                            <i *ngIf=\"this.updateLoading\" class=\"fa-solid fa-circle-notch fa-spin text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           *ngIf=\"this.total > 0\"\n                           [length]=\"this.total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-role.component.html',\n    styleUrls: ['./create-role.component.scss']\n})\nexport class CreateRoleComponent implements OnInit {\n    loading : boolean = true;\n    privileges: any;\n    rolePrivileges: any[] = [];\n    roleForm: any[] = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.post(environment['url'] + '/ws/roles/create', {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    const newRoleId = data.id;\n                    this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + newRoleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('general', 'create_role', this.translate.instant('HISTORY-DESC.create-role', {role: role['label']}));\n                            this.notify.success(this.translate.instant('ROLE.created'));\n                            this.router.navigate(['/settings/general/roles/']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/settings/general/roles/');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        if (this.rolePrivileges) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilegeId === element) {\n                    found = true;\n                }\n            });\n        }\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-2 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges\" dynamicHeight>\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\"\n                                          [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.create_role' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\n\nexport class RolesListComponent implements OnInit {\n    columnsToDisplay: string[] = ['id', 'label_short', 'label', 'status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean = true;\n    roles           : any = [];\n    pageSize        : number = 10;\n    pageIndex       : number = 0;\n    total           : number = 0;\n    offset          : number = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/roles') || lastUrl === '/') {\n            if (this.localStorageService.get('rolesPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('rolesPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('rolesPageIndex');\n        this.loadRoles();\n    }\n\n    loadRoles(): void {\n        this.http.get(environment['url'] + '/ws/roles/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.roles[0]) this.total = data.roles[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadRoles();\n                }\n                this.roles = data.roles;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('rolesPageIndex', event.pageIndex);\n        this.loadRoles();\n    }\n\n    deleteConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteRole(roleId);\n                this.historyService.addHistory('verifier', 'delete_role', this.translate.instant('HISTORY-DESC.delete-role', {role: role}));\n            }\n        });\n    }\n\n\n\n    disableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_disable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableRole(roleId);\n            }\n        });\n    }\n\n    enableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_enable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableRole(roleId);\n            }\n        });\n    }\n\n    deleteRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/roles/delete/' + roleId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                    this.notify.success(this.translate.instant('ROLE.role_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/disable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(environment['url'] + '/ws/roles/enable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.roles.slice();\n        if (!sort.active || sort.direction === '') {\n            this.roles = data;\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label_short\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label_short }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/general/roles/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-role.component.html',\n    styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n    headers     : HttpHeaders = this.authService.headers;\n    loading     : boolean   = true;\n    roleId      : any;\n    role        : any;\n    roles       : any[]     = [];\n    privileges  : any;\n    rolePrivileges: any;\n    roleForm    : any[]     = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'enabled',\n            label: this.translate.instant('ROLE.enable'),\n            type: 'checkbox',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    // Only used to get translation available while running the extract-translations\n    parentLabel = [\n        marker('PRIVILEGES.general'),\n        marker('PRIVILEGES.administration'),\n        marker('PRIVILEGES.verifier'),\n        marker('PRIVILEGES.splitter'),\n        marker('PRIVILEGES.accounts')\n    ];\n    privilegesLabel = [\n        marker('PRIVILEGES.access_verifier'),\n        marker('PRIVILEGES.access_splitter'),\n        marker('PRIVILEGES.settings'),\n        marker('PRIVILEGES.upload'),\n        marker('PRIVILEGES.users_list'),\n        marker('PRIVILEGES.add_user'),\n        marker('PRIVILEGES.update_user'),\n        marker('PRIVILEGES.roles_list'),\n        marker('PRIVILEGES.add_role'),\n        marker('PRIVILEGES.update_role'),\n        marker('PRIVILEGES.version_update'),\n        marker('PRIVILEGES.custom_fields'),\n        marker('PRIVILEGES.forms_list'),\n        marker('PRIVILEGES.customers_list'),\n        marker('PRIVILEGES.suppliers_list'),\n        marker('PRIVILEGES.create_supplier'),\n        marker('PRIVILEGES.update_supplier'),\n        marker('PRIVILEGES.change_language'),\n        marker('PRIVILEGES.form_builder'),\n        marker('PRIVILEGES.export_suppliers'),\n        marker('PRIVILEGES.import_suppliers'),\n        marker('PRIVILEGES.history'),\n        marker('PRIVILEGES.add_output'),\n        marker('PRIVILEGES.add_input'),\n        marker('PRIVILEGES.add_form'),\n        marker('PRIVILEGES.update_output'),\n        marker('PRIVILEGES.update_input'),\n        marker('PRIVILEGES.position_mask_list'),\n        marker('PRIVILEGES.update_form'),\n        marker('PRIVILEGES.inputs_list'),\n        marker('PRIVILEGES.outputs_list'),\n        marker('PRIVILEGES.add_position_mask'),\n        marker('PRIVILEGES.update_position_mask'),\n        marker('PRIVILEGES.create_customer'),\n        marker('PRIVILEGES.update_customer'),\n        marker('PRIVILEGES.document_type_splitter'),\n        marker('PRIVILEGES.separator_splitter'),\n        marker('PRIVILEGES.add_input_splitter'),\n        marker('PRIVILEGES.update_input_splitter'),\n        marker('PRIVILEGES.inputs_list_splitter'),\n        marker('PRIVILEGES.update_output_splitter'),\n        marker('PRIVILEGES.add_output_splitter'),\n        marker('PRIVILEGES.outputs_list_splitter'),\n        marker('PRIVILEGES.update_form_splitter'),\n        marker('PRIVILEGES.add_form_splitter'),\n        marker('PRIVILEGES.forms_list_splitter'),\n        marker('PRIVILEGES.statistics'),\n        marker('PRIVILEGES.configurations'),\n        marker('PRIVILEGES.docservers'),\n        marker('PRIVILEGES.regex'),\n        marker('PRIVILEGES.update_document_type'),\n        marker('PRIVILEGES.add_document_type'),\n        marker('PRIVILEGES.login_methods'),\n        marker('PRIVILEGES.verifier_display'),\n        marker('PRIVILEGES.mailcollect'),\n        marker('PRIVILEGES.user_quota')\n    ];\n    // End translation\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.roleId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/roles/getById/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.role = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.roleForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/general/roles']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/getbyRoleId/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.rolePrivileges = data;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.put(environment['url'] + '/ws/roles/update/' + this.roleId, {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(environment['url'] + '/ws/roles/updatePrivilege/' + this.roleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('general', 'update_role', this.translate.instant('HISTORY-DESC.update-role', {role: role['label']}));\n                    this.notify.success(this.translate.instant('ROLE.updated'));\n                    this.router.navigate(['/settings/general/roles/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        this.rolePrivileges.forEach((element: any) => {\n            if (privilegeId === element) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        } else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;<span *ngIf=\"this.role\">{{ this.role['label'] }}</span>\n                <strong *ngIf=\"this.role\">&nbsp;({{ this.role['label_short'] }})</strong>\n            </h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-slide-toggle class=\"mt-4 -ml-96\" *ngIf=\"field.type === 'checkbox'\" [formControl]=\"field.control\">\n                        {{ field.label | translate }}\n                    </mat-slide-toggle>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges && this.rolePrivileges\" dynamicHeight class=\"w-full\">\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-40 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\" [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.update' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-user-quota',\n    templateUrl: './user-quota.component.html',\n    styleUrls: ['./user-quota.component.scss']\n})\nexport class UserQuotaComponent implements OnInit {\n    headers                 : HttpHeaders = this.authService.headers;\n    loading                 : boolean     = true;\n    quotaNumber             : number      = 0;\n    quotaEnabled            : boolean     = false;\n    quotaUsersfiltered      : any[]       = [];\n    usersControlSelect      : FormControl = new FormControl();\n    quotaEmailDestControl   : FormControl = new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"));\n    usersList               : any[]       = [];\n    userQuotaConfigId       : number      = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data_users: any) => {\n                this.usersList = data_users.users;\n                this.http.get(environment['url'] + '/ws/config/getConfiguration/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.userQuotaConfigId = data.configuration[0].id;\n                        if (data.configuration.length === 1) {\n                            this.quotaEnabled = data.configuration[0].data.value.enabled;\n                            this.quotaNumber = data.configuration[0].data.value.quota;\n                            this.quotaEmailDestControl.setValue(data.configuration[0].data.value.email_dest);\n                            data.configuration[0].data.value.users_filtered.forEach((elem: any) => {\n                                this.usersList.forEach((user: any) => {\n                                    if (user['username'] === elem.trim()) {\n                                        this.quotaUsersfiltered.push(user['id']);\n                                    }\n                                });\n                                this.usersControlSelect.setValue(this.quotaUsersfiltered);\n                            });\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateQuotaNumber() {\n        this.loading = true;\n        const data: any = {\n            'value': {\n                'enabled': this.quotaEnabled,\n                'quota': this.quotaNumber,\n                'users_filtered': [],\n                'email_dest': this.quotaEmailDestControl.value\n            }\n        };\n        if (this.usersControlSelect.value) {\n            this.usersControlSelect.value.forEach((user_id: any) => {\n                this.usersList.forEach((user: any) => {\n                    if (user['id'] === user_id) {\n                        data['value']['users_filtered'].push(user['username']);\n                    }\n                });\n            });\n        }\n\n        this.http.put(environment['url'] + '/ws/config/updateConfiguration/' + this.userQuotaConfigId,\n            {'data': data}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER-QUOTA.updated'));\n                this.historyService.addHistory('general', 'mailcollect', this.translate.instant('HISTORY-DESC.user_quota_updated'));\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\" class=\"w-full overflow-auto\" style=\"height: calc(100% - 70px)\">\n            <app-hint [message]=\"'USER-QUOTA.description' | translate\"></app-hint>\n            <hr class=\"border-green-400 relative z-30 w-1/3 mx-auto my-4\">\n            <div class=\"w-1/3 mx-auto my-10 text-center\">\n                <mat-slide-toggle [(ngModel)]=\"this.quotaEnabled\" matTooltip=\"{{ 'USER-QUOTA.enabled' | translate }}\">\n                    {{ 'USER-QUOTA.enabled' | translate }}\n                </mat-slide-toggle>\n            </div>\n            <div class=\"flex justify-center items-center align-middle\">\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.quota_number' | translate }}</mat-label>\n                    <input matInput type=\"number\" [(ngModel)]=\"this.quotaNumber\"/>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.filtered_users' | translate }}</mat-label>\n                    <mat-select [formControl]=\"usersControlSelect\" [multiple]=\"true\" [value]=\"this.quotaUsersfiltered\">\n                        <mat-option *ngFor=\"let option of this.usersList\" [value]=\"option['id']\">\n                            {{ option['lastname'] + ' ' + option['firstname'] }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"block p-4 w-1/3\">\n                    <mat-label>{{ 'USER-QUOTA.email_dest' | translate }}</mat-label>\n                    <input matInput type=\"text\" [formControl]=\"this.quotaEmailDestControl\"/>\n                </mat-form-field>\n            </div>\n            <div class=\"flex justify-center m-6\">\n                <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition\n                                duration-300\" type=\"submit\" mat-button (click)=\"updateQuotaNumber()\">\n                    {{ 'USER-QUOTA.update' | translate }}\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create-user',\n    templateUrl: './create-user.component.html',\n    styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n    loading         : boolean   = true;\n    loadingCustomers: boolean   = true;\n    roles           : any[]     = [];\n    userForm        : any[]     = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl('', Validators.maxLength(50)),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    customers       : any[]     = [];\n    usersCustomers  : any[]     = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n                this.userForm.forEach(element => {\n                    if (element.id === 'role') {\n                        element.values = this.roles;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.usersCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUsersCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.usersCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found) {\n            this.usersCustomers.push(customerId);\n        } else {\n            this.usersCustomers.splice(cpt, 1);\n        }\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    // @ts-ignore\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user : any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            if (user['password'] !== user['password_check']) {\n                this.notify.handleErrors(this.translate.instant('USER.password_mismatch'));\n                return of(false);\n            }\n            user['customers'] = this.usersCustomers;\n            this.http.post(environment['url'] + '/ws/users/new', user, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    const _user = user['lastname'] + ' ' + user['firstname'];\n                    this.historyService.addHistory('general', 'create_user', this.translate.instant('HISTORY-DESC.create-user', {user: _user}));\n                    this.notify.success(this.translate.instant('USER.created'));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userForm.forEach(element => {\n            if (element.id === field)\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.create_user' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ACCOUNTS.customers_list\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-list *ngIf=\"!this.loadingCustomers\">\n            <mat-list-item *ngFor=\"let customer of customers\" class=\"cursor-pointer m-2 w-auto\"\n                           (click)=\"updateUsersCustomers(customer.id)\">\n                <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                    {{ customer.name }}\n                </span>\n                <span *ngIf=\"hasCustomer(customer.id)\">\n                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { environment } from  \"../../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\n\nexport class UsersListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role','status', 'actions'];\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    users           : any         = [];\n    allUsers        : any         = [];\n    roles           : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    activeUser      : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n    userQuotaConfig : any         = {};\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/general/users') || lastUrl === '/') {\n            if (this.localStorageService.get('usersPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('usersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('usersPageIndex');\n\n        this.http.get(environment['url'] + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allUsers = data.users;\n                this.http.get(environment['url'] + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.roles = data.roles;\n                        if (this.roles) {\n                            this.allUsers.forEach((user: any) => {\n                                this.roles.forEach((element: any) => {\n                                    if (user.role === element.id) {\n                                        user.role_label = element.label;\n                                    }\n                                });\n                            });\n                        }\n                        this.loadUsers();\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.http.get(environment['url'] + '/ws/config/getConfiguration/userQuota', {headers: this.authService.headers}).pipe(\n                    tap((config: any) => {\n                        this.userQuotaConfig = config.configuration[0].data.value;\n                        this.activeUser = this.allUsers.length;\n                        this.getUserQuotaFiltered();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchUser(event: any) {\n        this.search = event.target.value;\n        this.loadUsers();\n    }\n\n    getUserQuotaFiltered() {\n        this.allUsers.forEach((user: any) => {\n            if (this.userQuotaConfig.users_filtered.includes(user['username'])) {\n                this.activeUser -= 1;\n            }\n        });\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('usersPageIndex', event.pageIndex);\n        this.loadUsers();\n    }\n\n    loadUsers(): void {\n        this.http.get(environment['url'] + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.users[0]) this.total = data.users[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadUsers();\n                }\n                this.users = data.users;\n                if (this.roles) {\n                    this.users.forEach((user: any) => {\n                        this.roles.forEach((element: any) => {\n                            if (user.role === element.id) {\n                                user.role_label = element.label;\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteUser(userId);\n                this.historyService.addHistory('general', 'delete_user', this.translate.instant('HISTORY-DESC.delete-user', {user: user}));\n            }\n        });\n    }\n\n    disableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableUser(userId);\n                this.historyService.addHistory('general', 'disable_user', this.translate.instant('HISTORY-DESC.disable-user', {user: user}));\n            }\n        });\n    }\n\n    enableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableUser(userId);\n                this.historyService.addHistory('general', 'enable_user', this.translate.instant('HISTORY-DESC.enable-user', {user: user}));\n            }\n        });\n    }\n\n    deleteUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/users/delete/' + userId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                    this.notify.success(this.translate.instant('USER.user_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/disable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(environment['url'] + '/ws/users/enable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allUsers.slice();\n        if (!sort.active || sort.direction === '') {\n            this.users = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role_label, b.role_label, isAsc);\n                case 'status': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n        this.users = this.users.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{ 'USER.search_user' | translate }}</mat-label>\n                    <input matInput type=\"text\" [disabled]=\"this.loading\" (keyup)=\"searchUser($event)\">\n                </mat-form-field>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"username\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.username }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"firstname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.firstname }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"lastname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.lastname }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.role' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.role_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/general/users/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n        <div *ngIf=\"this.userQuotaConfig.enabled\" class=\"text-center\">\n            <hr class=\"border-green-400 w-1/3 mx-auto my-2\">\n            <span class=\"text-xl\">\n                {{ 'USER-QUOTA.informations' | translate }}\n                <span class=\"cursor-default relative top-7 text-green-400 text-8xl\"\n                      [class.text-green-400] = \"this.activeUser < this.userQuotaConfig.quota\"\n                      [class.text-red-400] = \"this.activeUser > this.userQuotaConfig.quota\"\n                      [class.text-orange-400] = \"this.activeUser === this.userQuotaConfig.quota\">&bull;</span>\n            </span>\n            <div class=\"m-2 mt-8 text-base\">\n                {{ 'USER-QUOTA.quota_number' | translate }} : {{ this.userQuotaConfig.quota }}\n            </div>\n            <div class=\"m-2 text-base\">\n                {{ 'USER.enabled' | translate }} : {{ this.activeUser }}\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-user.component.html',\n    styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n    headers                     : HttpHeaders   = this.authService.headers;\n    loading                     : boolean       = true;\n    loadingCustomers            : boolean       = true;\n    userId                      : any;\n    user                        : any;\n    roles                       : any[]         = [];\n    userForm                    : any[]         = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'email',\n            label: this.translate.instant('USER.email'),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")),\n            required: false\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    customers                   : any[]         = [];\n    usersCustomers              : any[]         = [];\n    disablePasswordModification : boolean       = false;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/auth/retrieveLoginMethodName').pipe(\n            tap((data: any) => {\n                data.login_methods.forEach((method: any) => {\n                    if (method.enabled) {\n                        if (method.method_name !== 'default') {\n                            this.disablePasswordModification = true;\n                        }\n                    }\n                });\n            }),\n            catchError ((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of (false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                this.http.get(environment['url'] + '/ws/users/getCustomersByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.usersCustomers = data;\n                        this.loadingCustomers = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    } else {\n                        if ((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.user = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.userForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user: any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/users/update/' + this.userId, {'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.updated'));\n                    const _user = user['lastname'] + ' ' + user['firstname'];\n                    this.historyService.addHistory('general', 'update_user', this.translate.instant('HISTORY-DESC.update-user', {user: _user}));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.usersCustomers) {\n            if (_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUsersCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.usersCustomers) {\n            if (_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n\n        if (!found)\n            this.usersCustomers.push(customerId);\n        else\n            this.usersCustomers.splice(cpt, 1);\n\n        this.http.put(environment['url'] + '/ws/users/customers/update/' + this.userId, {'customers': this.usersCustomers}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.customers_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/users/');\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">\n                {{ this.serviceSettings.getTitle() }} :&nbsp;\n                <span *ngIf=\"this.user\">\n                    {{ this.user['firstname'] }} {{ this.user['lastname'] }}<strong>&nbsp;({{ this.user['username'] }})</strong>\n                </span>\n            </h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type !== 'select'\"\n                                    [class.pointer-events-none]=\"field.type === 'password' && this.disablePasswordModification\">\n                        <mat-label [class.text-gray-400]=\"field.type === 'password' && this.disablePasswordModification\">\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input matInput [readonly]=\"field.id === 'username' || (field.type === 'password' && this.disablePasswordModification)\"\n                               [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.update' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"ACCOUNTS.customers_list\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomers\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-list *ngIf=\"!this.loadingCustomers\">\n            <mat-list-item *ngFor=\"let customer of customers\" class=\"cursor-pointer m-2 w-auto\"\n                           (click)=\"updateUsersCustomers(customer.id)\">\n                <span [class.text-green-400]=\"hasCustomer(customer.id)\" class=\"hover:text-green-400\">\n                    {{ customer.name }}\n                </span>\n                <span *ngIf=\"hasCustomer(customer.id)\">\n                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                </span>\n            </mat-list-item>\n        </mat-list>\n\n\n\n\n    </mat-sidenav>\n</mat-sidenav-container>","<h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n    {{ \"SETTINGS.administration\" | translate }}\n</h3>\n<mat-divider class=\"border-green-400\"></mat-divider>\n<mat-nav-list class=\"pt-0 overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n    <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent(); let i = index\"\n                         [expanded]=\"parent.opened\" (opened)=\"this.serviceSettings.closeOtherParent(this.router.url, parent['id'])\">\n        <mat-expansion-panel-header class=\"settings_expansion\" [class.border-t-0]=\"i === 0\">\n            <mat-panel-title>\n                {{ parent['label'] | translate }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"w-full border-t-2 border-gray-600\">\n            <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                 [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                 [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\">\n                <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                    <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                                         [expanded]=\"this.router.url.includes(setting['route'])\">\n                        <mat-expansion-panel-header class=\"font-normal w-full h-16 pl-0\">\n                            <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                <button [class.text-green-400]=\"this.router.url === setting['route']\"\n                                        class=\"pr-0 pl-3 font-normal w-full h-16 flex gap-4 justify-center items-center text-center\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        [routerLink]=\"setting['route']\" style=\"font-size: 0.82rem !important\">\n                                    <i [class.text-green-400]=\"this.router.url === setting['route']\"\n                                       class=\"text-lg rounded-full flex items-center justify-center {{ setting['icon'] }}\">\n                                    </i>\n                                    <p [class.font-medium]=\"this.router.url === setting['route']\" class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                                        {{ setting['label'] | translate }}\n                                    </p>\n                                </button>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                             [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                             [class.border-t]=\"!action['showOnlyIfActive']\"\n                             [class.w-full]=\"!action['showOnlyIfActive']\">\n                            <div class=\"border-b border-gray-400\"\n                                 *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] === '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                <button [routerLink]=\"action['route']\"\n                                        [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                        [class.text-gray-800]=\"!this.router.url.includes(action['route'])\"\n                                        class=\"font-normal w-full h-10 pl-8 2xl:ml-4 text-xs flex gap-4 items-center text-center\"\n                                        (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                        [class.disable_link]=\"action['showOnlyIfActive']\">\n                                    <i class=\"text-sm rounded-full flex items-center justify-center {{ action['icon'] }}\"></i>\n                                    <p class=\"m-0 text-xs\" style=\"margin-top: 2.5px!important\">\n                                        {{ action['label'] | translate }}\n                                    </p>\n                                </button>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n                <ng-template #noActions>\n                    <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] === '*'\"\n                            [class.text-green-400]=\"this.router.url === setting['route']\"\n                            class=\"pr-0 pl-3 font-normal w-full h-16 flex gap-4 justify-center items-center text-center\"\n                            (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                            [routerLink]=\"setting['route']\" style=\"font-size: 0.82rem !important\">\n                        <i class=\"rounded-full flex items-center justify-center fa-lg {{ setting['icon'] }}\"></i>\n                        <p [class.font-medium]=\"this.router.url === setting['route']\" class=\"m-0 truncate w-11/12 2xl:w-full text-left\">\n                            {{ setting['label'] | translate }}\n                        </p>\n                    </button>\n                </ng-template>\n            </div>\n        </div>\n    </mat-expansion-panel>\n</mat-nav-list>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Component } from '@angular/core';\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n  selector: 'app-settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent {\n  constructor(\n      public router: Router,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService,\n  ) {}\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { AboutUsComponent } from './general/about-us/about-us.component';\nimport { HasPrivilegeService } from \"../../services/has-privilege.service\";\nimport { SeparatorComponent } from \"./splitter/separator/separator.component\";\nimport { LoginRequiredService } from \"../../services/login-required.service\";\nimport { FormListComponent } from \"./verifier/form/list/form-list.component\";\nimport { UsersListComponent } from \"./general/users/list/users-list.component\";\nimport { RolesListComponent } from \"./general/roles/list/roles-list.component\";\nimport { SplitterFormListComponent } from \"./splitter/form/list/form-list.component\";\nimport { CreateUserComponent } from \"./general/users/create/create-user.component\";\nimport { UpdateUserComponent } from \"./general/users/update/update-user.component\";\nimport { CreateRoleComponent } from \"./general/roles/create/create-role.component\";\nimport { UpdateRoleComponent } from \"./general/roles/update/update-role.component\";\nimport { InputsListComponent } from \"./verifier/inputs/list/inputs-list.component\";\nimport { FormBuilderComponent } from \"./verifier/form/builder/form-builder.component\";\nimport { OutputsListComponent } from \"./verifier/outputs/list/outputs-list.component\";\nimport { UpdateInputComponent } from \"./verifier/inputs/update/update-input.component\";\nimport { SplitterInputListComponent } from \"./splitter/inputs/list/input-list.component\";\nimport { CreateInputComponent } from \"./verifier/inputs/create/create-input.component\";\nimport { ListDocTypeComponent } from \"./splitter/doc-types/list/list-doc-type.component\";\nimport { CustomFieldsComponent } from \"./general/custom-fields/custom-fields.component\";\nimport { SplitterOutputListComponent } from \"./splitter/output/list/output-list.component\";\nimport { UpdateOutputComponent } from \"./verifier/outputs/update/update-output.component\";\nimport { ConfigurationsComponent } from \"./general/configurations/configurations.component\";\nimport { DocserversComponent } from \"./general/docservers/docservers.component\";\nimport { RegexComponent } from \"./general/regex/regex.component\";\nimport { MailCollectComponent } from \"./general/mailcollect/mailcollect.component\";\nimport { CreateOutputComponent } from \"./verifier/outputs/create/create-output.component\";\nimport { SplitterFormBuilderComponent } from \"./splitter/form/builder/form-builder.component\";\nimport { SplitterCreateInputComponent } from \"./splitter/inputs/create/create-input.component\";\nimport { SplitterUpdateInputComponent } from \"./splitter/inputs/update/update-input.component\";\nimport { CreateDocTypeComponent } from \"./splitter/doc-types/create/create-doc-type.component\";\nimport { SplitterUpdateOutputComponent } from \"./splitter/output/update/update-output.component\";\nimport { SplitterCreateOutputComponent } from \"./splitter/output/create/create-output.component\";\nimport { ListAiModelComponent } from \"./splitter/ai-model/list/list-ai-model.component\";\nimport { CreateAiModelComponent } from \"./splitter/ai-model/create/create-ai-model.component\";\nimport { UpdateAiModelComponent } from \"./splitter/ai-model/update/update-ai-model.component\";\nimport { PositionsMaskListComponent } from \"./verifier/positions-mask/list/positions-mask-list.component\";\nimport { CreatePositionsMaskComponent } from \"./verifier/positions-mask/create/create-positions-mask.component\";\nimport { UpdatePositionsMaskComponent } from \"./verifier/positions-mask/update/update-positions-mask.component\";\nimport { CreateFolderDocTypeComponent } from \"./splitter/doc-types/create-folder/create-folder-doc-type.component\";\nimport { LoginMethodsComponent } from \"./general/login-methods/login-methods.component\";\nimport { VerifierDisplayComponent } from \"./verifier/display/display.component\";\nimport { UserQuotaComponent } from \"./general/user-quota/user-quota.component\";\n\nconst routes: Routes = [\n    {\n        path: 'settings', component: SettingsComponent,\n        data: {title: 'GLOBAL.settings', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n// --- General\n    // Configurations\n    {\n        path: 'settings/general/configurations', component: ConfigurationsComponent,\n        data: {title: 'SETTINGS.configurations', privileges: ['settings', 'configurations']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/docservers', component: DocserversComponent,\n        data: {title: 'SETTINGS.docservers', privileges: ['settings', 'docservers']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/regex', component: RegexComponent,\n        data: {title: 'SETTINGS.regex', privileges: ['settings', 'regex']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/mailcollect', component: MailCollectComponent,\n        data: {title: 'SETTINGS.mailcollect', privileges: ['settings', 'mailcollect']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/user-quota', component: UserQuotaComponent,\n        data: {title: 'SETTINGS.user_quota', privileges: ['settings', 'user_quota']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users', component: UsersListComponent,\n        data: {title: 'SETTINGS.users_list', privileges: ['settings', 'users_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/new', component: CreateUserComponent,\n        data: {title: 'USER.create_user', privileges: ['settings', 'add_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/update/:id', component: UpdateUserComponent,\n        data: {title: 'USER.update', privileges: ['settings', 'update_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles', component: RolesListComponent,\n        data: {title: 'SETTINGS.roles_list', privileges: ['settings', 'roles_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/new', component: CreateRoleComponent,\n        data: {title: 'ROLE.create_role', privileges: ['settings', 'add_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/update/:id', component: UpdateRoleComponent,\n        data: {title: 'ROLE.update', privileges: ['settings', 'update_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/login-methods', component: LoginMethodsComponent,\n        data: {title: 'SETTINGS.login_methods', privileges: ['settings', 'login_methods']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/about-us', component: AboutUsComponent,\n        data: {title: 'SETTINGS.abouts_us', privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/custom-fields', component: CustomFieldsComponent,\n        data: {title: 'SETTINGS.custom_fields', privileges: ['settings', 'custom_fields']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// --- END General\n// --- Verifier\n    {\n        path: 'settings/verifier/display', component: VerifierDisplayComponent,\n        data: {title: 'SETTINGS.verifier_display', privileges: ['settings', 'verifier_display']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms', component: FormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/new', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/edit/:id', component: FormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs', component: OutputsListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/new', component: CreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/outputs/update/:id', component: UpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/inputs', component: InputsListComponent,\n        data: {title: 'FORMS.input_settings', privileges: ['settings', 'inputs_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/inputs/new', component: CreateInputComponent,\n        data: {title: 'SETTINGS.add_input', privileges: ['settings', 'add_input']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/inputs/update/:id', component: UpdateInputComponent,\n        data: {title: 'SETTINGS.update_input', privileges: ['settings', 'update_input']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask', component: PositionsMaskListComponent,\n        data: {title: 'SETTINGS.list_positions_mask', privileges: ['settings', 'positions_mask_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/create', component: CreatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_builder', privileges: ['settings', 'add_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/update/:id', component: UpdatePositionsMaskComponent,\n        data: {title: 'SETTINGS.positions_mask_update', privileges: ['settings', 'update_positions_mask']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n// -- END Verifier\n// -- Splitter\n    {\n        path: 'settings/splitter/forms', component: SplitterFormListComponent,\n        data: {title: 'SETTINGS.list_forms', privileges: ['settings', 'forms_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/new', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_builder', privileges: ['settings', 'add_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/forms/builder/edit/:id', component: SplitterFormBuilderComponent,\n        data: {title: 'SETTINGS.form_update', privileges: ['settings', 'update_form_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/separator',\n        component: SeparatorComponent,\n        data: {title: 'SETTINGS.document_separator', privileges: ['settings', 'separator_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type',\n        component: ListDocTypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'document_type_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/new',\n        component: CreateDocTypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/document-type/create-folder',\n        component: CreateFolderDocTypeComponent,\n        data: {title: 'SETTINGS.document_type', privileges: ['settings', 'add_document_type']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs', component: SplitterOutputListComponent,\n        data: {title: 'FORMS.output_settings', privileges: ['settings', 'outputs_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/new', component: SplitterCreateOutputComponent,\n        data: {title: 'SETTINGS.add_output', privileges: ['settings', 'add_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/outputs/update/:id', component: SplitterUpdateOutputComponent,\n        data: {title: 'SETTINGS.update_output', privileges: ['settings', 'update_output_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/inputs', component: SplitterInputListComponent,\n        data: {title: 'FORMS.input_settings', privileges: ['settings', 'inputs_list_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/inputs/new', component: SplitterCreateInputComponent,\n        data: {title: 'SETTINGS.add_input', privileges: ['settings', 'add_input_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/inputs/update/:id', component: SplitterUpdateInputComponent,\n        data: {title: 'SETTINGS.update_input', privileges: ['settings', 'update_input_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai', component: ListAiModelComponent,\n        data: {title: 'SETTINGS.artificial_intelligence', privileges: ['settings', 'list_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/create', component: CreateAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.add_model', privileges: ['settings', 'create_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/splitter/ai/update/:id', component: UpdateAiModelComponent,\n        data: {title: 'ARTIFICIAL-INTELLIGENCE.update_model', privileges: ['settings', 'update_ai_model']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    }\n// -- END Splitter\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class SettingsRoutingModule {}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../services/user.service\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: \"settings.component.html\"\n})\n\nexport class SettingsComponent implements OnInit {\n    selectedSetting         : string    = this.serviceSettings.getSelectedSetting();\n    selectedParentSetting   : string    = this.serviceSettings.getSelectedParentSetting();\n    settings                : any       = this.serviceSettings.getSettings();\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.selectedSetting = this.serviceSettings.getSelectedSetting();\n        this.selectedParentSetting = this.serviceSettings.getSelectedParentSetting();\n        this.settings = this.serviceSettings.getSettings();\n        let settingsFound = false;\n        this.settings[this.selectedParentSetting].forEach((element: any) => {\n            if (element['id'] === this.selectedSetting) {\n                settingsFound = true;\n                const routeToGo = element.route;\n                if (routeToGo && this.privilegesService.hasPrivilege(element.privilege))\n                    this.router.navigateByUrl(routeToGo).then();\n            }\n        });\n\n        if (!settingsFound)\n            this.router.navigateByUrl('/settings/general/configurations').then();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-create-model',\n  templateUrl: './create-ai-model.component.html',\n  styleUrls: ['./create-ai-model.component.scss']\n})\n\nexport class CreateAiModelComponent implements OnInit {\n    loading         : boolean   = true;\n    docs            : any = [];\n    doctypes        : any = [];\n    docStatus       : any = [];\n    controls        : any = [];\n    formControl     : FormControl = new FormControl('');\n    listModels      : any = [];\n    forms           : any = [];\n    chosenForm      : any = [];\n    chosenDocs      : any = [];\n    totalChecked    : number    = 0;\n    modelForm       : any[]     = [\n        {\n            id: 'model_label',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            placeholder: \"exemple_modèle.sav\",\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n            required: true,\n        },\n        {\n            id: 'model_stop',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveModels();\n        this.retrieveDoctypes();\n        this.retrieveOCDoctypes();\n        this.retrieveForms();\n    }\n\n    retrieveDoctypes() {\n        this.http.get(environment['url'] + '/ws/ai/splitter/getTrainDocuments', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.docs = data;\n                this.docStatus.splice(0);\n                for (const element of this.docs) {\n                    this.docStatus.push({\n                        doc: element,\n                        isSelected: false,\n                        linked_doctype: \"\",\n                        linked_form: \"\"\n                    });\n                    this.controls.push(new FormControl(''));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkSelectedBatch(cpt: number, current_doc: any) {\n        this.totalChecked = this.docStatus.filter((a: { isSelected: boolean }) => a.isSelected).length;\n        this.onFormSelect({value: this.forms[0].id}, cpt, current_doc);\n    }\n\n    retrieveOCDoctypes() {\n        this.doctypes = [];\n        this.http.get(environment['url'] + '/ws/ai/list/' + 'document', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: any) => {\n                    newDoctype = {\n                        'id': doctype.id,\n                        'key': doctype.key,\n                        'type': doctype.type,\n                        'code': doctype.code,\n                        'label': doctype.label,\n                        'status': doctype.status,\n                        'formId': doctype.form_id,\n                        'isDefault': doctype.is_default,\n                    };\n                    this.doctypes.push(newDoctype);\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any, doc: string) {\n        const val = event.value;\n        const match = this.docStatus.find((a: { doc: string }) => a.doc === doc);\n        match.linked_doctype = val;\n        return true;\n    }\n\n    onFormSelect(event: any, index: number, doc: string) {\n        const val = event.value;\n        for (const element of this.forms) {\n            if (element.id === val) {\n                this.chosenForm[index] = element.id;\n                this.chosenDocs[index] = this.doctypes.filter((a: { formId: number }) => a.formId === this.chosenForm[index]);\n            }\n        }\n        this.controls[index].value = this.chosenDocs[index][0].id;\n        const match = this.docStatus.find((a: { doc: string }) => a.doc === doc);\n        match.linked_doctype = this.chosenDocs[index][0].id;\n        match.linked_form = this.chosenForm[index];\n    }\n\n    createModel() {\n        let start_training = true;\n        if (this.isValidForm(this.modelForm) && this.totalChecked > 1 && this.isValidForm2(this.controls)) {\n            const doctypes = [];\n            const minPred = this.getValueFromForm(this.modelForm, 'model_stop');\n            const modelName = this.getValueFromForm(this.modelForm, 'model_label');\n            const matches = this.docStatus.filter((a: { isSelected: boolean }) => a.isSelected);\n            for (let i = 0; i < this.totalChecked; i = i + 1) {\n                const fold = matches[i].doc;\n                const formid = matches[i].linked_form;\n                console.log(formid)\n                const ocTarget = matches[i].linked_doctype;\n                doctypes.push({\n                    form: formid,\n                    folder: fold,\n                    doctype: ocTarget\n                });\n            }\n\n            for (const element of this.listModels) {\n                const exists = Object.values(element).includes(modelName);\n                if (exists) {\n                    this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.already_existing_model'));\n                    start_training = false;\n                    break;\n                }\n            }\n            if (start_training) {\n                this.http.post(environment['url'] + '/ws/ai/trainModel/' + modelName,\n                    {docs: doctypes, min_pred: minPred}, {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n\n                this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.created'));\n                this.historyService.addHistory('splitter', 'create_ai_model', this.translate.instant('HISTORY-DESC.create-ai-model', {model: modelName}));\n                this.router.navigate(['/settings/splitter/ai']).then();\n            }\n        } else {\n            if(this.totalChecked < 2) {\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.not_enough_checked'));\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    isValidForm2(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.status !== 'DISABLED' && element.status !== 'VALID') || element.value == null) {\n                state = false;\n            }\n            element.markAsTouched();\n        });\n        return state;\n    }\n\n    isSelectRequired(form: any, selected: any) {\n        if (selected) {\n            form.setValidators([Validators.required]);\n        } else {\n            form.clearValidators();\n        }\n        form.updateValueAndValidity();\n        return 0;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveModels() {\n        this.http.get(environment['url'] + '/ws/ai/getAIModels?module=splitter&limit=', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.listModels = data.models;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    retrieveForms() {\n        this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n               this.forms = forms.forms;\n               if (this.forms.length === 1) {\n                   this.formControl.setValue(this.forms[0].id);\n               }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayDoctypes(form: any) {\n        return !!form.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"mx-10 mt-10 mb-5 grid grid-cols-2 gap-4 place-items-stretch\">\n                <ng-container *ngFor=\"let field of modelForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_label'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\"\n                               placeholder=\"{{ field.placeholder }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}, format : \"model_name.sav\"\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'doc_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of doctypes\" [value]=\"option.key\">\n                                {{ option.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, modelForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_stop'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\"\n                               placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h2 class=\"text-center m-4\">\n                {{ 'ARTIFICIAL-INTELLIGENCE.choose_documents' | translate }}\n            </h2>\n            <mat-list class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let item of this.docStatus, let i=index\">\n                    <mat-checkbox [(ngModel)]=\"item.isSelected\" (change)=\"checkSelectedBatch(i, item.doc);\"\n                                  [ngModelOptions]=\"{standalone: true}\"\n                                  class=\"w-lg h-lg accent-green-400 checkBox_list cursor-pointer pr-4 pb-2\">\n                        {{ item.doc }}\n                    </mat-checkbox>\n                    <div>\n                        <mat-form-field *ngIf=\"item.isSelected\">\n                            <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                            <mat-select [formControl]=\"formControl\"\n                                        (selectionChange)=\"onFormSelect($event, i, item.doc)\">\n                                <mat-option *ngFor=\"let option of forms\" [value]=\"option.id\">\n                                    {{ option.label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formControl.hasError('required')\">\n                                {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <mat-form-field *ngIf=\"displayDoctypes(formControl) && item.isSelected\">\n                        <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.doctype\" | translate }}</mat-label>\n                        <mat-select [formControl]=\"controls[i]\"\n                                    (selectionChange)=\"changeOutputType($event, item.doc)\">\n                            <mat-option *ngFor=\"let option of chosenDocs[i]\" [value]=\"option.id\">\n                                {{ option.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"controls[i].hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </mat-list>\n        </div>\n        <div class=\"flex justify-center items-center mb-2 py-4\">\n            <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span class=\"block\" (click)=\"createModel()\">\n                    {{ 'ARTIFICIAL-INTELLIGENCE.train_a_model' | translate }}\n                </span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, of, tap } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\n\n@Component({\n  selector: 'app-list-ai',\n  templateUrl: './list-ai-model.component.html',\n  styleUrls: ['./list-ai-model.component.scss']\n})\n\nexport class ListAiModelComponent implements OnInit {\n    loading             : boolean     = true;\n    showResponse        : boolean     = false;\n    isPredicting        : boolean     = false;\n    modelsList          : any         = [];\n    displayedColumns    : string[]    = ['id', 'model_path', 'train_time', 'accuracy_score', 'documents', 'min_proba', 'actions'];\n    offset              : number      = 0;\n    pageIndex           : number      = 0;\n    total               : number      = 0;\n    pageSize            : number      = 10;\n    clickedRow          : object      = {};\n    prediction          : any         = [];\n    fileControl         : FormControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension([\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.retrieveModels();\n    }\n\n    retrieveModels(offset?: number, size?: number) {\n        this.http.get(environment['url'] + '/ws/ai/getAIModels', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.modelsList = data.models;\n                for (let i = 0; i < this.modelsList.length; i++) {\n                    let tmp_doc = \"\";\n                    for (let j = 0; j < this.modelsList[i].documents.length; j++) {\n                        tmp_doc += this.modelsList[i].documents[j].folder + \", \";\n                        if(j === this.modelsList[i].documents.length - 1) {\n                            tmp_doc = tmp_doc.slice(0, -2);\n                        }\n                    }\n                    this.modelsList[i].documents = [tmp_doc];\n                }\n                this.total = this.modelsList.length;\n                if (offset !== undefined && size !== undefined) {\n                    this.modelsList = this.modelsList.slice(offset, offset + size);\n                } else {\n                    this.modelsList = this.modelsList.slice(0, 10);\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.modelsList.slice();\n        if (!sort.active || sort.direction === '') {\n            this.modelsList = data;\n            return;\n        }\n\n        this.modelsList = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'model_path': return this.compare(a.path, b.path, isAsc);\n                case 'train_time': return this.compare(a.train_time, b.train_time, isAsc);\n                case 'type': return this.compare(a.type, b.type, isAsc);\n                case 'accuracy_score': return this.compare(a.accuracy, b.accuracy, isAsc);\n                case 'doc_types': return this.compare(a.doctypes, b.doctypes, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                case 'min_proba': return this.compare(a.min_proba, b.min_proba, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    selectRow(row : object) {\n        this.clickedRow = row;\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (![\"png\", \"jpeg\", \"jpg\", \"jpe\", \"webp\", \"tiff\", \"tif\", \"bmp\", \"pdf\"].includes(fileExtension.toLowerCase())) {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    displaySelectedRowId() {\n        const disp = Object.values(this.clickedRow)[2];\n        if (disp) {\n            return(disp);\n        }\n        else return 0;\n    }\n\n    deleteConfirmDialog(modelId: number, model: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ARTIFICIAL-INTELLIGENCE.confirm_delete', {\"model\": model}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteModel(modelId);\n                this.historyService.addHistory('splitter', 'delete_ai_model', this.translate.instant('HISTORY-DESC.delete-ai-model', {model: model}));\n            }\n        });\n    }\n\n    deleteModel(modelId: number) {\n        if (modelId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/ai/delete/' + modelId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.retrieveModels();\n                    this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.retrieveModels(this.offset, this.pageSize);\n    }\n\n    onSubmit() {\n        this.showResponse = false;\n        const formData = new FormData();\n        const disp = Object.values(this.clickedRow)[4];\n\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n\n        this.isPredicting = true;\n        this.http.post(environment['url'] + '/ws/ai/testModel/' + disp, formData, {headers: this.authService.headers}).pipe(\n            tap((res) => this.onResponse(res)),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.error(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_not_found'));\n                this.isPredicting = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onResponse(res: any) {\n        this.prediction = res;\n        this.showResponse = true;\n        this.isPredicting = false;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button *ngIf=\"displaySelectedRowId()\" (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!this.loading\">\n            <mat-table [dataSource]=\"modelsList\" matSort (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"model_path\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.model_path' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.model_path }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"train_time\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.train_time' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.train_time }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"accuracy_score\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.accuracy' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.accuracy_score }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"documents\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.doctypes' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.documents }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"min_proba\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ARTIFICIAL-INTELLIGENCE.min_proba' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.min_proba }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button (click)=\"$event.stopPropagation(); sidenav2.open(); this.selectRow(element)\"\n                                matTooltip=\"{{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\" mat-icon-button\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-vial\"></i>\n                        </button>\n                        <button mat-icon-button\n                                (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.model_path)\"\n                                matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                                class=\"inline-block align-text-top\">\n                            <i class=\"fa-solid fa-trash text-lg\"></i>\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/settings/splitter/ai/update/{{ row.id }}\"\n                         class=\"cursor-pointer hover:shadow-md transition-colors duration-300\">\n                </mat-row>\n            </mat-table>\n            <mat-paginator showFirstLastButtons\n                           [length]=\"total\"\n                           [pageSize]=\"pageSize\"\n                           [pageIndex]=\"pageIndex\"\n                           [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                           (page)=\"onPageChange($event)\">\n            </mat-paginator>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'ARTIFICIAL-INTELLIGENCE.test_model' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n            <mat-card class=\"w-full border-solid border-green-400 border rounded-lg transition duration-300\">\n                <mat-card-title>\n                    {{ 'ARTIFICIAL-INTELLIGENCE.model_selected'| translate }}\n                    {{ displaySelectedRowId() }}\n                </mat-card-title>\n                <mat-card-actions>\n                    <ngx-file-drag-drop\n                        [displayFileSize]=\"true\"\n                        [formControl]=\"fileControl\"\n                        [activeBorderColor]=\"'#97BF3D'\"\n                        [class]=\"'max-w-3xl h-20 mt-12'\"\n                        (valueChanged)=\"checkFile($event)\"\n                        [class.disabled]=\"this.isPredicting\"\n                        [class.pointer-events-none]=\"this.isPredicting\"\n                        [emptyPlaceholder]=\"'ARTIFICIAL-INTELLIGENCE.choose_file' | translate\">\n                    </ngx-file-drag-drop>\n                    <div class=\"flex justify-center content-center\">\n                        <button mat-flat-button (click)=\"onSubmit()\"\n                                [disabled]=\"this.isPredicting || this.fileControl.value!.length === 0\"\n                                [class.hover:text-white]=\"!this.isPredicting && this.fileControl.value!.length !== 0\"\n                                [class.hover:bg-green-400]=\"!this.isPredicting && this.fileControl.value!.length !== 0\"\n                                class=\"w-48 mt-5 border-solid border-green-400 border px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.predict' | translate }}\n                        </button>\n                    </div>\n                </mat-card-actions>\n                <div *ngIf=\"showResponse === true\">\n                    <mat-divider></mat-divider>\n                    <mat-card-content class=\"pt-2\">\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.file' | translate }} : {{ prediction[0] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.prediction' | translate }} : {{ prediction[1] }}</p>\n                            <p>{{ 'ARTIFICIAL-INTELLIGENCE.probability' | translate }} : {{ prediction[2]}} %</p>\n                    </mat-card-content>\n                </div>\n                <mat-card-footer>\n                    <mat-progress-bar *ngIf=\"isPredicting\" mode=\"indeterminate\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Tristan Coulange <tristan.coulange@free.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { lastValueFrom, of } from \"rxjs\";\n\n@Component({\n  selector: 'app-update-model',\n  templateUrl: './update-ai-model.component.html',\n  styleUrls: ['./update-ai-model.component.scss']\n})\n\nexport class UpdateAiModelComponent implements OnInit {\n    loading             : boolean   = true;\n    modelId             : number    = 0;\n    doc_types           : any       = [];\n    forms               : any       = [];\n    formById            : any       = [];\n    doctypesFormControl : any       = [];\n    formsFormControl    : any       = [];\n    tableData           : any       = [];\n    chosenForm          : any       = [];\n    chosenDocs          : any       = [];\n    documents           : any       = [];\n    len                 : number    = 0;\n    displayedColumns    : string[]  = ['Documents', 'Formulaires', 'Doctypes'];\n    modelForm           : any[]     = [\n        {\n            id: 'model_path',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.model_name\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"[a-zA-Z0-9+._-éùà)(î]+\\\\.sav+\")),\n            required: true,\n        }, {\n            id: 'min_proba',\n            label: this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.min_proba\"),\n            type: 'text',\n            control: new FormControl('', Validators.pattern(\"^[1-9][0-9]?$|^100$\")),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit() {\n        this.serviceSettings.init();\n        this.modelId = this.route.snapshot.params['id'];\n        this.retrieveOCDoctypes();\n        await this.retrieveForms();\n        this.http.get(environment['url'] + '/ws/ai/getById/' + this.modelId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.documents = data.documents;\n                const selectedFormId : any = [];\n                this.len = this.documents.length;\n                for(let i = 0; i < this.len; i++) {\n                    for (const element of this.doc_types) {\n                        if (element.id === this.documents[i].doctype) {\n                            selectedFormId.push(element.formId);\n                            break;\n                        }\n                    }\n\n                    this.formById.push((this.forms.find((a: { id: number }) => a.id === selectedFormId[i])).id);\n                    this.chosenDocs[i] = this.doc_types.filter((a: { formId: number }) => a.formId === selectedFormId[i]);\n                    this.doctypesFormControl.push(new FormControl(this.documents[i].doctype, [Validators.required]));\n                    this.formsFormControl.push(new FormControl(this.formById[i], [Validators.required]));\n                    this.tableData.push({Documents: this.documents[i].folder, Doctypes: this.documents[i].doctype, Formulaires: this.formById[i], id: i});\n                }\n\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.modelForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/ai']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateModel() {\n        if (this.isValidForm(this.modelForm)) {\n            const model_name = this.getValueFromForm(this.modelForm, 'model_path');\n            const min_pred = this.getValueFromForm(this.modelForm, 'min_proba');\n            const doctypes = [];\n            for (let i = 0; i < this.len; i++) {\n                const oc_targets = this.doctypesFormControl[i].value;\n                const fold = this.documents[i].folder;\n                const formid = this.formsFormControl[i].value;\n                doctypes.push({\n                    folder: fold,\n                    doctype: oc_targets,\n                    form: formid\n                });\n            }\n            if (this.modelId !== undefined) {\n                this.http.post(environment['url'] + '/ws/ai/update/' + this.modelId, {\n                    model_name: model_name,\n                    min_pred: min_pred,\n                    doctypes: doctypes\n                }, {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('ARTIFICIAL-INTELLIGENCE.model_updated'));\n                        this.historyService.addHistory('splitter', 'update_ai_model', this.translate.instant('HISTORY-DESC.update-ai-model', {model: model_name}));\n                        this.router.navigate(['/settings/splitter/ai']).then();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveOCDoctypes() {\n        this.doc_types = [];\n        this.http.get(environment['url'] + '/ws/ai/list/document', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: any) => {\n                    newDoctype = {\n                        'id': doctype.id,\n                        'key': doctype.key,\n                        'code': doctype.code,\n                        'label': doctype.label,\n                        'type': doctype.type,\n                        'status': doctype.status,\n                        'isDefault': doctype.is_default,\n                        'formId': doctype.form_id,\n                    };\n                    this.doc_types.push(newDoctype);\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveForms() {\n        const retrieve = this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        );\n        return await lastValueFrom(retrieve).then();\n    }\n\n    onFormSelect(event: any, index: number) {\n        const val = event.value;\n        for (const element of this.forms) {\n            if (element.id === val) {\n                this.chosenForm[index] = element.id;\n                this.chosenDocs[index] = this.doc_types.filter((a: { formId: number }) => a.formId === this.chosenForm[index]);\n            }\n        }\n        this.doctypesFormControl[index].value = this.chosenDocs[index][0].id;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\">\n            <div class=\"grid grid-cols-2 gap-6 m-10 w-full\">\n                <ng-container *ngFor=\"let field of modelForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'model_path'\">\n                        <mat-label>\n                            {{ field.label | translate }}\n                        </mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'text' && field.id === 'min_proba'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.hasError('required')\">{{ 'ARTIFICIAL-INTELLIGENCE.field_required' | translate }}</mat-error>\n                        <mat-error *ngIf=\"field.control.hasError('pattern') && !field.control.hasError('required')\">\n                            {{ 'ARTIFICIAL-INTELLIGENCE.invalid_selection' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <div class=\"mx-10 my-2 grid grid-cols-5 gap-4 place-items-stretch\">\n                <div *ngFor=\"let item of this.tableData, let i=index\" class=\"text-center\">\n                    {{ item.Documents }}\n                    <div class=\"mt-4\">\n                        <mat-form-field>\n                            <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.form\" | translate }}</mat-label>\n                            <mat-select [formControl]=\"formsFormControl[item.id]\"\n                                        (selectionChange)=\"onFormSelect($event, item.id)\">\n                                <mat-option *ngFor=\"let option of forms\" [value]=\"option.id\">\n                                    {{ option.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <mat-form-field>\n                        <mat-label>{{ \"ARTIFICIAL-INTELLIGENCE.doctype\" | translate }}</mat-label>\n                        <mat-select [formControl]=\"doctypesFormControl[item.id]\">\n                            <mat-option *ngFor=\"let option of chosenDocs[i]\" [value]=\"option.id\">\n                                {{ option.label }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300 m-5\">\n                <span class=\"block\" (click)=\"updateModel()\">{{ \"ARTIFICIAL-INTELLIGENCE.update_model\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-folder-doc-type',\n  templateUrl: './create-folder-doc-type.component.html',\n  styleUrls: ['./create-folder-doc-type.component.scss']\n})\nexport class CreateFolderDocTypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading             : boolean   = false;\n    noMasterFolder      : string    = '_NO_MASTER';\n    fields              : any       = [\n        {\n            id       : 'key',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.id'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false,\n        },\n        {\n            id       : 'label',\n            type     : 'text',\n            label    : this.translate.instant('HEADER.label'),\n            control  : new FormControl(),\n            required : true,\n            disabled : false,\n        }\n    ];\n    selectedFormId      : number | undefined;\n    form!               : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx: lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx: lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    addFolder() {\n        let newFolder = this.form.getRawValue();\n        const lastIndex = this.getLastFolderIndex(newFolder.folder);\n        newFolder = {\n            'key'       : newFolder.key,\n            'code'      : newFolder.folder !== this.noMasterFolder ? newFolder.folder + '.' + lastIndex: '0.' + lastIndex,\n            'label'     : newFolder.label,\n            'is_default': false,\n            'type'      : 'folder',\n            'form_id'   : this.selectedFormId,\n        };\n        this.loading = true;\n        this.http.post(environment['url'] + '/ws/doctypes/add', newFolder, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.folder_added'));\n                this.form.reset();\n                this.form.controls['folder'].setValue(this.noMasterFolder);\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [data]=\"{canFolderBeSelected: false}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\"></app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_folder' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"form.valid && addFolder()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                        <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                        <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'DOCTYPE.add' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\n\n@Component({\n  selector: 'app-create-doc-type',\n  templateUrl: './create-doc-type.component.html',\n  styleUrls: ['./create-doc-type.component.scss']\n})\nexport class CreateDocTypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    forms           : any[]   = [];\n    fields          : any     = [\n        {\n            id      : 'key',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.id'),\n            required: true,\n        },\n        {\n            id      : 'label',\n            type    : 'text',\n            value   : '',\n            label   : this.translate.instant('HEADER.label'),\n            required: true,\n        },\n        {\n            id      : 'isDefault',\n            type    : 'slide',\n            value   : false,\n            label   : this.translate.instant('DOCTYPE.default_doctype'),\n            required: false,\n        },\n    ];\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n      private http: HttpClient,\n      public router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      public userService: UserService,\n      public translate: TranslateService,\n      private notify: NotificationService,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean; value: any}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value: field.value, disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl({value:\"\", disabled: false}, Validators.required);\n        return new FormGroup(group);\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n            if (docType.code.startsWith(codeSelected)\n                && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                const currentIdx = Number(docType.code.split('.').pop());\n                lastIndex = (currentIdx > lastIndex) ? currentIdx: lastIndex;\n            }\n        });\n        return lastIndex + 1;\n    }\n\n    addDocType() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        newDocType = {\n            'key'           : newDocType.key,\n            'code'          : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'         : newDocType.label,\n            'is_default'    : newDocType['isDefault'],\n            'type'          : 'document',\n            'form_id'       : this.selectedFormId,\n        };\n        this.http.post(environment['url'] + '/ws/doctypes/add', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_added'));\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n                }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [data]=\"{canFolderBeSelected: false}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\"></app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.add_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n            <form (ngSubmit)=\"form.valid && addDocType()\" [formGroup]=\"form\">\n                <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-2\">\n                    <mat-form-field>\n                        <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                        <mat-select id='folder' [formControlName]=\"'folder'\" [required]=\"true\">\n                            <div *ngFor=\"let folder of documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                                <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                            [value]=\"folder.code\">\n                                    {{ folder.label }}\n                                </mat-option>\n                            </div>\n                        </mat-select>\n                        <mat-error *ngIf=\"form.get('folder')!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                    </mat-form-field>\n                    <ng-container *ngFor=\"let field of fields\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [formControlName]=\"field.id\" [type]=\"field.type\"\n                                   [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                            <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                            <mat-error *ngIf=\"form.get(field.id)!.hasError('required')\">{{ 'AUTH.field_required' | translate }}</mat-error>\n                        </mat-form-field>\n                        <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                            <mat-slide-toggle [formControlName]=\"field.id\">\n                                {{ field.label | translate }}\n                            </mat-slide-toggle>\n                        </div>\n                    </ng-container>\n                    <button type=\"submit\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" mat-button>\n                        {{ 'DOCTYPE.add' | translate }}\n                    </button>\n                </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { DocumentTypeFactoryComponent } from \"../../../../splitter/document-type-factory/document-type-factory.component\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-list-doc-type',\n    templateUrl: './list-doc-type.component.html',\n    styleUrls: ['./list-doc-type.component.scss']\n})\nexport class ListDocTypeComponent implements OnInit {\n    @ViewChild(DocumentTypeFactoryComponent, {static : true}) documentTypeFactoryComponent! : DocumentTypeFactoryComponent;\n    loading         : boolean = false;\n    noMasterFolder  : string  = '_NO_MASTER';\n    fields          : any     = [\n        {\n            id        : 'key',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.id'),\n            required  : true,\n            disabled  : true,\n        },\n        {\n            id        : 'label',\n            type      : 'text',\n            label     : this.translate.instant('HEADER.label'),\n            required  : true,\n            disabled  : false,\n        },\n        {\n            id       : 'isDefault',\n            type     : 'slide',\n            label    : this.translate.instant('DOCTYPE.default_doctype'),\n            required : false,\n            disabled : false,\n        },\n    ];\n    selectedDocType : any     = {\n        label   : '',\n        key     : '',\n        code    : '',\n    };\n    selectedFormId  : number | undefined;\n    form!           : FormGroup;\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.form = this.toFormGroup();\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.fields.forEach((field: { id: string; required: boolean;disabled: boolean}) => {\n            group[field.id] = field.required ? new FormControl({value:\"\", disabled: field.disabled}, [Validators.required])\n                : new FormControl({value:\"\", disabled: field.disabled});\n        });\n        group['folder'] =  new FormControl(this.noMasterFolder, Validators.required);\n        return new FormGroup(group);\n    }\n\n    update() {\n        let newDocType = this.form.getRawValue();\n        const lastIndexInFolder = this.getLastFolderIndex(newDocType.folder);\n        if (newDocType.folder === '_NO_MASTER') {\n            newDocType.folder = \"0\";\n        }\n        newDocType = {\n            'key'       : newDocType.key,\n            'code'      : newDocType.folder + \".\" + lastIndexInFolder.toString(),\n            'label'     : newDocType.label,\n            'is_default': newDocType.isDefault,\n            'form_id'   : this.selectedFormId,\n            'status'    : 'OK',\n        };\n        this.updateDoctype(newDocType);\n    }\n\n    getOutPut($event: any) {\n        this.selectedDocType = $event;\n        const code = this.selectedDocType.code.split('.');\n        code.pop();\n        this.form.controls['folder'].setValue(code.join('.'));\n        this.form.controls['key'].setValue(this.selectedDocType.key);\n        this.form.controls['label'].setValue(this.selectedDocType.label);\n        this.form.controls['isDefault'].setValue(this.selectedDocType.isDefault);\n        this.selectedDocType.type === 'document' ? this.form.controls['isDefault'].enable(): this.form.controls['isDefault'].disable();\n    }\n\n    deleteDoctype() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('DOCTYPE.confirm_delete', {\"doctypeLabel\": this.selectedDocType.label}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                const updateValue = {\n                    'key'       : this.form.controls['key'].value,\n                    'code'      : this.form.controls['folder'].value,\n                    'label'     : this.form.controls['label'].value,\n                    'is_default': this.form.controls['isDefault'].value,\n                    'form_id'   : this.selectedFormId,\n                    'status'    : 'DEL',\n                };\n                this.updateDoctype(updateValue);\n                this.form.reset();\n                Object.keys(this.form.controls).forEach(key => {\n                    this.form.controls[key].setErrors(null);\n                });\n            }\n        });\n    }\n\n    getSelectedForm($event: any) {\n        this.selectedFormId = $event.formId;\n    }\n\n    getLastFolderIndex(codeSelected: string) {\n        let lastIndex = 0;\n        if (codeSelected !== this.noMasterFolder) {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.startsWith(codeSelected)\n                    && docType.code.split('.').length === codeSelected.split('.').length + 1) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx: lastIndex;\n                }\n            });\n        }\n        else {\n            this.documentTypeFactoryComponent.treeDataObj.doctypeData.forEach((docType:any) => {\n                if (docType.code.split('.').length === 2) {\n                    const currentIdx = Number(docType.code.split('.').pop());\n                    lastIndex = (currentIdx > lastIndex) ? currentIdx: lastIndex;\n                }\n            });\n        }\n        return lastIndex + 1;\n    }\n\n    updateDoctype(newDocType: any) {\n        this.http.post(environment['url'] + '/ws/doctypes/update', newDocType, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('DOCTYPE.doctype_edited'));\n                if (this.selectedFormId)\n                    this.documentTypeFactoryComponent.treeDataObj.loadTree(this.selectedFormId);\n                this.selectedDocType.code = newDocType.code;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [data]=\"{canFolderBeSelected: true}\"\n                                   (selectedFormOutput)=\"getSelectedForm($event)\"\n                                   (selectedDoctypeOutput)=\"getOutPut($event)\">\n        </app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.edit_doctype' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <form (ngSubmit)=\"update()\" [formGroup]=\"form\">\n            <div class=\"grid grid-cols-1 gap-x-2 gap-y-2 m-4\">\n                <mat-form-field>\n                    <mat-label>{{ 'DOCTYPE.folder' | translate }}</mat-label>\n                    <mat-select id='folder' [formControlName]=\"'folder'\">\n                        <mat-option [value]=\"noMasterFolder\">\n                            {{ 'DOCTYPE.no_master' | translate }}\n                        </mat-option>\n                        <div *ngFor=\"let folder of this.documentTypeFactoryComponent.treeDataObj.doctypeData\">\n                            <mat-option *ngIf=\"folder.type === 'folder' && folder.formId === selectedFormId\"\n                                        [disabled]=\"!this.selectedDocType.key || folder.code.startsWith(this.selectedDocType.code + '.')\n                                                        || folder.key === this.selectedDocType.key\"\n                                        [value]=\"folder.code\">\n                                {{ folder.label }}\n                            </mat-option>\n                        </div>\n                    </mat-select>\n                </mat-form-field>\n                <ng-container *ngFor=\"let field of this.fields\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControlName]=\"field.id\" [type]=\"field.type\" [readonly]=\"!this.selectedDocType.key\"\n                               [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                    </mat-form-field>\n                    <div class=\"text-center p-4\" *ngIf=\"field.type === 'slide'\">\n                        <mat-slide-toggle [formControlName]=\"field.id\">\n                            {{ field.label | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n                <button [disabled]=\"!this.selectedDocType.key\" class=\"m-auto w-7/12 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\" type=\"submit\" mat-button>\n                    {{ 'GLOBAL.edit' | translate }}\n                </button>\n                <button [disabled]=\"!this.selectedDocType.key\" (click)=\"deleteDoctype()\" class=\"m-auto w-7/12 border-solid border-red-400 border bg-red-400 text-white\" type='button' mat-button>\n                    {{ 'GLOBAL.delete' | translate }}\n                </button>\n            </div>\n        </form>\n    </mat-sidenav>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\ns\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.scss'],\n})\nexport class SplitterFormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    outputs                 : any[]     = [];\n    metadataMethods         : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'default_form': {\n            'control': new FormControl(),\n        },\n    };\n    formSettings            : any       = {\n        'metadata_method': {\n            'control': new FormControl(),\n        },\n        'export_zip_file': {\n            'control': new FormControl(),\n        },\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    formId                  : any;\n    creationMode            : boolean   = true;\n    labelType               : any []    = [\n        marker('FORMATS.text'),\n        marker('TYPES.text'),\n        marker('TYPES.textarea'),\n        marker('TYPES.date'),\n        marker('TYPES.select'),\n        marker('VERIFIER.field_settings'),\n        marker('FORMS.delete_field'),\n        marker('FORMS.update_label')\n    ];\n    fieldCategories         : any []    = [\n        {\n            'id'    : 'batch_metadata',\n            'label' : marker('SPLITTER.batch_metadata')\n        },\n        {\n            'id'    : 'document_metadata',\n            'label' : marker('SPLITTER.document_metadata')\n        },\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id'    : 'custom_fields',\n            'label' : marker('FORMS.custom_fields'),\n            'values': []\n        },\n    ];\n    fields                  : any       = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n    classList               : any []    = [\n        {\n            'id'    : 'w-full',\n            'label' : '1'\n        },\n        {\n            'id'    : 'w-1/2',\n            'label' : '1/2'\n        },\n        {\n            'id'    : 'w-30',\n            'label' : '1/3'\n        },\n        {\n            'id'    : 'w-1/3',\n            'label' : '1/33'\n        },\n        {\n            'id'    : 'w-1/4',\n            'label' : '1/4'\n        },\n        {\n            'id'    : 'w-1/5',\n            'label' : '1/5'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id'    : 'simple',\n            'label' : marker('DISPLAY.simple'),\n            'icon'  : 'fa-solid fa-file-alt'\n        },\n        {\n            'id'    : 'multi',\n            'label' : marker('DISPLAY.multi'),\n            'icon'  : 'fa-solid fa-layer-group'\n        },\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('MANDATORY.required'),\n            'icon'  : 'fa-solid fa-star'\n        },\n        {\n            'id'    : false,\n            'label' : marker('MANDATORY.not_required'),\n            'icon'  : 'far fa-star'\n        },\n    ];\n    disabledList            : any []    = [\n        {\n            'id'    : true,\n            'label' : marker('DISABLED.disabled'),\n            'icon'  : 'fa-solid fa-ban'\n        },\n        {\n            'id'    : false,\n            'label' : marker('DISABLED.not_disabled'),\n            'icon'  : ''\n        },\n    ];\n    fieldMetadata           : any []    = [\n        {\n            'id'            : 'searchMask',\n            'placeholder'   : marker('FIELD_METADATA.search_mask'),\n            'control'       : new FormControl(),\n        },\n        {\n            'id'            : 'resultMask',\n            'placeholder'   : marker('FIELD_METADATA.result_mask'),\n            'control'       : new FormControl(),\n        },\n        {\n            'id'            : 'validationMask',\n            'placeholder'   : marker('FIELD_METADATA.validation_mask'),\n            'control'       : new FormControl(),\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputs = data.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) this.form[field].control.setValue(data[field]);\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) this.outputForm[0].control.setValue(data.outputs[0]);\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) this.addOutput();\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }),catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/splitter/metadataMethods', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadataMethods.forEach((option: any) => {\n                    this.metadataMethods.push({\n                        id      : option.id,\n                        label   : option.label,\n                    });\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if (data.customFields[field].module === 'splitter' && data.customFields[field].enabled) {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id          : 'custom_' + data.customFields[field].id,\n                                                metadata_key: data.customFields[field].metadata_key,\n                                                label_short : data.customFields[field].label_short,\n                                                settings    : data.customFields[field].settings,\n                                                required    : data.customFields[field].required,\n                                                label       : data.customFields[field].label,\n                                                type        : data.customFields[field].type,\n                                                format      : data.customFields[field].type,\n                                                unit        : 'custom',\n                                                class       : \"w-1/3\",\n                                                class_label : \"1/33\",\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/getFields/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.form_fields.fields) {\n                        if (data.form_fields.fields.batch_metadata)\n                            this.fields.batch_metadata = data.form_fields.fields.batch_metadata;\n                        if (data.form_fields.fields.document_metadata)\n                            this.fields.document_metadata = data.form_fields.fields.document_metadata;\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(event: any, previousIndex: any, category:any, unit: any) {\n        if (unit === 'addresses')\n            unit = 'supplier';\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        const outputs: any[]    = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        },\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n        }\n    }\n\n    createForm() {\n        const label             = this.form.label.control.value;\n        const isDefault         = this.form.default_form.control.value;\n        const metadataMethod    = this.formSettings.metadata_method.control.value;\n        const exportZipFile     = this.formSettings.export_zip_file.control.value;\n        if (label) {\n            this.http.post(environment['url'] + '/ws/forms/add',\n                {\n                    'args': {\n                        'label'         : label,\n                        'default_form'  : isDefault,\n                        'module'        : \"splitter\",\n                        'settings'      : {\n                            'metadata_method' : metadataMethod,\n                            'export_zip_file' : exportZipFile\n                        },\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/splitter/forms').then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-auto\" style=\"height: calc(100% - 70px)\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field>\n                    <mat-label>{{ \"HEADER.choose_metadata_method\" | translate }}</mat-label>\n                    <mat-select [formControl]=\"this.formSettings['metadata_method'].control\">\n                        <mat-option *ngFor=\"let option of this.metadataMethods\" value=\"{{ option.id }}\">\n                            {{ option.label }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-3.5 right-4 cursor-pointer text-gray-900 z-50\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-3.5 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.export_zip_file\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.formSettings['export_zip_file'].control\">\n                    <mat-hint class=\"text-gray-600\">{{ \"FORMS.export_zip_file_hint\" | translate }}</mat-hint>\n                </mat-form-field>\n            </div>\n            <ng-container *ngFor=\"let category of fieldCategories; let i = index\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem;\" [style]=\"'width:calc(3% + ' + this.translate.instant(category['label']).length + '%)'\">\n                    {{ category['label'] | translate }}\n                </div>\n                <div class=\"border-green-400 border rounded-lg mx-6 m-7\">\n                    <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" id=\"{{ category['id'] }}\"\n                         class=\"flex flex-wrap cursor-pointer w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.fields[category['id']]; let index = index\" class=\"flex items-center px-3 overflow-hidden\" [class]=\"field.class\"\n                             ngSortGridGroup=\"{{ category['id'] }}\" ngSortgridItem [ngSortGridItems]=\"fields[category['id']]\" (sorted)=\"storeNewOrder($event, category['id'])\">\n                            <mat-form-field class=\"right-0 w-full form-builder\">\n                                <i cdkDrag class=\"fa-solid fa-trash z-10\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\">\n                                    <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                    <strong>{{ field.label | translate }}</strong>\n                                    <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                    <span *ngIf=\"field.type === 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                    <span *ngIf=\"field.type === 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                </span>\n                                <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                <div class=\"absolute top-0 -right-4\">\n                                    <button mat-button [matMenuTriggerFor]=\"menu\"\n                                            [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\"\n                                            matTooltipPosition=\"above\">\n                                        <mat-icon class=\"field_settings text-md\">more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                            {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">{{ field.class_label }}</small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type === 'select'\">\n                                            {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.display_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                            {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"disabled\">\n                                            {{ \"FORMS.disable\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"autoCompleteMasksMenu\">\n                                            {{ \"FORMS.input_metadata\" | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #size=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _class of classList\"\n                                                (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                            <span [class.text-green-400]=\"_class.id === field.class\">\n                                                {{ _class.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_class.id === field.class\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #display=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _display of displayList\"\n                                                (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"_display.id === field.display\">\n                                                {{ _display.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"_display.id === field.display\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #required=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let required of mandatoryList\"\n                                                (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"required.id === field.required\">\n                                                {{ required.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"required.id === field.required\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #disabled=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let disabled of disabledList\"\n                                                (click)=\"changeRequired(field.id, disabled.id, disabled.icon, category['id'])\">\n                                            <span [class.text-green-400]=\"disabled.id === field.required\">\n                                                {{ disabled.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"disabled.id === field.required\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #autoCompleteMasksMenu=\"matMenu\">\n                                        <div *ngFor=\"let fieldMetadataItem of fieldMetadata\">\n                                            <mat-form-field class=\"w-64 mx-2 text-base\" (click)=\"$event.stopPropagation()\">\n                                                <mat-label>{{ fieldMetadataItem.placeholder | translate }}</mat-label>\n                                                <input matInput [(ngModel)]=\"field[fieldMetadataItem['id']]\" type=\"text\">\n                                            </mat-form-field>\n                                        </div>\n                                    </mat-menu>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <div class=\"flex justify-center items-center\">\n                <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                transition duration-300\">\n                    <span class=\"block\" (click)=\"createForm()\" *ngIf=\"creationMode\">{{ \"FORMS.create\" | translate }}</span>\n                    <span class=\"block\" (click)=\"updateForm()\" *ngIf=\"!creationMode\">{{ \"FORMS.modify\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group style=\"height: calc(100% - 70px)\" *ngIf=\"!this.loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\">\n                                <div>\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-checkbox formControlName=\"test\">{{ 'TYPES.' + field.type | translate }}</mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\nexport class SplitterFormListComponent implements OnInit {\n    loading: boolean            = true;\n    columnsToDisplay: string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/splitter/forms') || lastUrl === '/') {\n            if (this.localStorageService.get('formsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('formsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('formsPageIndex');\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/list?module=splitter&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) this.total = data.forms[0].total;\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n\n    deleteConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteForm(formId);\n                this.historyService.addHistory('splitter', 'delete_form', this.translate.instant('HISTORY-DESC.delete-form', {form: form}));\n            }\n        });\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n                this.historyService.addHistory('splitter', 'duplicate_form', this.translate.instant('HISTORY-DESC.duplicate-form', {form: form}));\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n                this.historyService.addHistory('splitter', 'disable_form', this.translate.instant('HISTORY-DESC.disable-form', {form: form}));\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n                this.historyService.addHistory('splitter', 'enable_form', this.translate.instant('HISTORY-DESC.enable-form', {form: form}));\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default_form\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/splitter/forms/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"this.pageSize\"\n                       [pageIndex]=\"this.pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-splitter-create-input',\n    templateUrl: './create-input.component.html',\n    styleUrls: ['./create-input.component.scss']\n})\nexport class SplitterCreateInputComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    inputId         : any;\n    input           : any;\n    inputForm       : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"default_input\",\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'splitter_method_id',\n            label: this.translate.instant('INPUT.splitter_method'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [],\n        },\n        {\n            id: 'remove_blank_pages',\n            label: this.translate.instant('INPUT.remove_blank_pages'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/splitter', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'default_form_id') {\n                        element.values = forms.forms;\n                        if (forms.forms.length === 1) {\n                            element.control.setValue(forms.forms[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.inputForm.forEach(element => {\n            if (element.id === 'splitter_method_id') {\n                this.http.get(environment['url'] + '/ws/splitter/splitMethods', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        data.splitMethods.forEach((option: any) => {\n                            element.values.push({\n                                id      : option.id,\n                                label   : option.label,\n                            });\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input: any = {\n                'module': 'splitter'\n            };\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n            this.createInputAndScriptAndIncron();\n        }\n    }\n\n    createInputAndScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'splitter'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.post(environment['url'] + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/inputs/create', {'args': input}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('splitter', 'create_input', this.translate.instant('HISTORY-DESC.create-input', {input: input['input_label']}));\n                            this.router.navigate(['/settings/splitter/inputs']).then();\n                            this.notify.success(this.translate.instant('INPUT.created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate }}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate }}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-slide-toggle *ngIf=\"field.type === 'boolean'\" [formControl]=\"field.control\" class=\"relative top-4 mb-10 col-span-2\">\n                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\"  mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.create\" | translate }}</span>\n            </button>\n        </div>\n        <div class=\"text-gray-400 text-sm mt-4 flex justify-center items-center\">\n            <span class=\"w-1/3\" [innerHTML]=\"'INPUT.create_hint' | translate\"></span>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n  selector: 'app-splitter-input-list',\n  templateUrl: './input-list.component.html',\n  styleUrls: ['./input-list.component.scss']\n})\nexport class SplitterInputListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'input_id', 'input_label', 'input_folder', 'actions'];\n    loading         : boolean       = true;\n    inputs          : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('inputs/') || lastUrl === '/') {\n            if (this.localStorageService.get('inputsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('inputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('inputsPageIndex');\n        this.loadInputs();\n    }\n\n    loadInputs() {\n        this.http.get(environment['url'] + '/ws/inputs/list?module=splitter&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.inputs[0]) this.total = data.inputs[0].total;\n                this.inputs = data.inputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('inputsPageIndex', event.pageIndex);\n        this.loadInputs();\n    }\n\n    deleteConfirmDialog(inputId: number, input: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('INPUT.confirm_delete', {\"input\": input}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteInput(inputId);\n                this.historyService.addHistory('splitter', 'delete_input', this.translate.instant('HISTORY-DESC.delete-input', {input: input}));\n            }\n        });\n    }\n\n    deleteInput(inputId: number) {\n        if (inputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/inputs/delete/' + inputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadInputs();\n                    this.notify.success(this.translate.instant('INPUT.input_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(inputId: number, input: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('INPUT.confirm_duplicate', {\"input\": input}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateInput(inputId);\n                this.historyService.addHistory('splitter', 'duplicate_input', this.translate.instant('HISTORY-DESC.duplicate-input', {input: input}));\n            }\n        });\n    }\n\n    duplicateInput(inputId: number) {\n        if (inputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/inputs/duplicate/' + inputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadInputs();\n                    this.notify.success(this.translate.instant('INPUT.input_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.inputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.inputs = data;\n            return;\n        }\n\n        this.inputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"inputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_id }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_label\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_label }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_folder\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'INPUT.input_folder_header' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_folder }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button\n                        (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.input_label)\"\n                        matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                        class=\"inline-block align-text-top\">\n                    <i class=\"fa-solid fa-trash text-lg\"></i>\n                </button>\n                <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.input_label)\"\n                        matTooltip=\"{{ 'INPUT.duplicate' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"fa-solid fa-clone text-lg\"></i>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/settings/splitter/inputs/update/{{ row.id }}\"\n                 class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n    </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Component({\n    selector: 'app-splitter-update-input',\n    templateUrl: './update-input.component.html',\n    styleUrls: ['./update-input.component.scss']\n})\nexport class SplitterUpdateInputComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    inputId         : any;\n    input           : any;\n    inputForm       : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            disabled: true,\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'splitter_method_id',\n            label: this.translate.instant('INPUT.splitter_method'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: [],\n        },\n        {\n            id: 'remove_blank_pages',\n            label: this.translate.instant('INPUT.remove_blank_pages'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.inputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/inputs/getById/' + this.inputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.input = data;\n                for (const field in this.input) {\n                    this.inputForm.forEach(element => {\n                        if (element.id === field) {\n                            element.control.setValue(data[field]);\n                            if (element.id === 'default_form_id') {\n                                this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n                                    tap((forms: any) => {\n                                        element.values = forms.forms;\n                                    }),\n                                    finalize(() => this.loading = false),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            }\n                        } else if (element.id === 'customer_id') {\n                            this.http.get(environment['url'] + '/ws/accounts/customers/list/splitter', {headers: this.authService.headers}).pipe(\n                                tap((customers: any) => {\n                                    element.values = customers.customers;\n                                }),\n                                finalize(() => this.loading = false),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n        this.inputForm.forEach(element => {\n            if (element.id === 'splitter_method_id') {\n                this.http.get(environment['url'] + '/ws/splitter/splitMethods', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        data.splitMethods.forEach((option: any) => {\n                            element.values.push({\n                                id      : option.id,\n                                label   : option.label,\n                            });\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'splitter'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/inputs/update/' + this.inputId, {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('INPUT.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/splitter/inputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    createScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'splitter'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.post(environment['url'] + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('INPUT.watcher_and_script_updated'));\n                    this.onSubmit();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate }}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate }}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-slide-toggle *ngIf=\"field.type === 'boolean'\" [formControl]=\"field.control\" class=\"relative top-4 mb-10 col-span-2\">\n                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\"  mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.update\" | translate }}</span>\n            </button>\n            <button (click)=\"createScriptAndIncron()\" mat-button class=\"p-6 ml-4 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.update_script_and_watcher\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-create-output',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class SplitterCreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false,\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false,\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/getOutputsTypes?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data.outputs_types;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/create',\n                {\n                    'args': {\n                        'output_type_id': outputTypeId,\n                        'output_label'  : outputLabel,\n                        'compress_type' : compressType,\n                        'module'        : 'splitter',\n                        'ocrise'        : ocrise,\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.router.navigate(['/settings/splitter/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/splitter/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of outputForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                {{ option.label | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span class=\"block\" (click)=\"createOutput()\">{{ \"OUTPUT.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr>\n@dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { Sort } from \"@angular/material/sort\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n  selector: 'app-splitter-output-list',\n  templateUrl: './output-list.component.html',\n  styleUrls: ['./output-list.component.scss']\n})\nexport class SplitterOutputListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('outputs/') || lastUrl === '/') {\n            if (this.localStorageService.get('outputsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('outputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('outputsPageIndex');\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/list?module=splitter&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) this.total = data.outputs[0].total;\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n                this.historyService.addHistory('splitter', 'delete_output', this.translate.instant('HISTORY-DESC.delete-output', {output: output}));\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n                this.historyService.addHistory('splitter', 'duplicate_output', this.translate.instant('HISTORY-DESC.duplicate-output', {output: output}));\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_type_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/splitter/outputs/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr>\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-splitter-update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class SplitterUpdateOutputComponent implements OnInit {\n    headers               : HttpHeaders   = this.authService.headers;\n    loading               : boolean       = true;\n    loadingCustomFields   : boolean       = true;\n    connection            : boolean       = false;\n    outputsTypes          : any[]         = [];\n    outputsTypesForm      : any[]         = [];\n    output                : any;\n    outputId              : any;\n    selectedOutputType    : any;\n    originalOutputType    : any;\n    toHighlight           : string        = '';\n    outputForm            : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false,\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false,\n        }\n    ];\n    availableFields       : any           = [\n        {\n            \"labelShort\"    : 'HEADER.id',\n            'label'         : marker('HEADER.label')\n        },\n        {\n            \"labelShort\"    : 'date',\n            'label'         : marker('TYPES.date')\n        },\n        {\n            \"labelShort\"    : 'id',\n            'label'         : marker('SPLITTER.batch_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_identifier',\n            'label'         : marker('SPLITTER.document_identifier')\n        },\n        {\n            \"labelShort\"    : 'document_index',\n            'label'         : marker('SPLITTER.document_index')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_lastname')\n        },\n        {\n            \"labelShort\"    : 'validate_by_firstname',\n            'label'         : marker('OUTPUT.validate_by_firstname')\n        },\n        {\n            \"labelShort\"    : 'doctype',\n            'label'         : marker('SETTINGS.document_type')\n        },\n        {\n            \"labelShort\"    : 'random',\n            'label'         : marker('OUTPUT.random')\n        },\n        {\n            \"labelShort\"    : 'filename',\n            'label'         : marker('OUTPUT.filename')\n        },\n        {\n            \"labelShort\"    : 'documents_count',\n            'label'         : marker('OUTPUT.documents_count')\n        },\n        {\n            \"labelShort\"    : 'fileIndex',\n            'label'         : marker('OUTPUT.file_index')\n        },\n        {\n            \"labelShort\"    : 'format',\n            'label'         : marker('OUTPUT.format')\n        },\n        {\n            \"labelShort\"    : 'zip_filename',\n            'label'         : marker('OUTPUT.zip_filename')\n        },\n    ];\n    testConnectionMapping : any           = {\n        'export_openads'   : \"testOpenadsConnection()\",\n        'export_mem' : \"testMEMConnection()\",\n        'export_cmis'   : \"testCmisConnection()\"\n    };\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/getOutputsTypes?module=splitter', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.outputsTypes = data.outputs_types;\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'parameters' : [],\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice,\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                this.output.data.options[category].forEach((outputElement: any) => {\n                                    if (element.id === outputElement.id) {\n                                        if (outputElement.value) {\n                                            if (outputElement.webservice) element.values = [outputElement.value];\n                                            element.control.setValue(outputElement.value);\n                                        }\n                                    }\n                                });\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => {this.loading = false;}),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/splitter/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        /**\n         * Get custom fields\n         **/\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newField;\n                data.customFields.forEach((field: {\n                        id: any\n                        label_short: string\n                        module: string\n                        label: string\n                        type: string\n                        enabled: boolean\n                    }) => {\n                        newField = {\n                            'id': field.id,\n                            'labelShort': field.label_short,\n                            'label': field.label,\n                            'enabled': field.enabled,\n                        };\n                        if (field.enabled) {\n                            this.availableFields.push(newField);\n                        }\n                    }\n                );\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any) {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType]['parameters']) {\n            const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** CMIS Webservices call ****/\n    testCmisConnection() {\n        const args = this.getCmisConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/cmis/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.cmis_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.cmis_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCmisConnectionInfo() {\n        return {\n            'cmis_ws': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'cmis_ws'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n            'folder': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'folder'),\n        };\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.mem_connection_ko') + ' : ' + status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getOpenadsConnectionInfo() {\n        return {\n            'openads_api': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'openads_api'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n        };\n    }\n\n    /**** OpenADS Webservices call ****/\n    testOpenadsConnection() {\n        const args = this.getOpenadsConnectionInfo();\n        this.http.post(environment['url'] + '/ws/splitter/openads/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.openads_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error(this.translate.instant('OUTPUT.openads_connection_ko') + ' : ' + data.message);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.users) {\n                    const data = _return.users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt].serialId,\n                            'value': data[cpt].entity_label,\n                            'extra': data[cpt].entity_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt].type_id,\n                            'value': data[cpt].description,\n                            'extra': data[cpt].type_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.priorities) {\n                    const data = _return.priorities;\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.statuses) {\n                    const data = _return.statuses;\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label_status,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.indexingModels) {\n                    const data = _return.indexingModels;\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                if (field.isJson) {\n                    try {\n                        JSON.parse(field.control.value);\n                    } catch (error) {\n                        field.control.setErrors({'json_error': true});\n                        this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                        return;\n                    }\n                }\n\n                _array['data']['options'][category].push({\n                    id: field.id,\n                    type: field.type,\n                    webservice: field.webservice,\n                    value: field.value === undefined ? field.control.value : field.value,\n                });\n            }\n        }\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/update/' + this.outputId, {'args': _array},{headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/splitter/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any) {\n        this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                    <span class=\"block\" (click)=\"updateOutput()\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"selectedOutputType && outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_auth_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number' || field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\"\n                                    mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                <span (click)=\"testConnection()\">{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                        </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field.webservice\" class=\"col-span-4\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field.control\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field.required\"  rows=\"16\" spellcheck=\"false\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field.required\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.labelShort | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { OnInit, Component } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsService } from \"../../../../services/settings.service\";\n\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from  \"../../../env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-separator',\n    templateUrl: './separator.component.html',\n    styleUrls: ['./separator.component.scss']\n})\nexport class SeparatorComponent implements OnInit {\n    private selectedDocType: any;\n    public separator: any      = {\n        'fileUrl': '',\n        'thumbnailUrl': ''\n    };\n    loading           : boolean = false;\n    loadingSeparator  : boolean = false;\n    selectedSeparator : string  = \"bundleSeparator\";\n    separators        : any[]   = [\n        {\n            id          : 'bundleSeparator',\n            name        : this.translate.instant(\"SPLITTER.bundle_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'documentSeparator',\n            name        : this.translate.instant(\"SPLITTER.document_separator\"),\n            disabled    : false\n        },\n        {\n            id          : 'docTypeSeparator',\n            name        : this.translate.instant(\"SPLITTER.doc_type_separator\"),\n            disabled    : true\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService,\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.generateSeparator( {\n            'type'  : 'bundleSeparator',\n            'key'   : '',\n            'label' : ''\n        });\n    }\n\n    onChangeType() {\n        let args;\n        if (this.selectedSeparator === \"bundleSeparator\") {\n            args = {\n                'type'  : 'bundleSeparator',\n                'key'   : '',\n                'label' : ''\n            };\n        }\n        else if (this.selectedSeparator === \"documentSeparator\") {\n            args = {\n                'type'  : 'documentSeparator',\n                'key'   : '',\n                'label' : ''\n            };\n        }\n        else {\n            args = {\n                'type'  : 'docTypeSeparator',\n                'key'   : this.selectedDocType ? this.selectedDocType.key : '',\n                'label' : this.selectedDocType ? this.selectedDocType.label : ''\n            };\n        }\n        this.generateSeparator(args);\n    }\n\n    getOutPut($event: any) {\n        this.selectedSeparator  = 'docTypeSeparator';\n        this.selectedDocType    = $event;\n        const args = {\n            'type': 'docTypeSeparator',\n            'key': this.selectedDocType.key,\n            'label': this.selectedDocType.label\n        };\n        this.generateSeparator(args);\n    }\n\n    generateSeparator(args: any) {\n        this.loadingSeparator = true;\n        this.http.post(environment['url'] + '/ws/doctypes/generateSeparator',  args,{headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.separator.fileUrl = \"data:application/pdf;base64,\" + data.encoded_file;\n                this.separator.thumbnailUrl = \"data:image/jpeg;base64,\" + data.encoded_thumbnail;\n                this.loadingSeparator = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loadingSeparator = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    downloadSeparator() {\n        const fileName = this.selectedSeparator + (this.selectedDocType ? '_' + this.selectedDocType.key: '');\n        this.downloadPdf(this.separator.fileUrl, fileName);\n    }\n\n    downloadPdf(base64String: any, fileName:any) {\n        const link = document.createElement(\"a\");\n        link.href = base64String;\n        link.download = `${fileName}.pdf`;\n        link.click();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div class=\"settings_header z-50\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\"\n                       class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-50\">\n        <app-document-type-factory [data]=\"{canFolderBeSelected: false}\" (selectedDoctypeOutput)=\"getOutPut($event)\"></app-document-type-factory>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"overflow-hidden w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ 'DOCTYPE.download_separator' | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div class=\"w-full grid grid-cols-2 m-2 mt-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>{{ 'DOCTYPE.separator_choice '| translate }}</mat-label>\n                <mat-select [disabled]=\"loadingSeparator\" [(ngModel)]=\"selectedSeparator\" (ngModelChange)=\"onChangeType()\">\n                    <mat-option *ngFor=\"let separator of separators\" [id]=\"separator.id\" [value]=\"separator.id \" [disabled]=\"separator.disabled\">\n                        {{ separator.name| translate }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"text-right\">\n                <button mat-button [disabled]=\"loadingSeparator\" (click)=\"downloadSeparator()\" class=\"w-10 h-12\">\n                    <i class=\"fa-solid fa-file-arrow-down fa-2x\"></i>\n                </button>\n            </div>\n        </div>\n        <div *ngIf=\"loadingSeparator\" class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 230px)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-qrcode fa-4x fa-beat-fade w-full mb-1\"></i>\n                <span class=\"w-full\">\n                    {{ 'DOCTYPE.generating_separator' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!loadingSeparator\" class=\"text-center text-gray-400 object-contain\">\n            <img [src]=\"separator.thumbnailUrl\" alt=\"Separator thumbnail\">\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>\n\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { HistoryService } from \"../../../../services/history.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { environment } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-display-list',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss'],\n})\nexport class VerifierDisplayComponent implements OnInit {\n    loading             : boolean   = true;\n    loadingCustomFields : boolean   = true;\n    formLoaded          : boolean   = false;\n    forms               : any       = [];\n    availableFieldsTmp  : any       = [];\n    currentForm         : any       = {};\n    formInput           : any       = {\n        control: new FormControl(),\n        values:[]\n    };\n    availableFields     : any       = [\n        {\n            \"id\": 'invoice_id',\n            'label': marker('VERIFIER.document_id')\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date',\n            'label': marker('FACTURATION.document_date')\n        },\n        {\n            \"id\": 'date',\n            'label': marker('VERIFIER.register_date')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        },\n        {\n            \"id\": 'form_label',\n            'label': marker('VERIFIER.form')\n        },\n        {\n            \"id\": 'original_filename',\n            'label': marker('VERIFIER.original_file')\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: any) => {\n                    this.availableFields.push({\n                        'id': 'custom_' + field.id,\n                        'label': field.label\n                    });\n                });\n                this.availableFields.forEach((element: any) => {\n                    this.availableFieldsTmp.push(element);\n                });\n            }),\n            finalize(() => this.loadingCustomFields = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                this.formInput.values = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadDisplay(event: any) {\n        this.loading = true;\n        this.availableFieldsTmp = [];\n        this.availableFields.forEach((element: any) => {\n            this.availableFieldsTmp.push(element);\n        });\n        const form_id = event.value;\n        this.forms.forEach((element: any) => {\n            if (element.id === form_id) {\n                this.formLoaded = true;\n                this.currentForm = element;\n                if (this.currentForm.settings.display) {\n                   this.currentForm.settings.display.subtitles.forEach((subtitle: any) => {\n                        this.availableFieldsTmp.forEach((item: any, index: number, object: any) => {\n                            if (subtitle.id === item.id) {\n                                object.splice(index, 1);\n                            }\n                        });\n                    });\n                }\n            }\n        });\n        this.loading = false;\n    }\n\n    updateLabel(event: any, subtitle: any) {\n        subtitle['label'] = event.target.value;\n        subtitle['updateMode'] = false;\n    }\n\n    updateDisplay() {\n        this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            delete element['updateMode'];\n        });\n\n        this.http.put(environment['url'] + '/ws/forms/updateDisplay/' + this.currentForm.id, this.currentForm.settings.display,\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.historyService.addHistory('verifier', 'update_form_display', this.translate.instant('HISTORY-DESC.update_form_display', {'form': this.currentForm.label}));\n                this.notify.success(this.translate.instant('FORMS.display_updated_success'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLine(id: any, cpt: number) {\n       this.currentForm.settings.display.subtitles.forEach((element: any) => {\n            if (id === element.id) {\n               this.currentForm.settings.display.subtitles.splice(cpt, 1);\n                this.loadDisplay({value: this.currentForm.id});\n            }\n        });\n    }\n\n    drop_card(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex,\n            );\n        }\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex,\n            );\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\" >\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <app-hint [message]=\"'FORMS.display_hint' | translate\"></app-hint>\n            <div class=\"w-1/3 m-auto mt-4\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n                    <mat-select [formControl]=\"this.formInput.control\" (selectionChange)=\"loadDisplay($event)\">\n                        <mat-option *ngFor=\"let option of this.formInput.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div *ngIf=\"this.formLoaded\" class=\"m-auto mt-8 w-1/2 xl:w-1/3\">\n                <mat-card class=\"p-0 mb-0\">\n                    <label class=\"p-5 absolute\">\n                        <input [disabled]=\"true\" class=\"w-5 h-5 checkBox_list\" type=\"checkbox\">\n                    </label>\n                    <div class=\"absolute right-0 pt-4 pr-5\">\n                        <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                    </div>\n                    <div class=\"h-64 bg-gradient-to-br from-green-400 to-gray-600\"></div>\n                    <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-4 pr-4\">\n                        <mat-card-title class=\"break-all\">\n                        <span class=\"leading-5 text-lg\">\n                            {{ 'ACCOUNTS.supplier_name' | translate }}\n                        </span>\n                            <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\">\n                            0\n                            <i class=\"far fa-file-alt ml-1\"></i>\n                        </span>\n                        </mat-card-title>\n                        <mat-card-subtitle class=\"subtitles mt-2 mb-2\">\n                            <div cdkDropList (cdkDropListDropped)=\"drop_card($event)\"\n                                 [cdkDropListData]=\"this.currentForm.settings.display['subtitles']\">\n                                <div cdkDrag class=\"cursor-move mt-1 flex align-center items-center\"\n                                     *ngFor=\"let subtitle of this.currentForm.settings.display['subtitles']; let cpt = index\">\n                                    <strong *ngIf=\"!subtitle['updateMode']\">{{ subtitle['label'] | translate }}</strong>\n                                    <mat-form-field appearance=\"outline\" *ngIf=\"subtitle['updateMode']\">\n                                        <input matInput [value]=\"subtitle['label'] | translate\" class=\"relative -top-2.5\"\n                                               (focusout)=\"updateLabel($event, subtitle)\">\n                                    </mat-form-field>\n                                    &nbsp;:\n                                    <span class=\"ml-2 w-4/12 h-3 bg-gradient-to-br from-green-400 to-gray-600\"></span>\n                                    <i class=\"fa-solid fa-edit text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                       (click)=\"subtitle['updateMode'] = true\" *ngIf=\"!subtitle['updateMode']\"></i>\n                                    <i class=\"fa-solid fa-check text-lg cursor-pointer absolute right-6 mt-0.5 mr-2\"\n                                       *ngIf=\"subtitle['updateMode']\"></i>\n                                    <i class=\"fa-solid fa-trash text-red-500 cursor-pointer absolute right-2 mt-1\"\n                                       (click)=\"removeLine(subtitle['id'], cpt)\"></i>\n                                </div>\n                            </div>\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                </mat-card>\n            </div>\n            <div class=\"flex justify-center items-center mt-8\">\n                <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900\n                transition duration-300\" [disabled]=\"!this.formLoaded\">\n                    <span class=\"block\" (click)=\"this.updateDisplay()\">{{ \"FORMS.modify_display\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\"\n             cdkDropList [cdkDropListData]=\"this.availableFieldsTmp\" (cdkDropListDropped)=\"drop($event)\"\n             [cdkDropListDisabled]=\"!this.formLoaded\">\n            <div *ngFor=\"let field of this.availableFieldsTmp; let cpt = index\"\n                 class=\"my-8 ml-2 text-base\" cdkDrag>\n                <span class=\"cursor-move\">\n                    {{ field.label | translate }}\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.scss'],\n})\nexport class FormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingCustomFields     : boolean   = true;\n    updateFormLoading       : boolean   = false;\n    creationMode            : boolean   = true;\n    openAvailableField      : boolean   = false;\n    modalOpen               : boolean   = false;\n    selectedFields          : any       = [];\n    formId                  : any;\n    formSettingId           : any;\n    outputs                 : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'default_form': {\n            'control': new FormControl(),\n        }\n    };\n    formSettings            : any       = {\n        'allow_automatic_validation': {\n            'control': new FormControl(),\n        },\n        'supplier_verif': {\n            'control': new FormControl(),\n        },\n        'automatic_validation_data': {\n            'control': new FormControl()\n        },\n        'delete_documents_after_outputs': {\n            'control': new FormControl()\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    fields                  : any       = {\n        'supplier': [],\n        'facturation': [],\n        'other': []\n    };\n    fieldCategories         : any []    = [\n        {\n            'id': 'supplier',\n            'label': marker('FORMS.supplier')\n        },\n        {\n            'id': 'facturation',\n            'label': marker('FACTURATION.facturation')\n        },\n        {\n            'id': 'other',\n            'label': marker('FORMS.other')\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'accounts_fields',\n            'label': marker('ACCOUNTS.supplier'),\n            'values': [\n                {\n                    id: 'name',\n                    label: marker('ACCOUNTS.supplier_name'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'white',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'siret',\n                    label: marker('ACCOUNTS.siret'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'siren',\n                    label: marker('ACCOUNTS.siren'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'lime',\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'vat_number',\n                    label: marker('ACCOUNTS.vat_number'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'olive',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'iban',\n                    label: marker('ACCOUNTS.iban'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'alphanum',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'email',\n                    label: marker('FORMATS.email'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'email',\n                    format_icon:'fa-solid fa-at',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'address1',\n                    label: marker('ADDRESSES.address_1'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'address2',\n                    label: marker('ADDRESSES.address_2'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum_extended_with_accent',\n                    format_icon:'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'postal_code',\n                    label: marker('ADDRESSES.postal_code'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_int',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'city',\n                    label: marker('ADDRESSES.city'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'country',\n                    label: marker('ADDRESSES.country'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fa-solid fa-font',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n            ]\n        },\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'silver',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group',\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'red',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'orange',\n                    format: 'alphanum_extended',\n                    format_icon: 'fa-solid fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'yellow',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'blue',\n                    format: 'date',\n                    format_icon: 'fa-solid fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'pink',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group',\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'fuschia',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group',\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'purple',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group',\n                },\n                {\n                    id: 'accounting_plan',\n                    label: marker('FACTURATION.accounting_plan'),\n                    unit: 'facturation',\n                    type: 'select',\n                    required: false,\n                    format: 'select',\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    display: 'multi',\n                    display_icon:'fa-solid fa-layer-group',\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fa-solid fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: '',\n                    format: 'number_float',\n                    format_icon:'fa-solid fa-calculator',\n                    display: 'simple',\n                    display_icon:'fa-solid fa-file-alt',\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        },\n    ];\n    classList               : any []    = [\n        {\n            'id': 'w-full',\n            'label': '1'\n        },\n        {\n            'id': 'w-1/2',\n            'label': '1/2'\n        },\n        {\n            'id': 'w-30',\n            'label': '1/3'\n        },\n        {\n            'id': 'w-1/3',\n            'label': '1/33'\n        },\n        {\n            'id': 'w-1/4',\n            'label': '1/4'\n        },\n        {\n            'id': 'w-1/5',\n            'label': '1/5'\n        },\n        {\n            'id': 'w-1/6',\n            'label': '1/6'\n        }\n    ];\n    colorsList              : any []    = [\n        {\n            'id': 'yellow',\n            'label': marker('COLORS.yellow')\n        },\n        {\n            'id': 'pink',\n            'label': marker('COLORS.pink')\n        },\n        {\n            'id': 'red',\n            'label': marker('COLORS.red')\n        },\n        {\n            'id': 'blue',\n            'label': marker('COLORS.blue')\n        },\n        {\n            'id': 'orange',\n            'label': marker('COLORS.orange')\n        },\n        {\n            'id': 'purple',\n            'label': marker('COLORS.purple')\n        },\n        {\n            'id': 'black',\n            'label': marker('COLORS.black')\n        },\n        {\n            'id': 'white',\n            'label': marker('COLORS.white')\n        },\n        {\n            'id': 'aqua',\n            'label': marker('COLORS.aqua')\n        },\n        {\n            'id': 'maroon',\n            'label': marker('COLORS.maroon')\n        },\n        {\n            'id': 'teal',\n            'label': marker('COLORS.teal')\n        },\n        {\n            'id': 'navy',\n            'label': marker('COLORS.navy')\n        },\n        {\n            'id': 'fuchsia',\n            'label': marker('COLORS.fuchsia')\n        },\n        {\n            'id': 'silver',\n            'label': marker('COLORS.silver')\n        },\n        {\n            'id': 'gray',\n            'label': marker('COLORS.gray')\n        },\n        {\n            'id': 'lime',\n            'label': marker('COLORS.lime')\n        },\n        {\n            'id': 'green',\n            'label': marker('COLORS.green')\n        },\n    ];\n    formatList              : any []    = [\n        {\n            'id': 'date',\n            'label': marker('FORMATS.date'),\n            'icon': 'fa-solid fa-calendar-day'\n        },\n        {\n            'id': 'number_float',\n            'label': marker('FORMATS.number_float'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'number_int',\n            'label': marker('FORMATS.number_int'),\n            'icon': 'fa-solid fa-calculator'\n        },\n        {\n            'id': 'char',\n            'label': marker('FORMATS.char'),\n            'icon': 'fa-solid fa-font'\n        },\n        {\n            'id': 'alphanum',\n            'label': marker('FORMATS.alphanum'),\n            'icon': 'fa-solid fa-hashtag'\n        },\n        {\n            'id': 'alphanum_extended',\n            'label': marker('FORMATS.alphanum_extended'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'alphanum_extended_with_accent',\n            'label': marker('FORMATS.alphanum_extended_with_accent'),\n            'icon': 'fa-solid fa-level-up-alt'\n        },\n        {\n            'id': 'email',\n            'label': marker('FORMATS.email'),\n            'icon': 'fa-solid fa-alt'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id': 'simple',\n            'label': marker('DISPLAY.simple'),\n            'icon': 'fa-solid fa-file-alt'\n        },\n        {\n            'id': 'multi',\n            'label': marker('DISPLAY.multi'),\n            'icon': 'fa-solid fa-layer-group'\n        },\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id': true,\n            'label': marker('MANDATORY.required'),\n            'icon': 'fa-solid fa-star'\n        },\n        {\n            'id': false,\n            'label': marker('MANDATORY.not_required'),\n            'icon': 'far fa-star'\n        },\n    ];\n    availableFields         : any       = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'only_ocr',\n            'label': marker('FORMS.only_ocr')\n        },\n        {\n            \"id\": 'supplier',\n            'label': 'ACCOUNTS.supplier'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date',\n            'label': marker('FACTURATION.document_date')\n        },\n        {\n            \"id\": 'footer',\n            'label': marker('FACTURATION.footer')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((res_outputs: any) => {\n                this.outputs = res_outputs.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(environment['url'] + '/ws/forms/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.formSettingId = data.module_settings_id;\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) this.form[field].control.setValue(data[field]);\n                                }\n                            }\n\n                            for (const field in this.formSettings) {\n                                for (const setting in data['settings']) {\n                                    if (setting === 'allow_automatic_validation') {\n                                        this.openAvailableField = data['settings'][setting];\n                                    }\n\n                                    if (setting === field) {\n                                        this.formSettings[setting].control.setValue(data['settings'][setting]);\n                                    }\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) this.outputForm[0].control.setValue(data.outputs[0]);\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) this.addOutput();\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }), catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            this.availableFields.push({\n                                'id': 'custom_' + data.customFields[field].id,\n                                'label': data.customFields[field].label\n                            });\n                            for (const parent in this.availableFieldsParent) {\n                                if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                    this.availableFieldsParent[parent].values.push({\n                                        id: 'custom_' + data.customFields[field].id,\n                                        label: data.customFields[field].label,\n                                        unit: 'custom',\n                                        type: data.customFields[field].type,\n                                        required: data.customFields[field].required,\n                                        autocomplete: data.customFields[field].autocomplete,\n                                        class: \"w-1/3\",\n                                        class_label: \"1/33\",\n                                    });\n                                    let format = '';\n                                    if (data.customFields[field].type === 'text') {\n                                        format = 'char';\n                                    } else if (data.customFields[field].type === 'select') {\n                                        format = 'select';\n                                    } else if (data.customFields[field].type === 'textarea') {\n                                        format = 'char';\n                                    } else {\n                                        format = data.customFields[field].type;\n                                    }\n                                    this.availableFieldsParent[parent].values[this.availableFieldsParent[parent].values.length - 1]['format'] = format;\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingCustomFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.formId) {\n            this.http.get(environment['url'] + '/ws/forms/getFields/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.form_fields.fields) {\n                        if (data.form_fields.fields.facturation !== undefined)\n                            this.fields.facturation = data.form_fields.fields.facturation;\n                        if (data.form_fields.fields.supplier)\n                            this.fields.supplier = data.form_fields.fields.supplier;\n                        if (data.form_fields.fields.other)\n                            this.fields.other = data.form_fields.fields.other;\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeFormat(fieldId: any, newFormat: any, formatIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.format = newFormat;\n                element.format_icon = formatIcon;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    changeColor(fieldId: any, newColor: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.color = newColor;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            if (event.container.data) moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(previousIndex: any, category: any, unit: any) {\n        if (unit === 'addresses' || unit === 'supplier') {\n            unit = 'accounts';\n        }\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    updateValue(event: any, field: any) {\n        const value = event.target ? event.target.value : event.value;\n        if (value) {\n            field.label = value;\n        }\n        field.edit_name = false;\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        this.updateFormLoading = true;\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n\n        const settings: any = {};\n        Object.keys(this.formSettings).forEach((element: any) => {\n            settings[element] = this.formSettings[element].control.value;\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(environment['url'] + '/ws/forms/update/' + this.formId, {\n                    'args': {\n                        'label'        : label,\n                        'default_form' : isDefault,\n                        'outputs'      : outputs,\n                        'settings'     : settings\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(environment['url'] + '/ws/forms/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('verifier', 'update_form', this.translate.instant('HISTORY-DESC.update-form', {form: label}));\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                finalize(() => this.updateFormLoading = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n        }\n    }\n\n    selectForLine(event: any, field: any) {\n        if (event.ctrlKey) {\n            field.lineSelected = !field.lineSelected;\n            if (field.lineSelected) {\n                this.selectedFields.push({'id': field.id, 'class': field.class});\n            } else {\n                this.selectedFields.forEach((element: any, index: number) => {\n                    if (element.id === field.id) {\n                        this.selectedFields.splice(index, 1);\n                        field.fullSize = false;\n                    }\n                });\n            }\n            let size = 0;\n            this.selectedFields.forEach((element: any) => {\n                const currentNumber = element.class.replace('w-', '');\n                if (currentNumber !== 'full') {\n                    const currentSize = new Function(\"return \" + element.class.replace('w-', ''))();\n                    size += currentSize;\n                } else {\n                    size = 1;\n                }\n            });\n            if (Math.round((size * 10)) / 10 % 1 === 0 && field.lineSelected) {\n                field.fullSize = true;\n            }\n        }\n    }\n\n    createForm() {\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        let supplierVerif = this.formSettings.supplier_verif.control.value;\n        const automaticValidationData = this.formSettings.automatic_validation_data.control.value;\n        const allowAutomaticValidation = this.formSettings.allow_automatic_validation.control.value;\n        const deleteDocumentsAfterOutputs = this.formSettings.delete_documents_after_outputs.control.value;\n        if (!supplierVerif) supplierVerif = false;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n        if (label) {\n            this.http.post(environment['url'] + '/ws/forms/add', {\n                    'args': {\n                        'module'        : 'verifier',\n                        'label'         : label,\n                        'outputs'       : outputs,\n                        'default_form'  : isDefault,\n                        'settings'      : {\n                            \"supplier_verif\"                 : supplierVerif,\n                            \"automatic_validation_data\"      : automaticValidationData,\n                            \"allow_automatic_validation\"     : allowAutomaticValidation,\n                            \"delete_documents_after_outputs\" : deleteDocumentsAfterOutputs\n                        },\n                    }\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(environment['url'] + '/ws/forms/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.historyService.addHistory('verifier', 'create_form', this.translate.instant('HISTORY-DESC.create-form', {form: label}));\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/verifier/forms').then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div class=\"grid grid-cols-4 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field class=\"h-0\">\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center flex-col mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['delete_documents_after_outputs'].control\">\n                        {{ \"FORMS.delete_documents_after_outputs\" | translate }}\n                    </mat-slide-toggle>\n                    <mat-hint class=\"text-gray-600 mt-4\">\n                        {{ \"FORMS.delete_documents_after_outputs_hint\" | translate }}\n                    </mat-hint>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['allow_automatic_validation'].control\"\n                                      (change)=\"this.openAvailableField = !this.openAvailableField\">\n                        {{ \"FORMS.allow_automatic_validation\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <mat-form-field *ngIf=\"this.openAvailableField\" [class.z-50]=\"this.modalOpen\">\n                    <mat-label>{{ \"FORMS.automatic_validation_data\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.formSettings['automatic_validation_data'].control\" required\n                           placeholder=\"supplier,footer,invoice_number,document_date\">\n                    <mat-hint (click)=\"this.modalOpen = true\" class=\"text-gray-600 cursor-pointer\">\n                        {{ 'FORMS.automatic_validation_data_hint' | translate }}\n                    </mat-hint>\n                </mat-form-field>\n                <div class=\"flex justify-center flex-col mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.formSettings['supplier_verif'].control\">\n                        {{ \"FORMS.supplier_verif\" | translate }}\n                    </mat-slide-toggle>\n                    <mat-hint class=\"text-gray-600 mt-4\">{{ \"FORMS.supplier_verif_hint\" | translate }}</mat-hint>\n                </div>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{ option.id }}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-3.5 right-4 cursor-pointer text-gray-900 z-40\">\n                        <i class=\"fa-solid fa-circle-plus\"></i>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-3.5 right-4 cursor-pointer text-red-500\">\n                        <i class=\"fa-solid fa-trash\"></i>\n                    </span>\n                </mat-form-field>\n            </div>\n            <div class=\"form-container\">\n                <ng-container *ngFor=\"let category of this.fieldCategories; let i = index\">\n                    <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem;\"\n                         [style]=\"'width:calc(3% + ' + this.translate.instant(category['label']).length + '%)'\">\n                        {{ category['label'] | translate }}\n                    </div>\n                    <div class=\"border-green-400 border rounded-lg mx-6 my-7\">\n                        <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" [id]=\"category['id']\"\n                             class=\"flex flex-wrap cursor-pointer w-full my-3 px-2\" style=\"min-height: 50px;\">\n                            <div *ngFor=\"let field of this.fields[category['id']]; let index = index\"\n                                 class=\"flex items-center overflow-hidden\" [class]=\"field.class\"\n                                 [ngSortGridItems]=\"fields[category['id']]\" ngSortgridItem\n                                 [ngSortGridGroup]=\"category['id']\" (sorted)=\"storeNewOrder($event, category['id'])\"\n                                 [class.-mt-4]=\"field.lineSelected\">\n                                <mat-form-field class=\"right-0 form-builder mt-1 rounded-md\"\n                                                [class.bg-opacity-30]=\"field.lineSelected\"\n                                                [class.px-3]=\"!field.lineSelected\" [class.px-6]=\"field.lineSelected\"\n                                                [class.pb-0]=\"field.lineSelected\" [class.pt-5]=\"field.lineSelected\"\n                                                [ngClass]=\"{'w-full': !field.lineSelected, 'w-11/12': field.lineSelected}\"\n                                                [class.bg-gray-900]=\"field.lineSelected\"\n                                                (click)=\"selectForLine($event, this.fields[category['id']][index])\">\n                                    <i cdkDrag class=\"fa-solid fa-trash z-10 text-red-500\"\n                                       *ngIf=\"!field.edit_name\" (click)=\"deleteField(index, category['id'], field.unit)\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <i cdkDrag class=\"fa-solid fa-edit z-10 ml-6 text-green-400\"\n                                       *ngIf=\"!field.edit_name\" (click)=\"field.edit_name = true\"\n                                       [matTooltip]=\"this.translate.instant('FORMS.update_label')\"></i>\n                                    <span class=\"input-label relative -top-0.5 border-r-2 border-green-400 inline-block\n                                                overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\"\n                                          *ngIf=\"!field.edit_name\">\n                                        <span *ngIf=\"field.required\" class=\"text-red-500 mr-2 relative top-0.5\">*</span>\n                                        <strong>{{ field.label | translate }}</strong>\n                                        <span *ngIf=\"field.type !== 'select' && field.type !== 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                        <span *ngIf=\"field.type === 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                        <span *ngIf=\"field.type === 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                    </span>\n                                    <span class=\"flex w-full\" *ngIf=\"field.edit_name\">\n                                        <mat-form-field appearance=\"outline\" class=\"w-full input-label-builder\"\n                                                        style=\"margin-top: -8px\">\n                                            <input matInput [value]=\"field.label | translate\" class=\"relative top-1\"\n                                                   (keyup.enter)=\"updateValue($event, field)\"\n                                                   (focusout)=\"updateValue($event, field)\">\n                                        </mat-form-field>\n                                        <button matTooltip=\"{{ 'CONFIGURATIONS.validate' | translate }}\" mat-icon-button\n                                                class=\"top-1.5\">\n                                            <i class=\"fa-solid fa-check visible opacity-100 text-lg\"></i>\n                                        </button>\n                                    </span>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                    <div class=\"absolute top-0 -right-4 z-10\" *ngIf=\"!field.edit_name\">\n                                        <button mat-button [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                                [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\">\n                                            <i class=\"fa-solid fa-ellipsis-vertical text-lg\"></i>\n                                        </button>\n                                        <mat-menu #menu=\"matMenu\">\n                                            <button mat-menu-item [matMenuTriggerFor]=\"colors\"\n                                                    *ngIf=\"field.type !== 'select'\"\n                                                    [style]=\"'background-color:' + field.color\"\n                                                    [class.text-white]=\"field.color === 'black' || field.color === 'navy'\">\n                                                {{ \"VERIFIER.colors\" | translate }}\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                                {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">\n                                                    {{ field.class_label }}\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"format\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.format\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field.format_icon }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type !== 'select'\">\n                                                {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field.display_icon }}\"></i>\n                                                </small>\n                                            </button>\n                                            <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                                {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\">\n                                                    <i class=\"text-base text-green-400 {{ field.required_icon }}\"></i>\n                                                </small>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #size=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _class of classList\"\n                                                    (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\">\n                                                <span [class.text-green-400]=\"_class.id === field.class\">\n                                                    {{ _class.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_class.id === field.class\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #colors=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _color of colorsList\"\n                                                    (click)=\"changeColor(field.id, _color.id, category['id'])\"\n                                                    [style]=\"'background-color:' + _color.id\"\n                                                    [class.text-white]=\"_color.id === 'black' || _color.id === 'navy'\">\n                                                {{ _color.label | translate }}\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #format=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _format of formatList\"\n                                                    (click)=\"changeFormat(field.id, _format.id, _format.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_format.id === field.format\">\n                                                    {{ _format.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_format.id === field.format\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #display=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let _display of displayList\"\n                                                    (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"_display.id === field.display\">\n                                                    {{ _display.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"_display.id === field.display\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                        <mat-menu #required=\"matMenu\">\n                                            <button mat-menu-item [id]=\"field.id\"\n                                                    *ngFor=\"let required of mandatoryList\"\n                                                    (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\">\n                                                <span [class.text-green-400]=\"required.id === field.required\">\n                                                    {{ required.label | translate }}\n                                                </span>\n                                                <span *ngIf=\"required.id === field.required\">\n                                                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                                </span>\n                                            </button>\n                                        </mat-menu>\n                                    </div>\n                                </mat-form-field>\n                                <div *ngIf=\"field.fullSize\">\n                                    <i class=\"fa-solid fa-layer-group -m-2 -right-4 relative\"\n                                       [class.text-green-400]=\"field.fullSizeSelected\" matTooltipPosition=\"above\"\n                                       [matTooltip]=\"field.fullSizeSelected ? ('VERIFIER.full_line' | translate) :\n                                                                              ('VERIFIER.make_line' | translate)\"\n                                       (click)=\"field.fullSizeSelected = !field.fullSizeSelected\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"flex justify-center items-center\">\n                <button mat-button class=\"w-56 p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                        (click)=\"createForm()\" *ngIf=\"this.creationMode\">\n                        {{ \"FORMS.create\" | translate }}\n                </button>\n                <button mat-button class=\"w-56 p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\"\n                        (click)=\"updateForm()\" *ngIf=\"!this.creationMode\">\n                        <span *ngIf=\"!this.updateFormLoading\">{{ \"FORMS.modify\" | translate }}</span>\n                        <i *ngIf=\"this.updateFormLoading\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n                </button>\n            </div>\n            <div class=\"absolute overflow-y-auto overflow-x-hidden z-40 w-full md:inset-0 grid\n                 place-items-center h-screen\" *ngIf=\"this.modalOpen\">\n                <div class=\"relative w-full max-w-2xl h-full md:h-auto border border-green-400\">\n                    <div class=\"relative bg-white shadow\">\n                        <div class=\"flex justify-between items-start p-4 border-b bg-green-400\">\n                            <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n                                {{ \"FORMS.available_fields\" | translate }}\n                            </h3>\n                            <button type=\"button\" class=\"text-gray-900 bg-transparent ml-auto inline-flex items-center\"\n                                    style=\"padding-top: 0.9rem\" (click)=\"this.modalOpen = false\">\n                                <i class=\"fa-solid fa-xmark fa-2x\"></i>\n                            </button>\n                        </div>\n                        <div class=\"p-6 space-y-6\">\n                            <div class=\"overflow-x-hidden overflow-y-auto h-96\">\n                                <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                                    <span>\n                                        {{ field.label | translate }}\n                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                                        <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingCustomFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group style=\"height: calc(100% - 70px)\" *ngIf=\"!loadingCustomFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\"\n                     label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }} </mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" disabled>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fa-solid fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\nexport class FormListComponent implements OnInit {\n    columnsToDisplay: string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    loading: boolean            = true;\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/forms') || lastUrl === '/') {\n            if (this.localStorageService.get('formsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('formsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('formsPageIndex');\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) this.total = data.forms[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadForms();\n                }\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async getInputs(formId: any) {\n        return await this.http.get(environment['url'] + '/ws/inputs/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async deleteConfirmDialog(formId: number, form: string) {\n        const inputs: any = await this.getInputs(formId);\n        if (inputs.length !== 0) {\n            const forms = this.forms;\n            forms.forEach((form: any, cpt: number) => {\n                if (form.id === formId) {\n                    forms.splice(cpt, 1);\n                }\n            });\n            const inputList: any = [];\n            const inputListLabel: any = [];\n            inputs.forEach((input: any) => {\n                inputList.push({'id': input.id, 'label': input.input_label});\n                inputListLabel.push(input.input_label);\n            });\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.new_input_link'),\n                    confirmText         : this.translate.instant('FORMS.inputs_list_already_linked', {\"inputsList\": inputListLabel.join('<br>')}),\n                    selectValues        : forms,\n                    selectLabel         : this.translate.instant('FORMS.choose_form'),\n                    confirmButton       : this.translate.instant('GLOBAL.delete_form_and_reassign_input'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                },\n                width: \"600px\",\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.updateInputsDefaultForm(result, inputList);\n                    this.deleteForm(formId);\n                    this.historyService.addHistory('verifier', 'delete_form', this.translate.instant('HISTORY-DESC.delete-form', {form: form}));\n                }\n            });\n        } else {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                    confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                    confirmButton       : this.translate.instant('GLOBAL.delete'),\n                    confirmButtonColor  : \"warn\",\n                    cancelButton        : this.translate.instant('GLOBAL.cancel'),\n                },\n                width: \"600px\",\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.deleteForm(formId);\n                    this.historyService.addHistory('verifier', 'delete_form', this.translate.instant('HISTORY-DESC.delete-form', {form: form}));\n                }\n            });\n        }\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateForm(formId);\n                this.historyService.addHistory('verifier', 'duplicate_form', this.translate.instant('HISTORY-DESC.duplicate-form', {form: form}));\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableForm(formId);\n                this.historyService.addHistory('verifier', 'disable_form', this.translate.instant('HISTORY-DESC.disable-form', {form: form}));\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableForm(formId);\n                this.historyService.addHistory('verifier', 'enable_form', this.translate.instant('HISTORY-DESC.enable-form', {form: form}));\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/forms/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    updateInputsDefaultForm(newFormId: number, inputs: any) {\n        if (newFormId !== undefined) {\n            for (const cpt in inputs) {\n                const args = {'default_form_id': newFormId};\n                this.http.put(environment['url'] + '/ws/inputs/update/' + inputs[cpt].id, {'args': args}, {headers: this.authService.headers}).pipe(\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        }\n    }\n\n    duplicateForm(formId: number) {\n        this.loading = true;\n        if (formId !== undefined) {\n            this.http.post(environment['url'] + '/ws/forms/duplicate/' + formId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_disabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(environment['url'] + '/ws/forms/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_enabled'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if (!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default_form\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default_form\"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            *ngIf=\"this.forms.length > 1\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/forms/builder/edit/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'create-input',\n    templateUrl: './create-input.component.html',\n    styleUrls: ['./create-input.component.scss']\n})\nexport class CreateInputComponent implements OnInit {\n    loading                 : boolean       = true;\n    loadingCustomFields     : boolean       = true;\n    headers                 : HttpHeaders   = this.authService.headers;\n    inputId                 : any;\n    input                   : any;\n    inputForm               : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"default_input\",\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'purchase_or_sale',\n            label: this.translate.instant('INPUT.purchase_or_sale'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': 'purchase',\n                    'label': 'UPLOAD.purchase_invoice'\n                },\n                {\n                    'id': 'sale',\n                    'label': 'UPLOAD.sale_invoice'\n                }\n            ],\n            required: true,\n        },\n        {\n            id: 'splitter_method_id',\n            label: this.translate.instant('INPUT.splitter_method'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: [\n                {\n                    'id': 'no_sep',\n                    'label': this.translate.instant('INPUT.no_separation')\n                },\n                {\n                    'id': 'qr_code_OC',\n                    'label': this.translate.instant('INPUT.qr_code_separation')\n                },\n                {\n                    'id': 'separate_by_document',\n                    'label': this.translate.instant('INPUT.separate_by_document')\n                }\n            ],\n        },\n        {\n            id: 'override_supplier_form',\n            label: this.translate.instant('INPUT.override_supplier_form'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n        {\n            id: 'remove_blank_pages',\n            label: this.translate.instant('INPUT.remove_blank_pages'),\n            type: 'boolean',\n            control: new FormControl()\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                    if (element.id === 'splitter_method_id') {\n                        element.control.setValue('no_sep');\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'default_form_id') {\n                        element.values = forms.forms;\n                        if (forms.forms.length === 1) {\n                            element.control.setValue(forms.forms[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'verifier'\n            };\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.createInputAndScriptAndIncron();\n        }\n    }\n\n    createInputAndScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'verifier'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            input['module'] = 'verifier';\n\n            this.http.post(environment['url'] + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.http.post(environment['url'] + '/ws/inputs/create', {'args': input}, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('verifier', 'create_input', this.translate.instant('HISTORY-DESC.create-input', {input: input['input_label']}));\n                            this.router.navigate(['/settings/verifier/inputs']).then();\n                            this.notify.success(this.translate.instant('INPUT.created'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of this.inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate }}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate }}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <div class=\"grid grid-cols-3 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of this.inputForm\">\n                    <div *ngIf=\"field.type === 'boolean'\">\n                        <mat-slide-toggle [formControl]=\"field.control\"\n                                          class=\"relative top-4 mb-10 col-span-2\">\n                            <span class=\"justify-center\">{{ field.label | translate }}</span>\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\" mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.create\" | translate }}</span>\n            </button>\n        </div>\n        <div class=\"text-gray-600 text-sm mt-4 flex justify-center items-center\">\n            <span class=\"w-1/3\" [innerHTML]=\"'INPUT.create_hint' | translate\"></span>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'inputs-list',\n    templateUrl: './inputs-list.component.html',\n    styleUrls: ['./inputs-list.component.scss']\n})\nexport class InputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'input_id', 'input_label', 'input_folder', 'actions'];\n    loading         : boolean       = true;\n    inputs          : any           = [];\n    allInputs       : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/inputs') || lastUrl === '/') {\n            if (this.localStorageService.get('inputsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('inputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('inputsPageIndex');\n\n        this.http.get(environment['url'] + '/ws/inputs/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allInputs = data.inputs;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadInputs();\n    }\n\n    loadInputs() {\n        this.http.get(environment['url'] + '/ws/inputs/list?module=verifier&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.inputs[0]) this.total = data.inputs[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadInputs();\n                }\n                this.inputs = data.inputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('inputsPageIndex', event.pageIndex);\n        this.loadInputs();\n    }\n\n    deleteConfirmDialog(inputId: number, input: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('INPUT.confirm_delete', {\"input\": input}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteInput(inputId);\n                this.historyService.addHistory('verifier', 'delete_input', this.translate.instant('HISTORY-DESC.delete-input', {input: input}));\n            }\n        });\n    }\n\n    deleteInput(inputId: number) {\n        if (inputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/inputs/delete/' + inputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadInputs();\n                    this.notify.success(this.translate.instant('INPUT.input_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(inputId: number, input: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('INPUT.confirm_duplicate', {\"input\": input}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateInput(inputId);\n                this.historyService.addHistory('verifier', 'duplicate_input', this.translate.instant('HISTORY-DESC.duplicate-input', {input: input}));\n            }\n        });\n    }\n\n    duplicateInput(inputId: number) {\n        if (inputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/inputs/duplicate/' + inputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadInputs();\n                    this.notify.success(this.translate.instant('INPUT.input_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allInputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.inputs = data.splice(0, this.pageSize);\n            return;\n        }\n\n        this.inputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n        this.inputs = this.inputs.splice(0, this.pageSize);\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"inputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_id }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_label\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_label }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_folder\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'INPUT.input_folder_header' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{ element.input_folder }} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.input_label)\"\n                        matTooltip=\"{{ 'INPUT.duplicate' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"fa-solid fa-clone text-lg\"></i>\n                </button>\n                <button mat-icon-button\n                        (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.input_label)\"\n                        matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                        class=\"inline-block align-text-top\">\n                    <i class=\"fa-solid fa-trash text-lg\"></i>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/settings/verifier/inputs/update/{{ row.id }}\"\n                 class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n    </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { FormControl } from \"@angular/forms\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'input-update',\n    templateUrl: './update-input.component.html',\n    styleUrls: ['./update-input.component.scss']\n})\nexport class UpdateInputComponent implements OnInit {\n    headers                 : HttpHeaders   = this.authService.headers;\n    loading                 : boolean       = true;\n    loadingCustomFields     : boolean       = true;\n    inputId                 : any;\n    input                   : any;\n    inputForm               : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            disabled: true,\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'purchase_or_sale',\n            label: this.translate.instant('INPUT.purchase_or_sale'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': 'purchase',\n                    'label': 'UPLOAD.purchase_invoice'\n                },\n                {\n                    'id': 'sale',\n                    'label': 'UPLOAD.sale_invoice'\n                }\n            ],\n            required: true,\n        },\n        {\n            id: 'splitter_method_id',\n            label: this.translate.instant('INPUT.splitter_method'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: [\n                {\n                    'id': 'no_sep',\n                    'label': this.translate.instant('INPUT.no_separation')\n                },\n                {\n                    'id': 'qr_code_OC',\n                    'label': this.translate.instant('INPUT.qr_code_separation')\n                },\n                {\n                    'id': 'separate_by_document',\n                    'label': this.translate.instant('INPUT.separate_by_document')\n                }\n            ],\n        },\n        {\n            id: 'override_supplier_form',\n            label: this.translate.instant('INPUT.override_supplier_form'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n        {\n            id: 'remove_blank_pages',\n            label: this.translate.instant('INPUT.remove_blank_pages'),\n            type: 'boolean',\n            control: new FormControl()\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.inputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/inputs/getById/' + this.inputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.input = data;\n                for (const field in this.input) {\n                    this.inputForm.forEach(element => {\n                        if (element.id === field) {\n                            element.control.setValue(data[field]);\n                            if (element.id === 'default_form_id') {\n                                this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n                                    tap((forms: any) => {\n                                        element.values = forms.forms;\n                                    }),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            } else if (element.id === 'customer_id') {\n                                this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n                                    tap((customers: any) => {\n                                        element.values = customers.customers;\n                                    }),\n                                    finalize(() => this.loading = false),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            }\n                            else if (element.id === 'splitter_method_id' && (element.control.value === null || element.control.value === '' || element.control.value === undefined)) {\n                                element.control.setValue('no_sep');\n                            }\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'verifier'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.put(environment['url'] + '/ws/inputs/update/' + this.inputId, {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.historyService.addHistory('verifier', 'update_input', this.translate.instant('HISTORY-DESC.update-input', {input: input['input_label']}));\n                    this.notify.success(this.translate.instant('INPUT.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/verifier/inputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    createScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input : any = {\n                'module': 'verifier'\n            };\n\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n            this.http.post(environment['url'] + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('INPUT.watcher_and_script_updated'));\n                    this.onSubmit();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of this.inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type === 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate }}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate }}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n            <div class=\"grid grid-cols-3 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of this.inputForm\">\n                    <div *ngIf=\"field.type === 'boolean'\">\n                        <mat-slide-toggle [formControl]=\"field.control\"\n                                          class=\"relative top-4 mb-10 col-span-2\">\n                            <span class=\"justify-center\">{{ field.label | translate }}</span>\n                        </mat-slide-toggle>\n                    </div>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\" mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.update\" | translate }}</span>\n            </button>\n            <button (click)=\"createScriptAndIncron()\" mat-button class=\"p-6 ml-4 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span>{{ \"INPUT.update_script_and_watcher\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-output-create',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class CreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    selectedOutputType  : any;\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false,\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false,\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n\n        this.outputForm.forEach((element: any) => {\n            if (element.id === 'compress_type') {\n                element.control.setValue('');\n            }\n        });\n\n        this.http.get(environment['url'] + '/ws/outputs/getOutputsTypes?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data.outputs_types;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const ocrise = this.getValueFromForm(this.outputForm, 'ocrise');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            const compressType = this.getValueFromForm(this.outputForm, 'compress_type');\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            this.http.post(environment['url'] + '/ws/outputs/create',\n                {'args': {\n                    'output_type_id': outputTypeId,\n                    'output_label'  : outputLabel,\n                    'compress_type' : compressType,\n                    'ocrise'        : ocrise,\n                    'module'        : 'verifier',\n                }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.historyService.addHistory('verifier', 'create_output', this.translate.instant('HISTORY-DESC.create-output', {output: outputLabel}));\n                    this.router.navigate(['/settings/verifier/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of this.outputForm\">\n                    <mat-form-field *ngIf=\"field.type === 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [id]=\"field.id\" [name]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of this.outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, this.outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                {{ option.label | translate }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span class=\"block\" (click)=\"createOutput()\">{{ \"OUTPUT.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-output-list',\n    templateUrl: './outputs-list.component.html',\n    styleUrls: ['./outputs-list.component.scss']\n})\nexport class OutputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/outputs') || lastUrl === '/') {\n            if (this.localStorageService.get('outputsPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('outputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('outputsPageIndex');\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(environment['url'] + '/ws/outputs/list?module=verifier&limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) this.total = data.outputs[0].total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadOutputs();\n                }\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n                this.historyService.addHistory('verifier', 'delete_output', this.translate.instant('HISTORY-DESC.delete-output', {output: output}));\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/outputs/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('OUTPUT.confirm_duplicate', {\"output\": output}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicateOutput(outputId);\n                this.historyService.addHistory('verifier', 'duplicate_output', this.translate.instant('HISTORY-DESC.duplicate-output', {output: output}));\n            }\n        });\n    }\n\n    duplicateOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.post(environment['url'] + '/ws/outputs/duplicate/' + outputId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_duplicated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_type_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_type_id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.output_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'OUTPUT.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/outputs/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { PipeTransform, Pipe } from '@angular/core';\nimport { of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search:any): string {\n        const pattern = search\n            .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n            .split(' ')\n            .filter((t:any) => t.length > 0)\n            .join('|');\n        const regex = new RegExp(pattern, 'gi');\n        return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n}\n\n@Component({\n    selector: 'update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class UpdateOutputComponent implements OnInit {\n    headers                 : HttpHeaders   = this.authService.headers;\n    loading                 : boolean       = true;\n    loadingCustomFields     : boolean       = true;\n    connection              : boolean       = false;\n    outputId                : any;\n    output                  : any;\n    selectedOutputType      : any;\n    originalOutputType      : any;\n    outputsTypes            : any[]         = [];\n    outputsTypesForm        : any[]         = [];\n    toHighlight             : string        = '';\n    outputForm              : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'compress_type',\n            label: this.translate.instant('OUTPUT.compress_type'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': '',\n                    'label': marker('OUTPUT.no_compress')\n                },\n                {\n                    'id': 'screen',\n                    'label': marker('OUTPUT.compress_screen')\n                },\n                {\n                    'id': 'ebook',\n                    'label': marker('OUTPUT.compress_ebook')\n                },\n                {\n                    'id': 'prepress',\n                    'label': marker('OUTPUT.compress_prepress')\n                },\n                {\n                    'id': 'printer',\n                    'label': marker('OUTPUT.compress_printer')\n                },\n                {\n                    'id': 'default',\n                    'label': marker('OUTPUT.compress_default')\n                }\n            ],\n            required: false,\n        },\n        {\n            id: 'ocrise',\n            label: this.translate.instant('OUTPUT.enable_ocr'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': true,\n                    'label': marker('OUTPUT.ocr_enabled')\n                },\n                {\n                    'id': false,\n                    'label': marker('OUTPUT.ocr_disabled')\n                },\n            ],\n            required: false,\n        }\n    ];\n    availableFields         : any           = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'name',\n            'label': 'ACCOUNTS.supplier_name'\n        },\n        {\n            \"id\": 'vat_number',\n            'label': 'ACCOUNTS.vat_number'\n        },\n        {\n            \"id\": 'siret',\n            'label': 'ACCOUNTS.siret'\n        },\n        {\n            \"id\": 'siren',\n            'label': 'ACCOUNTS.siren'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'quotation_number',\n            'label': 'FACTURATION.quotation_number'\n        },\n        {\n            \"id\": 'document_date_year',\n            'label': marker('FACTURATION.document_date_year')\n        },\n        {\n            \"id\": 'total_ht',\n            'label': marker('FACTURATION.total_ht')\n        },\n        {\n            \"id\": 'total_ttc',\n            'label': marker('FACTURATION.total_ttc')\n        },\n        {\n            \"id\": 'total_vat',\n            'label': marker('FACTURATION.total_vat')\n        },\n        {\n            \"id\": 'document_date_month',\n            'label': marker('FACTURATION.document_date_month')\n        },\n        {\n            \"id\": 'document_date_day',\n            'label': marker('FACTURATION.document_date_day')\n        },\n        {\n            \"id\": 'register_date_year',\n            'label': marker('FACTURATION.register_date_year')\n        },\n        {\n            \"id\": 'register_date_month',\n            'label': marker('FACTURATION.register_date_month')\n        },\n        {\n            \"id\": 'register_date_day',\n            'label': marker('FACTURATION.register_date_day')\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        },\n    ];\n    testConnectionMapping   : any           = {\n        'export_mem' : \"testMEMConnection()\"\n    };\n\n    /**\n     * Pour ajouter une nouvelle chaine sortante (e.g : Alfresco)\n     * Rajouter une nouvelle ligne dans le tableau testConnectionMapping() contenant l'id de la nouvelle chaine et le nom de la fonction permettant de verifier la connection\n     * Dans le JSON présent dans la table output_types, en se basant sur celui existant (export_mem), créer vos champs par défaut\n     * Attention à bien garder les clé \"auth\" et \"parameters\" présentes\n     * Si un champs \"parameters\" à besoin de récupérer des données depuis un WS de la solution cible (e.g récupération des utilisateurs MEM Courrier)\n     * Rajouter une ligne dans le JSON 'webservice' avec un nom de fonction (sans mettre les parenthèses)\n     * Créer cette fonction et faites le process permettant de récupérer les données\n     * Les données doivent être formatés comme suit : {'id': XX, 'value': XX} et être mise dans la clé \"values\" du champ\n     * Regarder la fonction getUsersMEM() pour voir le fonctionnement\n     * Du côté des webservices permettant l'execution des chaînes sortantes, il faut créer un WS dans le fichier rest/verifier.py\n     * La route doit être : verifier/invoices/<int:document_id>/output_type_id (e.g : verifier/invoices/<int:document_id>/export_mem)\n    **/\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(environment['url'] + '/ws/outputs/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') {\n                                    this.selectedOutputType = this.originalOutputType = data[field];\n                                }\n                                element.control.setValue(data[field]);\n                                if (element.id === 'compress_type') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                                if (element.id === 'ocrise') {\n                                    if (data[field] === null || data[field] === undefined) {\n                                        element.control.setValue('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                this.http.get(environment['url'] + '/ws/outputs/getOutputsTypes?module=verifier', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.http.get(environment['url'] + '/ws/customFields/list?module=verifier', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                data.customFields.forEach((field: any) => {\n                                    this.availableFields.push({\n                                        'id': 'custom_' + field.id,\n                                        'label': field.label\n                                    });\n                                });\n                            }),\n                            finalize(() => this.loadingCustomFields = false),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.outputsTypes = data.outputs_types;\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'links' : [],\n                                'parameters' : [],\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice,\n                                        });\n                                    }\n                                } else {\n                                    if (category === 'links') {\n                                        delete this.outputsTypesForm[_output.output_type_id].links;\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                if (this.output.data.options[category]) {\n                                    this.output.data.options[category].forEach((outputElement: any) => {\n                                        if (element.id === outputElement.id) {\n                                            if (outputElement.value) {\n                                                if (outputElement.webservice) element.values = [outputElement.value];\n                                                element.control.setValue(outputElement.value);\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/verifier/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any, category: string = 'parameters') {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n            const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return array;\n        }\n    }\n\n    /**** MEM Courrier Webservices call ****/\n    testMEMConnection() {\n        const args = this.getMEMConnectionInfo();\n        this.http.post(environment['url'] + '/ws/mem/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status[0];\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.mem_connection_ok'));\n                    this.connection = true;\n                }\n                else {\n                    this.notify.error('<strong>' + this.translate.instant('OUTPUT.mem_connection_ko') + '</strong> : ' + data.status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMEMConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n        };\n    }\n\n    getUsersFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return[0].users) {\n                    const data = _return[0].users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt].serialId,\n                            'value': data[cpt].entity_label,\n                            'extra': data[cpt].entity_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.customFields) {\n                    const data = _return.customFields;\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getContactsCustomFieldsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getContactsCustomFields', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.customFields) {\n                    const data = _return.customFields;\n                    const customFields = [];\n                    for (const cpt in data) {\n                        customFields.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, customFields, 'links');\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt].type_id,\n                            'value': data[cpt].description,\n                            'extra': data[cpt].type_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.priorities) {\n                    const data = _return.priorities;\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.statuses) {\n                    const data = _return.statuses;\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label_status,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMem(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMEMConnectionInfo();\n            this.http.post(environment['url'] + '/ws/mem/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.indexingModels) {\n                    const data = _return.indexingModels;\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END MEM Courrier Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"links\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            if (this.outputsTypesForm[this.selectedOutputType][category]) {\n                for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                    const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                    if (field.isJson) {\n                        try {\n                            JSON.parse(field.control.value);\n                        } catch (error) {\n                            field.control.setErrors({'json_error': true});\n                            this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                            return;\n                        }\n                    }\n\n                    _array.data.options[category].push({\n                        id: field.id,\n                        type: field.type,\n                        webservice: field.webservice,\n                        value: field.value === undefined ? field.control.value : field.value,\n                    });\n                }\n            }\n        }\n        if (_array.data.options['links'].length === 0) delete _array.data.options.links;\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(environment['url'] + '/ws/outputs/update/' + this.outputId, {'args': _array},{headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.output_updated'));\n                this.historyService.addHistory('verifier', 'update_output', this.translate.instant('HISTORY-DESC.update-output', {output: _array['output_label']}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any, category: string = 'parameters') {\n        this.outputsTypesForm[this.selectedOutputType][category][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n                <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                    <ng-container *ngFor=\"let field of outputForm\">\n                        <mat-form-field *ngIf=\"field.type === 'text'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && field.id === 'output_type_id'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                                <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                    {{ option.output_type_label }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field *ngIf=\"field.type === 'select' && (field.id === 'compress_type' || field.id === 'ocrise') && this.selectedOutputType === 'export_pdf'\">\n                            <mat-label>{{ field.label | translate }}</mat-label>\n                            <mat-select [name]=\"field.id\" [id]=\"field.id\" [(ngModel)]=\"field.control.value\">\n                                <mat-option *ngFor=\"let option of field.values\" [value]=\"option.id\">\n                                    {{ option.label | translate }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                        </mat-form-field>\n                    </ng-container>\n                </form>\n            </div>\n            <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n            <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n            <div class=\"flex justify-center items-center mb-2\">\n                <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                    <span class=\"block\" (click)=\"updateOutput()\">{{ \"OUTPUT.update\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"flex justify-center items-center ml-10 mr-5\">\n                <form class=\"w-full text-center\" *ngIf=\"this.selectedOutputType && this.outputsTypesForm[selectedOutputType]\">\n                    <mat-tab-group class=\"output-tab\">\n                        <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                            <span *ngIf=\"this.outputsTypesForm[selectedOutputType]['auth'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_auth_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of this.outputsTypesForm[selectedOutputType]['auth']\">\n                                    <mat-form-field *ngIf=\"field.type === 'text' || field.type === 'number' || field.type === 'password'\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length !== 0\"\n                                    (click)=\"testConnection()\" mat-button\n                                    class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                                <span>{{ \"OUTPUT.test_connection\" | translate }}</span>\n                            </button>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.parameters' | translate\" style=\"height: 50vh;\">\n                            <span *ngIf=\"outputsTypesForm[selectedOutputType]['parameters'].length === 0\" class=\"relative top-10 text-xl\">\n                                {{ 'OUTPUT.no_parameters_necessary' | translate }}\n                            </span>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 -top-0.5 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-xs\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field *ngIf=\"(field.type === 'textarea') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" matInput [value]=\"field.control.value\"\n                                                  [formControl]=\"field.control\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                                  [required]=\"field.required\"></textarea>\n                                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field.required\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">\n                                            {{ 'OUTPUT.check_connection_before' | translate }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                        <mat-tab [label]=\"'OUTPUT.links' | translate\" *ngIf=\"outputsTypesForm[selectedOutputType]['links']\">\n                            <app-hint [message]=\"'OUTPUT.links_hint' | translate\" specificClass=\"w-3/4\"></app-hint>\n                            <div class=\"flex justify-center m-10\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-slide-toggle *ngIf=\"field.type === 'boolean'\" [formControl]=\"field.control\">\n                                        {{ field.label | translate }}\n                                    </mat-slide-toggle>\n                                </ng-container>\n                            </div>\n                            <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-8\">\n                                <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['links']\">\n                                    <mat-form-field *ngIf=\"(field.type === 'text' || field.type === 'number') && !field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                               [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                               [required]=\"field.required\">\n                                        <mat-error *ngIf=\"field.control.invalid\">\n                                            {{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['links']) }}\n                                        </mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                    </mat-form-field>\n                                    <mat-form-field (focusin)=\"retrieveDataFromWS(field.id, 'links')\" *ngIf=\"(field.type === 'text' || field.type === 'number') && field.webservice\">\n                                        <mat-label>{{ field.label | translate }}</mat-label>\n                                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\"\n                                               [readonly]=\"field.webservice && !this.connection\"\n                                               [placeholder]=\"field.placeholder\" [required]=\"field.required\" [matAutocomplete]=\"autocomplete\">\n                                        <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                        <span *ngIf=\"field.hint\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                              [matTooltip]=\"field.hint\">\n                                            <i class=\"fa-solid fa-circle-question text-md\"></i>\n                                        </span>\n                                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                            <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                                <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                            </mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </form>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\"\n                 class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"this.loadingCustomFields\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 8rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-code fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'OUTPUT.loading_custom_fields' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"!this.loadingCustomFields\" class=\"overflow-x-hidden overflow-y-auto\" style=\"height: calc(100% - 70px)\">\n            <div *ngFor=\"let field of this.availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n                <span>\n                    {{ field.label | translate }}\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                    <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt === 0\"></mat-divider>\n                </span>\n            </div>\n        </div>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { environment } from \"../../../../env\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'create-positions-mask',\n    templateUrl: './create-positions-mask.component.html',\n    styleUrls: ['./create-positions-mask.component.scss']\n})\nexport class CreatePositionsMaskComponent implements OnInit {\n    loading             : boolean   = true;\n    suppliers           : any       = [];\n    filteredOptions     : Observable<any> | undefined;\n    forms               : any       = [];\n    form                : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'supplier_id': {\n            'control': new FormControl(),\n        },\n        'form_id': {\n            'control': new FormControl(),\n        }\n    };\n    toHighlight         : string = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = this.sortArrayAlphab(data.suppliers);\n                this.filteredOptions = this.form['supplier_id'].control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option) : this.suppliers.slice())\n                    );\n                this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.forms = data.forms;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        for (const key in form) {\n            if ((form[key].control.status !== 'DISABLED' && form[key].control.status !== 'VALID') || form[key].control.value == null) {\n                state = false;\n            }\n            form[key].control.markAsTouched();\n        }\n        return state;\n    }\n\n    createPositionsMask() {\n        if (this.isValidForm(this.form)) {\n            const label = this.form['label'].control.value;\n            const supplierName = this.form['supplier_id'].control.value;\n            const formId = this.form['form_id'].control.value;\n            let supplierId = '';\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    supplierId = element.id;\n                }\n            });\n            this.http.post(environment['url'] + '/ws/positions_masks/add',\n                {'args': {\n                        'label': label,\n                        'supplier_id': supplierId,\n                        'form_id': formId\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.created'));\n                    this.historyService.addHistory('verifier', 'create_positions_masks', this.translate.instant('HISTORY-DESC.create-positions-masks', {positions_masks: label}));\n                    this.router.navigate(['/settings/verifier/positions-mask/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/positions-mask');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error : any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.name.toUpperCase(),\n                y = b.name.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return this.suppliers;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div *ngIf=\"!loading\" class=\"overflow-auto\">\n            <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of this.filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>\n                        {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                    </mat-label>\n                    <mat-select [formControl]=\"this.form['form_id'].control\" [required]=\"true\">\n                        <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span class=\"block\" (click)=\"createPositionsMask()\">{{ \"POSITIONS-MASKS.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { environment } from  \"../../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HistoryService } from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'positions-mask-list',\n    templateUrl: './positions-mask-list.component.html',\n    styleUrls: ['./positions-mask-list.component.scss']\n})\nexport class PositionsMaskListComponent implements OnInit {\n    columnsToDisplay: string[]      = ['id', 'label', 'supplier_name', 'form_label', 'enabled', 'actions'];\n    loading         : boolean       = true;\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n    positionsMasks  : any           = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/positions-mask') || lastUrl === '/') {\n            if (this.localStorageService.get('positionMaskPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('positionMaskPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localStorageService.remove('positionMaskPageIndex');\n        this.loadPositionMask().then();\n    }\n\n    async loadPositionMask() {\n        this.loading = true;\n        const suppliers = await this.retrieveSuppliers();\n        this.http.get(environment['url'] + '/ws/positions_masks/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.total) this.total = data.total;\n                else if (this.pageIndex !== 0) {\n                    this.pageIndex = this.pageIndex - 1;\n                    this.offset = this.pageSize * (this.pageIndex);\n                    this.loadPositionMask();\n                }\n                this.positionsMasks = data.positions_masks;\n                suppliers.suppliers.forEach((element: any) => {\n                    this.positionsMasks.forEach((mask: any) => {\n                        if (element.id === mask.supplier_id) {\n                            mask.supplier_name = element.name;\n                        }\n                    });\n                });\n\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('positionMaskPageIndex', event.pageIndex);\n        this.loadPositionMask().then();\n    }\n\n    deleteConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_delete', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletePositionMask(positionMaskId);\n                this.historyService.addHistory('verifier', 'delete_positions_masks', this.translate.instant('HISTORY-DESC.delete-positions-masks', {positions_masks: positionsMask}));\n            }\n        });\n    }\n\n    duplicateConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_duplicate', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.duplicatePositionMask(positionMaskId);\n                this.historyService.addHistory('verifier', 'duplicate_positions_masks', this.translate.instant('HISTORY-DESC.duplicate-positions-masks', {positions_masks: positionsMask}));\n            }\n        });\n    }\n\n    disableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_disable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    enableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_enable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    deletePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.delete(environment['url'] + '/ws/positions_masks/delete/' + positionsMaskId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.positions_mask_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicatePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.post(environment['url'] + '/ws/positions_masks/duplicate/' + positionsMaskId, {}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/disable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(environment['url'] + '/ws/positions_masks/enable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.positionsMasks.slice();\n        if (!sort.active || sort.direction === '') {\n            this.positionsMasks = data;\n            return;\n        }\n\n        this.positionsMasks = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\"></div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <mat-table matSort matSortDisableClear [dataSource]=\"positionsMasks\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"form_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.form' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.form_label }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"supplier_name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.supplier_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{ element.supplier_name }}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-pause text-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-play text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-clone text-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fa-solid fa-trash text-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/positions-mask/update/{{ row.id }}\"\n                     class=\"cursor-pointer hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { catchError, finalize, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ConfigService } from \"../../../../../services/config.service\";\nimport { HistoryService } from \"../../../../../services/history.service\";\nimport { environment } from  \"../../../../env\";\n\ndeclare const $: any;\n\n@Component({\n    selector: 'update-positions-mask',\n    templateUrl: './update-positions-mask.component.html',\n    styleUrls: ['./update-positions-mask.component.scss']\n})\nexport class UpdatePositionsMaskComponent implements OnInit {\n    loading                 : boolean   = true;\n    loadingFields           : boolean   = true;\n    ocrFromUser             : boolean   = false;\n    launchOnInit            : boolean   = false;\n    ratio                   : any;\n    positionMaskId          : any;\n    positionsMask           : any;\n    documentImageWidth      : any;\n    documentImageNbPages     : any;\n    currentPage             : number    = 1;\n    suppliers               : any       = [];\n    filteredOptions         : Observable<any> | undefined;\n    forms                   : any       = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'supplier_id': {\n            'control': new FormControl(),\n        },\n        'form_id': {\n            'control': new FormControl(),\n        }\n    };\n    toHighlight             : string    = '';\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'silver',\n                    regex: ''\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'red',\n                    regex: ''\n                },\n                {\n                    id: 'quotation_number',\n                    label: marker('FACTURATION.quotation_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'orange',\n                    regex: ''\n                },\n                {\n                    id: 'document_date',\n                    label: marker('FACTURATION.document_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'yellow',\n                    regex: '',\n                },\n                {\n                    id: 'document_due_date',\n                    label: marker('FACTURATION.document_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'blue',\n                    regex: '',\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'pink',\n                    regex: ''\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'fuschia',\n                    regex: ''\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'purple',\n                    regex: ''\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'white',\n                    regex: ''\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'green',\n                    regex: ''\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'lime',\n                    regex: ''\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        },\n    ];\n    imageDocument           : any;\n    documentImageSrc        : any;\n    documentImageName       : any;\n    lastId                  : any;\n    lastColor               : string    = '';\n    lastLabel               : string    = '';\n    config                  : any;\n    fileControl             = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.serviceSettings.init();\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.serviceSettings.init();\n        this.launchOnInit = true;\n        this.positionMaskId = this.route.snapshot.params['id'];\n        this.config = this.configService.getConfig();\n        this.positionsMask = await this.getPositionMask();\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                for (const key in this.positionsMask.regex) {\n                    if (key === element.id) {\n                        element.regex = this.positionsMask.regex[key];\n                    }\n                }\n            });\n        }\n        if (this.positionsMask.filename) {\n            this.documentImageName = this.positionsMask.filename;\n            this.documentImageNbPages = this.positionsMask.nb_pages;\n            this.documentImageWidth = this.positionsMask.width;\n            this.imageDocument = $('#document_image_src');\n            const thumbB64 : any = await this.getThumb(this.positionsMask.filename);\n            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n        }\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n        if (this.imageDocument) {\n            this.ratio = this.documentImageWidth / this.imageDocument.width();\n            this.ocr({\n                'target' : {\n                    'id': ''\n                }\n            }, true, '', false);\n        }\n        this.form['label'].control.setValue(this.positionsMask.label);\n        this.form['form_id'].control.setValue(this.positionsMask.form_id);\n        this.filteredOptions = this.form['supplier_id'].control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n        this.suppliers.forEach((element: any ) => {\n            if (element.id === this.positionsMask.supplier_id) {\n                this.form['supplier_id'].control.setValue(element.name);\n            }\n        });\n        this.http.get(environment['url'] + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if (data.customFields[field].module === 'verifier') {\n                                for (const parent in this.availableFieldsParent) {\n                                    if (this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id: 'custom_' + data.customFields[field].id,\n                                                label: data.customFields[field].label,\n                                                type: data.customFields[field].type,\n                                                color: data.customFields[field].color,\n                                                regex: ''\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                this.loadingFields = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.drawPositions();\n            this.loading = false;\n            this.launchOnInit = false;\n        }, 500);\n\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        } else {\n            return this.suppliers;\n        }\n    }\n\n    async getPositionMask(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/positions_masks/getById/' + this.positionMaskId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    drawPositions() {\n        if (this.positionsMask) {\n            for (const field in this.positionsMask.positions) {\n                const position = this.positionsMask.positions[field];\n                const page = this.getPage(field);\n                if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                    this.lastId = field;\n                    for (const cpt in this.availableFieldsParent) {\n                        this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                            if (field === element.id) {\n                                this.lastLabel = this.translate.instant(element.label);\n                                this.lastColor = element.color;\n                            }\n                        });\n                    }\n                    $('#' + field).focus();\n\n                    if (this.ratio === Infinity) {\n                        this.ratio = this.documentImageWidth / this.imageDocument.width();\n                    }\n\n                    const newArea = {\n                        x: position.x / this.ratio,\n                        y: position.y / this.ratio,\n                        width: position.width / this.ratio,\n                        height: position.height / this.ratio\n                    };\n\n                    const triggerEvent = $('.trigger');\n                    triggerEvent.hide();\n                    triggerEvent.trigger('mousedown');\n                    triggerEvent.trigger('mouseup', [newArea]);\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any) {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        this.lastColor = field.color;\n        $('#' + field.id).focus();\n        const newArea = {\n            x: position.x / this.ratio,\n            y: position.y / this.ratio,\n            width: position.width / this.ratio,\n            height: position.height / this.ratio\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    updatePositionsMask() {\n        const _array = {\n            'label': this.form['label'].control.value,\n            'form_id': this.form['form_id'].control.value,\n            'regex': {},\n        };\n        if (_array['label'] && _array['form_id']) {\n            const supplierName = this.form['supplier_id'].control.value;\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    Object.assign(_array, {'supplier_id': element.id});\n                }\n            });\n\n            for (const cpt in this.availableFieldsParent) {\n                this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                    if (element.regex) {\n                        Object.assign(_array['regex'], {[element.id]: element.regex});\n                    }\n                });\n            }\n\n            if (_array['regex']) {\n                _array['regex'] = JSON.stringify(_array['regex']);\n            }\n\n            this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId, {'args': _array},{headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.historyService.addHistory('verifier', 'update_positions_masks', this.translate.instant('HISTORY-DESC.update-positions-masks', {positions_masks: _array['label']}));\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    this.router.navigate(['/settings/verifier/positions-mask']).then();\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            this.loading = true;\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    this.loading = false;\n                    return;\n                } else {\n                    const formData: FormData = new FormData();\n                    if (data) formData.append(data[0].name, data[0]);\n\n                    this.http.post(environment['url'] + '/ws/positions_masks/getImageFromPdf/' + this.positionMaskId, formData, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n                            this.documentImageName = data.filename;\n                            this.documentImageWidth = data.width;\n                            this.imageDocument = $('#document_image_src');\n                            setTimeout(() => {\n                                this.ratio = this.documentImageWidth / this.imageDocument.width();\n                            }, 500);\n                            this.documentImageNbPages = data.nb_pages;\n                            this.fileControl.setValue([]);\n                            this.ocr({\n                                'target' : {\n                                    'id': ''\n                                }\n                            }, true, '', false);\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }\n        }\n    }\n\n    deleteImage() {\n        this.documentImageSrc = '';\n        this.imageDocument = undefined;\n        this.positionsMask.positions = {};\n        this.positionsMask.pages = {};\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                element.value = '';\n                const input = $('.input_' + element.id);\n                const background = $('.background_' + element.id);\n                const outline = $('.outline_' + element.id);\n                input.remove();\n                background.remove();\n                outline.remove();\n            });\n        }\n        const imageContainer = $('.image-container');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        this.http.put(environment['url'] + '/ws/positions_masks/update/' + this.positionMaskId,\n            {'args': {'filename': '', 'positions': '{}', 'pages': '{}'}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    ocr(event: any, enable: boolean, color = 'green', removeClass = true) {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        const lastLabel = $('#label_' + this.lastId);\n        this.lastLabel = lastLabel.length !== 0 ? lastLabel[0].innerText : '';\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        deleteArea.addClass('pointer-events-auto');\n        backgroundArea.addClass('pointer-events-auto');\n        resizeArea.addClass('pointer-events-auto');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable && this.imageDocument) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            if (removeClass) {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageDocument.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageDocument.width(), this.imageDocument.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        _this.ocr_process(img, cpt, selection);\n                    }\n                },\n                onDeleted(img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    _this.deletePosition(inputId);\n                    _this.deletePage(inputId);\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (page === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n            }\n\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n\n            if (this.imageDocument && !this.launchOnInit) {\n                const _selection = this.getSelectionByCpt(selection, cpt);\n                this.savePosition(_selection);\n                this.savePage(this.currentPage);\n            }\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    getPage(fieldId: any) {\n        let page: number = this.currentPage;\n        if (this.positionsMask.pages) {\n            Object.keys(this.positionsMask.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.positionsMask.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    checkIfObjectIsEqual(object1: any, object2: any) {\n        if (!object1)\n            return false;\n        if (!object2)\n            return false;\n\n        const aProps = Object.getOwnPropertyNames(object1);\n        const bProps = Object.getOwnPropertyNames(object2);\n\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (let i = 0; i < aProps.length; i++) {\n            const propName = aProps[i];\n            if (object1[propName] !== object2[propName]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    savePosition(position: any) {\n        position = {\n            height: position.height * this.ratio,\n            width: position.width * this.ratio,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio\n        };\n        if (!this.checkIfObjectIsEqual(position, this.positionsMask.positions[this.lastId])) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePositions/' + this.positionMaskId,\n                {'args': {[this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.positions[this.lastId] = position;\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    savePage(page: any) {\n        if (page !== this.positionsMask.pages[this.lastId]) {\n            this.http.put(environment['url'] + '/ws/positions_masks/updatePages/' + this.positionMaskId,\n                {'args': {[this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.pages[this.lastId] = page;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePosition(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePosition',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.positions[this.lastId] = '';\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePage(fieldId: any) {\n        this.http.put(environment['url'] + '/ws/positions_masks/' + this.positionMaskId + '/deletePage',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.pages[this.lastId] = '';\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async nextPage() {\n        if (this.currentPage < this.documentImageNbPages) {\n            this.currentPage = this.currentPage + 1;\n            await this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            await this.changeImage(1, this.documentImageNbPages);\n        }\n    }\n\n    async previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            await this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            await this.changeImage(this.documentImageNbPages, this.currentPage);\n        }\n    }\n\n    async changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.documentImageName.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n\n            const newFilename = this.documentImageName.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.documentImageName = newFilename;\n            const thumbB64: any = await this.getThumb(newFilename);\n            this.documentImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n            this.currentPage = pageToShow;\n            for (const parentCpt in this.availableFieldsParent) {\n                for (const cpt in this.availableFieldsParent[parentCpt]['values']) {\n                    const field = this.availableFieldsParent[parentCpt]['values'][cpt];\n                    const position = this.positionsMask.positions[field.id];\n                    const page = this.positionsMask.pages[field.id];\n                    if (position) {\n                        const input = $('.input_' + field.id);\n                        const background = $('.background_' + field.id);\n                        const outline = $('.outline_' + field.id);\n                        input.remove();\n                        background.remove();\n                        outline.remove();\n                        if (page === this.currentPage) this.drawPositionByField(field, position);\n                    }\n                }\n            }\n        }\n    }\n\n    async getThumb(filename:string) {\n        return await this.http.post(environment['url'] + '/ws/verifier/getThumb',{\n            'args': {\n                'type': 'positions_masks',\n                'filename': filename\n            }\n        }, {headers: this.authService.headers}).toPromise();\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"settings-menu-nav\">\n        <app-settings-menu></app-settings-menu>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"flex\">\n                <button mat-icon-button (click)=\"sidenav.toggle();\">\n                    <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n            <div class=\"settings_search\">\n                <button mat-icon-button (click)=\"sidenav2.toggle();\">\n                    <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fa-solid fa-stream text-2xl text-gray-900\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"overflow-auto\" style=\"height: calc(100% - 70px)\">\n            <div class=\"flex justify-center items-center mt-5\">\n                <button mat-button class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                    <span class=\"block\" (click)=\"updatePositionsMask()\">{{ \"POSITIONS-MASKS.modify\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"grid grid-cols-3 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>\n                        {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                    </mat-label>\n                    <mat-select [formControl]=\"this.form['form_id'].control\" [required]=\"true\">\n                        <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <span class=\"cursor-pointer text-sm col-span-3 flex justify-center m-auto w-1/6 -mt-8\"\n                      *ngIf=\"documentImageSrc\" (click)=\"deleteImage()\">\n                    {{ 'POSITIONS-MASKS.reset_image' | translate }}\n                </span>\n            </div>\n            <div id=\"document_image\">\n                <div class=\"absolute text-xl left-6\" style=\"top: 13.5rem\">\n                    <ng-container *ngIf=\"!this.loading && this.documentImageSrc && this.documentImageNbPages> 1\">\n                        <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n                        {{ 'VERIFIER.page' | translate }}\n                        {{ currentPage }}\n                        {{ 'VERIFIER.on' | translate }}\n                        {{ this.documentImageNbPages }}\n                        <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n                    </ng-container>\n                </div>\n                <div *ngIf=\"!documentImageSrc\">\n                    <ngx-file-drag-drop\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            [multiple]=\"false\"\n                            [accept]=\"'pdf'\"\n                            [displayFileSize]=\"true\"\n                            [emptyPlaceholder]=\"'POSITIONS-MASKS.placeholder' | translate\"\n                            [class]=\"'max-w-3xl h-56 mt-10 mb-10'\"\n                            (valueChanged)=\"checkFile($event)\">\n                    </ngx-file-drag-drop>\n                </div>\n                <div class=\"image-container px-4\" [class.hidden]=\"!this.imageDocument\">\n                    <img id=\"document_image_src\" [src]=\"documentImageSrc\" alt=\"Open-Capture Verifier image\">\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 p-4\">\n            {{ \"FORMS.available_fields\" | translate }}\n        </h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngIf=\"loadingFields\" class=\"relative\" style=\"top: 40%\">\n            <span class=\"text-center overflow-hidden\">\n                <i class=\"fa-solid fa-circle-notch fa-spin fa-4x w-full text-gray-900\"></i>\n            </span>\n        </div>\n        <mat-tab-group style=\"height: calc(100% - 70px)\" *ngIf=\"!loadingFields\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div class=\"min-w-full overflow-x-hidden\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div class=\"flex flex-row items-center justify-between m-5\">\n                            <ng-container>\n                                <div class=\"relative -top-3\" [id]=\"'label_' + field.id\">\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-6/12\">\n                                    <mat-label>{{ 'POSITIONS-MASKS.regex_associated' | translate }}</mat-label>\n                                    <input [id]='field.id' (focusin)=\"ocr($event, true, field.color)\"\n                                           (click)=\"this.ocrFromUser = true;\" [(ngModel)]=\"field.regex\"\n                                           (focusout)=\"ocr($event, false)\" matInput type=\"text\">\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, EventEmitter, Injectable, Input, OnInit, Output } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject, of } from \"rxjs\";\nimport { SettingsService } from \"../../../services/settings.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { PrivilegesService } from \"../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Injectable()\nexport class ChecklistDatabase {\n    doctypeData : any[]     = [];\n    loading     : boolean   = true;\n    dataChange              = new BehaviorSubject<TreeItemNode[]>([]);\n\n    get data(): TreeItemNode[] { return this.dataChange.value; }\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    loadTree(formId: number) {\n        if (formId) {\n            this.retrieveDocTypes(formId);\n            this.initialize();\n        }\n    }\n\n    retrieveDocTypes(formId: number) {\n        this.loading      = true;\n        this.doctypeData = [];\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                let newDoctype;\n                data.doctypes.forEach((doctype: {\n                        id          : number\n                        key         : string\n                        code        : string\n                        label       : string\n                        type        : string\n                        status      : string\n                        is_default  : boolean\n                        form_id     : boolean\n                    }) => {\n                        newDoctype = {\n                            'id'        : doctype.id,\n                            'key'       : doctype.key,\n                            'code'      : doctype.code,\n                            'label'     : doctype.label,\n                            'type'      : doctype.type,\n                            'status'    : doctype.status,\n                            'isDefault' : doctype.is_default,\n                            'formId'    : doctype.form_id,\n                        };\n                        this.doctypeData.push(newDoctype);\n                    }\n                );\n            }),\n            finalize(() => {\n                this.initialize();\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initialize() {\n        /** Build the tree nodes from Database. The result is a list of `DocumentItemNode` with nested\n         * file node as children.\n         */\n        this.loading = true;\n        const data    = this.buildFileTree(this.doctypeData, '0');\n        // Notify the change.\n        this.dataChange.next(data);\n        const lastSearchValue = this.localStorageService.get('doctype_last_search_value') || '';\n        if (lastSearchValue) {\n            this.filter(lastSearchValue);\n        }\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `DocumentItemNode`.\n     */\n\n    buildFileTree(obj: any[], level: string): TreeItemNode[] {\n        return obj.filter(o =>\n            (o.code as string).startsWith(level + '.')\n            && (o.code.match(/\\./g) || []).length === (level.match(/\\./g) || []).length + 1\n        )\n            .map(o => {\n                const node      = new TreeItemNode();\n                node.id         = o.id;\n                node.key        = o.key;\n                node.label      = o.label;\n                node.code       = o.code;\n                node.type       = o.type;\n                node.isDefault  = o.isDefault;\n                const children  = obj.filter(so => (so.code as string).startsWith(level + '.'));\n                if (children && children.length > 0) {\n                    node.children = this.buildFileTree(children, o.code);\n                }\n                return node;\n            });\n    }\n\n    public _normalizeValue(value: string): string {\n        return value.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    }\n\n    public filter(filterText: string) {\n        let filteredTreeData: any[];\n        if (filterText) {\n            filteredTreeData = this.doctypeData.filter(d =>\n                this._normalizeValue(d.label).indexOf(this._normalizeValue(filterText))\n                > -1 && d.code.lastIndexOf('.') === 1\n            );\n            Object.assign([], filteredTreeData).forEach(ftd => {\n                // @ts-ignore\n                const code = (ftd.code as string);\n                filteredTreeData = filteredTreeData.concat(this.doctypeData.filter(d =>\n                    d.code.startsWith(code + \".\") && d.code !== code\n                ));\n            });\n\n        } else {\n            filteredTreeData = this.doctypeData;\n        }\n        const data = this.buildFileTree(filteredTreeData, '0');\n        this.dataChange.next(data);\n    }\n}\n\nexport class TreeItemNode {\n    id!         : number;\n    key!        : string;\n    label!      : string;\n    children!   : TreeItemNode[];\n    code!       : string;\n    type!       : string;\n    isDefault!  : boolean;\n}\n\n/** Flat item node with expandable and level information */\nexport class TreeItemFlatNode {\n    id!         : number;\n    label!      : string;\n    key!        : string;\n    level!      : number;\n    type!       : string;\n    isDefault!  : boolean;\n    expandable! : boolean;\n    code!       : string;\n}\n\n@Component({\n    selector: 'app-document-type-factory',\n    templateUrl: './document-type-factory.component.html',\n    styleUrls: ['./document-type-factory.component.scss'],\n    providers: [ChecklistDatabase]\n})\nexport class DocumentTypeFactoryComponent implements OnInit {\n    loading: boolean                        = false;\n    searchText: string                      = this.localStorageService.get('doctype_last_search_value') || '';\n    @Input() selectedDocTypeInput: any      = {\"key\": undefined, \"id\": -1};\n    @Output() selectedDoctypeOutput: any    = new EventEmitter < string > ();\n    @Output() selectedFormOutput: any       = new EventEmitter < string > ();\n    selectFormControl: FormControl          = new FormControl();\n    forms: any[]                            = [];\n    @Input() data:any;\n\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n    flatNodeMap    = new Map<TreeItemFlatNode, TreeItemNode>();\n\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n    nestedNodeMap  = new Map<TreeItemNode, TreeItemFlatNode>();\n    treeControl!   : FlatTreeControl<TreeItemFlatNode>;\n    treeFlattener! : MatTreeFlattener<TreeItemNode, TreeItemFlatNode>;\n    dataSource!    : MatTreeFlatDataSource<TreeItemNode, TreeItemFlatNode>;\n\n    constructor(\n        public router: Router,\n        public dialog: MatDialog,\n        public userService: UserService,\n        public translate: TranslateService,\n        public serviceSettings  : SettingsService,\n        public treeDataObj : ChecklistDatabase,\n        public privilegesService: PrivilegesService,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private authService: AuthService,\n        private formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    getLevel      = (node: TreeItemFlatNode)                  => node.level;\n    isExpandable  = (node: TreeItemFlatNode)                  => node.expandable;\n    getChildren   = (node: TreeItemNode): TreeItemNode[]      => node.children;\n    hasChild      = (_: number, _nodeData: TreeItemFlatNode)  => _nodeData.type === 'folder';\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.treeFlattener  = new MatTreeFlattener(this.transformer, this.getLevel,\n            this.isExpandable, this.getChildren);\n        this.treeControl    = new FlatTreeControl<TreeItemFlatNode>(this.getLevel, this.isExpandable);\n        this.dataSource     = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.treeDataObj.dataChange.subscribe(data => {\n            this.dataSource.data = data;\n            this.treeControl.expandAll();\n        });\n        this.selectFormControl.valueChanges.subscribe(formId => {\n            this.localStorageService.save('doctypeFormId', formId);\n            this.treeDataObj.loadTree(formId);\n            this.selectedFormOutput.emit({'formId': formId});\n        });\n        this.data.hasOwnProperty('formId') ? this.treeDataObj.loadTree(this.data.formId): this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.forms = data.forms;\n                if (this.forms.length > 0) {\n                    const defaultFormId = this.localStorageService.get('doctypeFormId') ?\n                        this.localStorageService.get('doctypeFormId') : this.forms[0].id;\n                    this.selectFormControl.setValue(Number(defaultFormId));\n                }\n                else {\n                    this.notify.handleErrors(this.translate.instant('FORMS.no_form_available'));\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.loading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /**\n     * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n     */\n    transformer = (node: TreeItemNode, level: number) => {\n        const existingNode = this.nestedNodeMap.get(node);\n        const flatNode = existingNode && existingNode.label === node.label\n            ? existingNode\n            : new TreeItemFlatNode();\n        flatNode.id         = node.id;\n        flatNode.label      = node.label;\n        flatNode.level      = level;\n        flatNode.type       = node.type;\n        flatNode.code       = node.code;\n        flatNode.key        = node.key;\n        flatNode.isDefault  = node.isDefault;\n        flatNode.expandable = (node.type === 'folder');\n        this.flatNodeMap.set(flatNode, node);\n        this.nestedNodeMap.set(node, flatNode);\n        return flatNode;\n    };\n\n    filterChanged() {\n        this.localStorageService.save('doctype_last_search_value',this.searchText);\n        this.treeDataObj.filter(this.searchText);\n        if (this.searchText)\n        {\n            this.treeControl.expandAll();\n        } else {\n            this.treeControl.collapseAll();\n        }\n        this.treeControl.expandAll();\n    }\n\n    selectNode(node: any, isDblClick:boolean) {\n        this.selectedDocTypeInput = node;\n        this.selectedDocTypeInput.isDblClick =isDblClick;\n        this.selectedDoctypeOutput.emit(this.selectedDocTypeInput);\n    }\n\n    selectFolder(node: any) {\n        if (this.data.canFolderBeSelected) {\n            this.selectedDocTypeInput = node;\n            this.selectedDoctypeOutput.emit(this.selectedDocTypeInput);\n        }\n    }\n\n    loadDefaultDocType() {\n        this.treeDataObj.doctypeData.forEach((doctype: any) => {\n            if (doctype.isDefault) {\n                this.selectedDocTypeInput = doctype;\n                this.selectedDoctypeOutput.emit(doctype);\n            }\n        });\n    }\n\n    cloneFormDoctypes(sourceFormId: number, destFormId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('DOCTYPE.confirm_doctypes_clone'),\n                confirmButton       : this.translate.instant('DOCTYPE.clone_doctypes'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                this.treeDataObj.loading = true;\n                this.http.get(environment['url'] + '/ws/doctypes/clone/' + sourceFormId + '/' + destFormId,\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.treeDataObj.retrieveDocTypes(this.selectFormControl.value);\n                        this.notify.success(this.translate.instant('DOCTYPE.doctypes_clone_success'));\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.treeDataObj.loading = false;\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n}\n","<div *ngIf=\"this.treeDataObj.loading\">\n    <app-loader></app-loader>\n</div>\n\n<div class=\"search-input w-full pl-4 pt-4\">\n    <mat-form-field class=\"w-60\">\n        <mat-label>{{ 'SPLITTER.search_folder' | translate }}</mat-label>\n        <input matInput [(ngModel)]=\"searchText\" (input)=\"filterChanged()\">\n    </mat-form-field>\n    <button class=\"text-gray-400 ml-4 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"treeControl.collapseAll()\"\n            [matTooltip]=\"'DOCTYPE.minimize_tree' | translate\">\n        <i class=\"fa-solid fa-minimize text-lg\"></i>\n    </button>\n    <button class=\"text-gray-400 mx-2 my-4 hover:text-green-400 hover:cursor-pointer\" (click)=\"treeControl.expandAll()\"\n            [matTooltip]=\"'DOCTYPE.maximize_tree' | translate\">\n        <i class=\"fa-solid fa-maximize text-lg\"></i>\n    </button>\n    <mat-form-field *ngIf=\"!data.hasOwnProperty('formId')\" class=\"absolute right-4 w-60\">\n        <mat-label>{{ 'FORMS.choose_form' | translate }}</mat-label>\n        <mat-select id='folder' [formControl]=\"selectFormControl\">\n            <div *ngFor=\"let form of forms\">\n                <mat-option [value]=\"form.id\">\n                    <span>{{ form.label | translate }}</span>\n                    <button *ngIf=\"form.id !== selectFormControl.value\" [matTooltip]=\"'DOCTYPE.clone_doctypes' | translate\"\n                        (click)=\"$event.stopPropagation(); cloneFormDoctypes(form.id, selectFormControl.value)\"\n                        class=\"hover:text-green-400 fa fa-clone absolute right-0 mr-2\"></button>\n                </mat-option>\n            </div>\n        </mat-select>\n    </mat-form-field>\n</div>\n<mat-card class=\"overflow-auto\" style=\"height: calc(100% - 9.5rem) !important;\">\n    <div *ngIf=\"treeDataObj.doctypeData.length === 0\" class=\"text-gray-400 p-4\">\n        {{ 'DOCTYPE.no_doctype_to_show' | translate }}\n    </div>\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n            <button mat-button class=\"h-8\" [ngClass]=\"selectedDocTypeInput.id === node.id ? 'text-green-400' : ''\"\n                    (click)=\"selectNode(node, false)\"\n                    (dblclick)=\"selectNode(node, true)\">\n                <i class=\"fa-solid fa-file fw\"></i>\n                <span class=\"pl-1 font-normal\">\n                    <span *ngIf=\"node.isDefault\" class=\"absolute top-3.5 right-0\" matBadge=\"0\" matBadgeSize=\"small\" matBadgeOverlap=\"false\"></span>\n                    {{ node.label }}\n                </span>\n            </button>\n        </mat-tree-node>\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n            <button mat-button matTreeNodeToggle\n                    [ngClass]=\"selectedDocTypeInput.id === node.id ? 'text-green-400' : ''\"\n                    [attr.aria-label]=\"'Toggle ' + node.label\"\n                    (click)=\"selectFolder(node)\">\n                <i [ngClass]=\"treeControl.isExpanded(node) ? 'fa fa-minus-square' : 'fa fa-plus-square'\"></i>\n                <span class=\"pl-1 font-normal\">{{ node.label }}</span>\n            </button>\n        </mat-tree-node>\n    </mat-tree>\n</mat-card>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-document-type',\n    templateUrl: './document-type.component.html',\n    styleUrls: ['./document-type.component.scss']\n})\nexport class DocumentTypeComponent {\n    selectedItem: any;\n\n    constructor(\n        public router: Router,\n        private dialogRef: MatDialogRef<DocumentTypeComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    getOutPut($event: any) {\n        this.selectedItem = $event;\n        this.selectedItem.isDblClick ? this.dialogRef.close(this.selectedItem) : '';\n    }\n}\n","<div class=\"w-full h-full\">\n    <button class=\"float-right\" [mat-dialog-close]=\"\">\n        <i class=\"fa fa-times fa-2x hover:text-green-400\"></i>\n    </button>\n    <app-document-type-factory\n        [selectedDocTypeInput]=\"data.selectedDocType\"\n        [data]=\"{canFolderBeSelected: false, formId: data.formId}\"\n        (selectedDoctypeOutput)=\"getOutPut($event)\">\n    </app-document-type-factory>\n    <span class=\"text-gray-400 my-4\">\n        <i class=\"fa-solid fa-circle-info\"></i>\n        {{ 'SPLITTER.doubleClickToSelectDoctype' | translate }}\n    </span>\n    <div class=\"w-max mx-auto\">\n        <button mat-button class=\"mx-auto h-12 w-48 bg-gray-200 text-gray-500\" [mat-dialog-close]=\"selectedItem\">\n            {{ 'SPLITTER.save' | translate }}\n        </button>\n    </div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama BRICH <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { HistoryService } from \"../../../services/history.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './splitter-list.component.html',\n    styleUrls: ['./splitter-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\n\nexport class SplitterListComponent implements OnInit {\n    batches          : any     = [];\n    isLoading        : boolean = true;\n    loadingCustomers : boolean = true;\n    expanded         : boolean = false;\n    status           : any[]   = [];\n    page             : number  = 1;\n    selectedTab      : number  = 0;\n    searchText       : string  = \"\";\n    pageSize         : number  = 16;\n    pageIndex        : number  = 1;\n    offset           : number  = 0;\n    pageSizeOptions  : any []  = [4, 8, 12, 16, 24, 48];\n    total            : number  = 0;\n    totals           : any     = {};\n    batchList        : any[]   = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today'),\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday'),\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older'),\n        }\n    ];\n    totalChecked        : number  = 0;\n    batchesSelected     : boolean = false;\n    currentStatus       : string  = 'NEW';\n    currentTime         : string  = 'today';\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private _sanitizer: DomSanitizer,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        if (!this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        this.localStorageService.save('splitter_or_verifier', 'splitter');\n\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('splitter/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.localStorageService.get('splitterPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('splitterPageIndex') as string);\n            if (this.localStorageService.get('splitterTimeIndex')) {\n                this.selectedTab = parseInt(this.localStorageService.get('splitterTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('splitterPageIndex');\n            this.localStorageService.remove('splitterTimeIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/status/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadBatches();\n    }\n\n    loadBatches(): void {\n        this.isLoading = true;\n        this.batches   = [];\n        this.http.get(environment['url'] + '/ws/splitter/batches/user/' + this.userService.user.id + '/totals/'\n            + this.currentStatus, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.get(environment['url'] + '/ws/splitter/batches/user/' + this.userService.user.id +  '/paging/' +\n            (this.pageIndex - 1) + '/' + this.pageSize + '/' + this.currentTime + '/' + this.currentStatus,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail']),\n                    })\n                );\n                this.total = data.count;\n            }),\n            finalize(() => this.isLoading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    sanitize(url: string) {\n        return this._sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + url);\n    }\n\n    checkSelectedBatch() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.batchesSelected = this.totalChecked !== 0;\n    }\n\n    mergeAllConfirmDialog(parentId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_merge_all_checked_batches'),\n                confirmButton       : this.translate.instant('SPLITTER.merge'),\n                confirmButtonColor  : \"green\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.mergeAllBatches(parentId);\n            }\n        });\n    }\n\n    isCheckboxChecked(batchId: number) {\n        let checked = false;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            const checkboxId = element.id.split('_')[0];\n            if (parseInt(checkboxId) === batchId) {\n                checked = true;\n            }\n        });\n        return checked;\n    }\n\n    mergeAllBatches(parentId: number) {\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        const listOfBatchToMerge: any[] = [];\n        const listOfBatchFormId: any[] = [];\n        Array.from(checkboxList).forEach((element: any) => {\n            if (element.checked) {\n                const batchId = element.id.split('_')[0];\n                if (batchId !== parentId.toString())\n                    listOfBatchToMerge.push(batchId);\n            }\n        });\n\n        this.batches.forEach((batch: any) => {\n            listOfBatchToMerge.forEach((batchId: any) => {\n                if (parseInt(batch.id) === parseInt(batchId)) {\n                    listOfBatchFormId.push(batch.form_id);\n                }\n            });\n            if (parentId === batch.id) listOfBatchFormId.push(batch.form_id);\n        });\n        const uniqueFormId = listOfBatchFormId.filter((item, i, ar) => ar.indexOf(item) === i);\n\n        if (uniqueFormId.length === 1) {\n            this.isLoading = true;\n            this.http.post(environment['url'] + '/ws/splitter/merge/' + parentId, {'batches': listOfBatchToMerge}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.loadBatches();\n                    this.notify.success(this.translate.instant('SPLITTER.merge_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.error(this.translate.instant('SPLITTER.merge_error_form_not_match'));\n        }\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('SPLITTER.confirm_delete_all_batches'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllBatches();\n            }\n        });\n    }\n\n    onPageChange($event: PageEvent) {\n        this.batches = [];\n        this.pageIndex = $event.pageIndex + 1;\n        this.pageSize = $event.pageSize;\n        this.localStorageService.save('splitterPageIndex', $event.pageIndex);\n        this.loadBatches();\n    }\n\n    openConfirmDialog(id: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('SPLITTER.confirm_batch_delete'),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"400px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteBatch(id);\n                this.historyService.addHistory('splitter', 'delete_batch', this.translate.instant('HISTORY-DESC.delete_batch', {batch_id: id}));\n            }\n        });\n    }\n\n    selectOrUnselectAllBatches(event: any) {\n        const label = event.srcElement.textContent;\n        this.batchesSelected = !this.batchesSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllBatches() {\n        this.isLoading = true;\n        let lastBatch = false;\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any, cpt: number) => {\n            if (cpt === checkboxList.length - 1)\n                lastBatch = true;\n            const batchId = element.id.split('_')[0];\n            this.deleteBatch(batchId, true, lastBatch);\n        });\n        this.notify.success(this.translate.instant('SPLITTER.all_batches_checked_deleted'));\n    }\n\n    deleteBatch(id: number, batchDelete = false, lastBatch = true): void {\n        this.http.put(environment['url'] + '/ws/splitter/status', {'id': id, 'status': 'DEL', }, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (!batchDelete) {\n                    this.notify.success(this.translate.instant('SPLITTER.batch_deleted'));\n                    this.isLoading = false;\n                }\n                if (lastBatch)\n                    this.loadBatches();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 1;\n        this.localStorageService.save('splitterPageIndex', this.pageIndex);\n    }\n\n    onTabChange(event: any) {\n        this.selectedTab = event.index;\n        this.localStorageService.save('splitterTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadBatches();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\" class=\"batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of this.batchList\" [id]=\"batch.id\" [disabled]=\"this.isLoading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"splitter-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <mat-form-field class=\"relative left-4 w-1/2\" appearance=\"outline\">\n                            <mat-label>{{ 'SPLITTER.search' | translate }}</mat-label>\n                            <input matInput type=\"text\" [(ngModel)]=\"this.searchText\" [disabled]=\"this.total === 0\">\n                        </mat-form-field>\n                        <div class=\"w-full flex justify-center m-auto\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\" [disabled]=\"this.isLoading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <i class=\"fa-solid fa-sync-alt m-4 cursor-pointer text-xl hover:text-green-400\" (click)=\"loadBatches()\"\n                                [matTooltip]=\"'SPLITTER.reload_batches' | translate\"></i>\n                        </div>\n                        <span [class.hidden]=\"this.isLoading || this.total === 0\" class=\"relative right-0\">\n                            <mat-paginator [length] = \"this.total\"\n                                           [pageSize]=\"this.pageSize\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\"\n                                           (page)=\"onPageChange($event)\">\n                            </mat-paginator>\n                        </span>\n                    </div>\n                    <div class=\"z-40 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.batches.length > 1 && !this.isLoading\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllBatches($event)\"\n                              [innerHTML]=\"batchesSelected ? translate.instant('VERIFIER.unselect_all') : translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.batchesSelected\">\n                            <i class=\"fa-solid fa-trash ml-5 text-red-500 cursor-pointer\"\n                               (click)=\"$event.stopPropagation(); deleteAllConfirmDialog()\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n                    <div *ngIf=\"this.isLoading\">\n                        <app-loader></app-loader>\n                    </div>\n                    <div class=\"content mx-10 mt-3\" *ngIf=\"!this.isLoading\">\n                        <div class=\"list grid 2xl:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-flow-row gap-12\">\n                            <span *ngIf=\"(this.batches | filter : 'fileName' : this.searchText).length === 0 && !this.isLoading\" class=\"text-gray-900\">{{ 'SPLITTER.no_batch_found' | translate }}</span>\n                            <mat-card class=\"batch-card cursor-pointer p-0 mb-0\" *ngFor=\"let batch of this.batches | filter : 'fileName' : this.searchText\">\n                                <label class=\"p-5 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ batch.id }}_checkbox\" type=\"checkbox\" (click)=\"checkSelectedBatch()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\">\n                                </label>\n                                <img [routerLink]=\"'/splitter/viewer/' + currentTime + '/' + batch['id']\" class=\"m-auto p-4\" mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter image\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                                 [routerLink]=\"'/splitter/viewer/' + currentTime + '/' + batch['id']\">\n                                    <mat-card-title class=\"break-all\">\n                                        <span class=\"w-1/3\">\n                                            {{ batch['fileName'] }}\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              matTooltip=\"{{ 'OUTPUT.documents_count' | translate }} : {{ batch['documentsCount'] }}\">\n                                            {{ batch['documentsCount'] }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                                        <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                                        <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                                        <strong>{{ 'SPLITTER.form_label' | translate }}</strong> : {{ batch['formLabel'] }}<br>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4\">\n                                    <i class=\"fa-solid fa-trash cursor-pointer text-red-500 pl-4\"\n                                       (click)=\"$event.stopPropagation();openConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography\">{{ 'GLOBAL.delete' | translate }}</span>\n                                    </i>\n                                    <i class=\"fa-solid fa-circle-info text-gray-400 relative float-right pl-4\"\n                                       matTooltip=\"{{ 'ACCOUNTS.customer_name' | translate }} : {{ batch['customerName'] }}\">\n                                    </i>\n                                    <i *ngIf=\"this.totalChecked >= 2 && isCheckboxChecked(batch['id'])\"\n                                       class=\"fa-solid fa-object-group cursor-pointer text-green-400 relative float-right\"\n                                       (click)=\"$event.stopPropagation();mergeAllConfirmDialog(batch['id'])\">\n                                        <span class=\"font-medium mat-typography float-left mr-3 relative bottom-1\">\n                                            {{ 'SPLITTER.merge' | translate }} {{ this.totalChecked }} {{ 'SPLITTER.batches' | translate }}\n                                        </span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, HostListener, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { environment } from  \"../../env\";\nimport { catchError, debounceTime, delay, filter, finalize, map, takeUntil, tap } from \"rxjs/operators\";\nimport { of, ReplaySubject, Subject } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { UserService } from \"../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DocumentTypeComponent } from \"../document-type/document-type.component\";\nimport { remove } from 'remove-accents';\nimport { HistoryService } from \"../../../services/history.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LocaleService } from \"../../../services/locale.service\";\nimport * as moment from \"moment\";\n\nexport interface Field {\n    id              : number\n    type            : string\n    label           : string\n    class           : string\n    required        : string\n    resultMask      : string\n    searchMask      : string\n    label_short     : string\n    metadata_key    : string\n    validationMask  : string\n    settings        : any\n}\n\n@Component({\n    selector: 'app-viewer',\n    templateUrl: './splitter-viewer.component.html',\n    styleUrls: ['./splitter-viewer.component.scss'],\n})\nexport class SplitterViewerComponent implements OnInit, OnDestroy {\n    @HostListener('window:beforeunload', ['$event'])\n    beforeunloadHandler($event: any) {\n        if (this.isDataEdited) {\n            $event.returnValue = true;\n        }\n    }\n\n    @ViewChild(`cdkStepper`) cdkDropList: CdkDragDrop<any> | undefined;\n\n    loading                     : boolean       = true;\n    showZoomPage                : boolean       = false;\n    isDataEdited                : boolean       = false;\n    batchesLoading              : boolean       = false;\n    saveInfosLoading            : boolean       = false;\n    documentsLoading            : boolean       = false;\n    addDocumentLoading          : boolean       = false;\n    batchMetadataOpenState      : boolean       = true;\n    documentMetadataOpenState   : boolean       = false;\n    batchForm                   : FormGroup     = new FormGroup({});\n    batches                     : any[]         = [];\n    forms                       : any[]         = [];\n    status                      : any[]         = [];\n    outputs                     : any[]         = [];\n    metadata                    : any[]         = [];\n    documents                   : any[]         = [];\n    movedPages                  : any[]         = [];\n    deletedPagesIds             : number[]      = [];\n    deletedDocumentsIds         : number[]      = [];\n    DropListDocumentsIds        : string[]      = [];\n    batchMetadataValues         : any           = {};\n    inputMode                   : string        = \"Manual\";\n    currentTime                 : string        = \"\";\n    toolSelectedOption          : string        = \"\";\n    timeLabels                  : any           = {\n        'today'     : marker('BATCH.today'),\n        'yesterday' : marker('BATCH.yesterday'),\n        'older'     : marker('BATCH.older'),\n    };\n    defaultDoctype              : any           = {\n        label       : null,\n        key         : null,\n    };\n    zoomPage                    : any           = {\n        thumbnail   : \"\",\n        rotation    : 0,\n    };\n    currentBatch                : any           = {\n        id                  : -1,\n        formId              : -1,\n        inputId             : -1,\n        pageIdInLoad        : -1,\n        previousFormId      : -1,\n        status              : '',\n        maxSplitIndex       : 0,\n        selectedPagesCount  : 0,\n        selectedDocument    : {\n            id              : '',\n            displayOrder    : -1,\n        },\n    };\n    fieldsCategories            : any           = {\n        'batch_metadata'    : [],\n        'document_metadata' : []\n    };\n\n    /** indicate search operation is in progress */\n    public searching        : boolean   = false;\n\n    /** list of banks filtered after simulating server side search */\n    public filteredServerSideMetadata: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\n\n    /** Subject that emits when the component has been destroyed. */\n    protected _onDestroy = new Subject<void>();\n\n    constructor(\n        private router: Router,\n        public dialog: MatDialog,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private _sanitizer: DomSanitizer,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public localeService: LocaleService,\n        private localStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.localStorageService.save('splitter_or_verifier', 'splitter');\n        this.userService.user   = this.userService.getUserFromLocal();\n        this.currentBatch.id    = this.route.snapshot.params['id'];\n        this.currentTime        = this.route.snapshot.params['currentTime'];\n        this.loadSelectedBatch();\n        this.translate.get('HISTORY-DESC.viewer_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n            this.historyService.addHistory('splitter', 'viewer', translated);\n        });\n    }\n\n    setValuesFromSavedMetadata(autocompletionValue: any): void {\n        for(const field of this.fieldsCategories['batch_metadata']) {\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field['label_short'])) {\n                const savedValue = this.currentBatch.customFieldsValues[field['label_short']];\n                if (autocompletionValue.hasOwnProperty(field['label_short'])\n                    && autocompletionValue[field['label_short']] !== savedValue) {\n                    this.batchMetadataValues[field['label_short']] = savedValue;\n                    this.batchForm.controls[field['label_short']].setValue(savedValue);\n                }\n            }\n        }\n    }\n\n    loadSelectedBatch(): void {\n        this.defaultDoctype = {};\n        this.documents      = [];\n        this.loadBatchById();\n    }\n\n    loadBatchById(): void {\n        this.loading = true;\n        this.http.get(environment['url'] + '/ws/splitter/batches/' + this.currentBatch.id  + '/user/'\n            + this.userService.user.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.currentBatch = {\n                    id                  : data.batches[0]['id'],\n                    formId              : data.batches[0]['form_id'],\n                    previousFormId      : data.batches[0]['form_id'],\n                    status              : data.batches[0]['status'],\n                    customFieldsValues  : data.batches[0]['data'].hasOwnProperty('custom_fields') ? data.batches[0]['data']['custom_fields'] : {},\n                    selectedPagesCount  : 0,\n                    maxSplitIndex       : 0,\n                    selectedDocument    : {\n                        id           : '',\n                        displayOrder : -1,\n                    }\n                };\n                this.loadForms();\n                this.loadBatches();\n                this.loadStatus();\n                this.loadFormFields();\n                this.loadDocuments();\n                this.loadDefaultDocType();\n                this.loadOutputsData();\n                this.loadReferentialOnView();\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getStatusLabel(statusId: string) {\n        const statusFound = this.status.find(status => status.id === statusId);\n        return statusFound ? statusFound.label : undefined;\n    }\n\n    loadStatus(): void {\n        this.http.get(environment['url'] + '/ws/status/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadOutputsData(): void {\n        this.loading = true;\n        this.outputs = [];\n        this.http.get(environment['url'] + '/ws/forms/getById/' + this.currentBatch.formId, {headers: this.authService.headers}).pipe(\n            tap((formData: any) => {\n                for(const outputsId of formData['outputs']) {\n                    this.http.get(environment['url'] + '/ws/outputs/getById/' + outputsId, {headers: this.authService.headers}).pipe(\n                        tap((outputsData: any) => {\n                            this.outputs.push(outputsData['output_label']);\n                        }),\n                        catchError((err: any) => {\n                            this.loading = false;\n                            this.notify.handleErrors(err);\n                            console.debug(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadBatches(): void {\n        this.batchesLoading = true;\n        this.batches        = [];\n        this.http.get(environment['url'] + '/ws/splitter/batches/user/' + this.userService.user.id\n            + '/paging/0/5/' + this.currentTime + '/' + this.currentBatch.status, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.batches.forEach((batch: any) =>\n                    this.batches.push({\n                        id             : batch['id'],\n                        inputId        : batch['input_id'],\n                        fileName       : batch['file_name'],\n                        formLabel      : batch['form_label'],\n                        date           : batch['batch_date'],\n                        customerName   : batch['customer_name'],\n                        documentsCount : batch['documents_count'],\n                        thumbnail      : this.sanitize(batch['thumbnail']),\n                    })\n                );\n                this.batchesLoading = false;\n            }),\n            catchError((err: any) => {\n                this.batchesLoading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadDocuments(): void {\n        this.documentsLoading = true;\n        this.http.get(environment['url'] + '/ws/splitter/documents/' + this.currentBatch.id, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (let documentIndex = 0; documentIndex < data['documents'].length; documentIndex++) {\n                    // -- Add documents metadata --\n                    this.documents[documentIndex] = {\n                        id                 : \"document-\" + data['documents'][documentIndex]['id'],\n                        documentTypeName   : data['documents'][documentIndex]['doctype_label'] ? data['documents'][documentIndex]['doctype_label'] : (this.defaultDoctype.label || \"\"),\n                        documentTypeKey    : data['documents'][documentIndex]['doctype_key'] ? data['documents'][documentIndex]['doctype_key'] : (this.defaultDoctype.label || \"\"),\n                        status             : data['documents'][documentIndex]['status'],\n                        splitIndex         : data['documents'][documentIndex]['split_index'],\n                        displayOrder       : data['documents'][documentIndex]['display_order'],\n                        pages              : [],\n                        class              : \"\",\n                        customFieldsValues : {},\n                    };\n                    // -- Get max split index, used when adding a new document --\n                    if (this.documents[documentIndex].splitIndex > this.currentBatch.maxSplitIndex) {\n                        this.currentBatch.maxSplitIndex = this.documents[documentIndex].splitIndex;\n                    }\n                    if (data['documents'][documentIndex]['data'].hasOwnProperty('custom_fields')) {\n                        this.documents[documentIndex].customFieldsValues = data['documents'][documentIndex]['data']['custom_fields'];\n                    }\n                    // -- Add document forms --\n                    this.documents[documentIndex].form = this.getFormForDocument(documentIndex);\n                    // -- Add documents pages --\n                    for (const page of data['documents'][documentIndex]['pages']) {\n                        this.documents[documentIndex].pages.push({\n                            id             : page['id'],\n                            sourcePage     : page['source_page'],\n                            thumbnail      : this.sanitize(page['thumbnail']),\n                            showZoomButton : false,\n                            checkBox       : false,\n                            rotation       : page['rotation'],\n                        });\n                    }\n                }\n                // -- Select first document --\n                this.selectDocument(this.documents[0]);\n                this.documentsLoading = false;\n            }),\n            catchError((err: any) => {\n                this.notify.handleErrors(err);\n                console.debug(err);\n                this.documentsLoading = false;\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateDocumentDisplayOrder() {\n        const updatedDocuments = [];\n        for (const document of this.documents) {\n            const currentDisplayOrder   = document.displayOrder;\n            const newDisplayOrder       = currentDisplayOrder + 1;\n            if (currentDisplayOrder > this.currentBatch.selectedDocument.displayOrder) {\n                document.displayOrder = newDisplayOrder;\n                updatedDocuments.push({\n                    'id': Number(document.id.split('-').pop()),\n                    'displayOrder': newDisplayOrder\n                });\n            }\n        }\n        return updatedDocuments;\n    }\n\n    sortDocumentsByDisplayOrder() {\n        this.documents.sort((a:any, b:any) => (a.displayOrder > b.displayOrder) ? 1 : -1);\n    }\n\n    createDocument() {\n        if (this.addDocumentLoading) { return; }\n        this.isDataEdited = true;\n        const documentDisplayOrder  = this.updateDocumentDisplayOrder();\n        this.addDocumentLoading = true;\n        this.http.post(environment['url'] + '/ws/splitter/addDocument',\n            {\n                'batchId'           : this.currentBatch.id,\n                'splitIndex'        : this.currentBatch.maxSplitIndex + 1,\n                'displayOrder'      : this.currentBatch.selectedDocument.displayOrder + 1,\n                'updatedDocuments'  : documentDisplayOrder,\n            },\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const newId = `document-${data.newDocumentId}`;\n                this.documents.push({\n                    id                 : newId,\n                    documentTypeName   : this.defaultDoctype.label,\n                    documentTypeKey    : this.defaultDoctype.key,\n                    splitIndex         : this.currentBatch.maxSplitIndex + 1,\n                    displayOrder       : this.currentBatch.selectedDocument.displayOrder + 1,\n                    status             : \"NEW\",\n                    pages              : [],\n                    customFieldsValues : {},\n                    class              : \"\",\n                });\n                this.documents[this.documents.length - 1].form = this.getFormForDocument(this.documents.length - 1);\n                this.sortDocumentsByDisplayOrder();\n                this.currentBatch.maxSplitIndex++;\n                this.addDocumentLoading = false;\n                this.notify.success(this.translate.instant('SPLITTER.document_added_with_success'));\n            }),\n            catchError((err: any) => {\n                this.addDocumentLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormForDocument(documentIndex: number) {\n        const newForm = new FormGroup({});\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const control = field.required ? new FormControl('', Validators.required) : new FormControl('');\n            const labelShort = field.label_short;\n            if (this.documents[documentIndex]['customFieldsValues'].hasOwnProperty(labelShort))\n                control.setValue(this.documents[documentIndex]['customFieldsValues'][labelShort]);\n            control.valueChanges.subscribe(value => {\n                this.documents[documentIndex]['customFieldsValues'][labelShort] = value;\n            });\n            newForm.addControl(labelShort, control);\n            if (field.metadata_key) { // used to control autocomplete search fields\n                const controlSearch = new FormControl('');\n                newForm.addControl(\"search_\" + labelShort, controlSearch);\n            }\n        }\n        return newForm;\n    }\n\n    getZoomPage(page: any) {\n        this.currentBatch.pageIdInLoad = page.id;\n        this.http.get(environment['url'] + '/ws/splitter/pages/' + (page.id).toString() + '/fullThumbnail', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.showZoomPage = true;\n                this.zoomPage = {\n                    pageId    : page.id,\n                    rotation  : page.rotation,\n                    thumbnail : this.sanitize(data['fullThumbnail']),\n                };\n                this.currentBatch.pageIdInLoad = -1;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.currentBatch.pageIdInLoad = -1;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    /* -- Metadata -- */\n    loadDefaultDocType() {\n        this.loading      = true;\n        this.http.get(environment['url'] + '/ws/doctypes/list/' + (this.currentBatch.formId).toString(), {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.doctypes.forEach((doctype: {\n                        id         : any\n                        key        : string\n                        type       : string\n                        label      : string\n                        is_default : boolean\n                    }) => {\n                        if (doctype.is_default && doctype.type === 'document') {\n                            this.defaultDoctype = {\n                                'id'        : doctype.id,\n                                'key'       : doctype.key,\n                                'label'     : doctype.label,\n                                'type'      : doctype.type,\n                                'isDefault' : doctype.is_default,\n                            };\n                        }\n                    }\n                );\n                this.loading = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.loading = false;\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getPlaceholderFromResultMask(mask: string, metadata: any) {\n        const maskVariables = mask ? mask.split('#') : [];\n        const result        = [];\n        for(const maskVariable of maskVariables!) {\n            result.push(metadata.hasOwnProperty(maskVariable) ? metadata[maskVariable] : maskVariable);\n        }\n        return result.join(' ');\n    }\n\n    getPlaceholderFromSearchMask(mask: string, label: string) {\n        return mask ? mask.replace('#label', label) : '';\n    }\n\n    changeInputMode($event: any) {\n        this.inputMode = $event.checked ? \"Auto\" : \"Manual\";\n        this.batchMetadataValues = {};\n        this.fillDataValues({});\n    }\n\n    fillDataValues(data: any): void {\n        this.isDataEdited = true;\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            if (key && this.batchForm.get(key)) {\n                this.batchForm.get(key)?.setValue(newValue);\n            }\n        }\n        for (const field of this.fieldsCategories['document_metadata']) {\n            const key = field['metadata_key'];\n            const newValue = data.hasOwnProperty(key) ? data[key] : '';\n            for (const document of this.documents) {\n                if (key && document.form.get(key)) {\n                    document.form.get(key)?.setValue(newValue);\n                }\n            }\n        }\n    }\n\n    loadReferentialOnView(): void {\n        this.http.get(environment['url'] + `/ws/splitter/metadataMethods/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.metadataMethods[0].callOnSplitterView) {\n                    this.loadReferential(false);\n                }\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadReferential(refreshAfterLoad: boolean): void {\n        this.metadata = [];\n        this.http.get(environment['url'] + `/ws/splitter/loadReferential/${this.currentBatch.formId}`, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.metadata.forEach((metadataItem: any) => {\n                    metadataItem.data['metadataId'] = metadataItem.id;\n                    this.metadata.push(metadataItem.data);\n                });\n\n                if (this.currentBatch.customFieldsValues.hasOwnProperty('metadataId')) {\n                    const autocompletionValue = this.metadata.filter(item => item.metadataId === this.currentBatch.customFieldsValues.metadataId);\n                    if (autocompletionValue.length > 0) {\n                        this.filteredServerSideMetadata.next(autocompletionValue);\n                        this.fillData((autocompletionValue[0]));\n                        this.setValuesFromSavedMetadata(autocompletionValue[0]);\n                    }\n                }\n                if (refreshAfterLoad) {\n                    this.loadSelectedBatch();\n                }\n                this.notify.success(this.translate.instant('SPLITTER.referential_updated'));\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setValueChange(key: string, value: string) {\n        this.isDataEdited = true;\n        this.batchMetadataValues[key] = value;\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    fillData(selectedMetadata: any) {\n        this.batchMetadataValues = selectedMetadata;\n        const optionId = this.batchMetadataValues['metadataId'];\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (field['metadata_key']) {\n                if (field.type === 'select' && selectedMetadata[field['metadata_key']]) {\n                    this.batchForm.get(field['metadata_key'])?.setValue(selectedMetadata[field['metadata_key']]);\n                }\n                else {\n                    this.batchForm.get(field['metadata_key'])?.setValue(optionId);\n                }\n            }\n        }\n    }\n\n    loadForms() {\n        this.forms = [];\n        this.http.get(environment['url'] + '/ws/forms/list?module=splitter', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.forms = forms.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onFormChange(newFormId: number): void {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('GLOBAL.confirm_form_change'),\n                confirmButton      : this.translate.instant('GLOBAL.confirm_modification'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.http.post(environment['url'] + '/ws/splitter/changeForm',\n                    {\n                        'batchId' : this.currentBatch.id,\n                        'formId'  : newFormId,\n                    },\n                    {headers: this.authService.headers}).pipe(\n                    tap(() => {\n                        this.notify.success(this.translate.instant('SPLITTER.barch_form_change_success'));\n                        this.translate.get('HISTORY-DESC.change_batch_form',\n                            {\n                                batch_id : this.currentBatch.id,\n                                form_id  : newFormId\n                            })\n                            .subscribe((translated: string) => {\n                            this.historyService.addHistory('splitter', 'viewer', translated);\n                        });\n                        this.loadSelectedBatch();\n                    }),\n                    catchError((err: any) => {\n                        this.loading = false;\n                        this.notify.handleErrors(err);\n                        console.debug(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            } else {\n                this.currentBatch.formId = this.currentBatch.previousFormId;\n            }\n        });\n    }\n\n    loadFormFields(): void {\n        this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.currentBatch.formId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                for (const fieldCategory in this.fieldsCategories) {\n                    this.fieldsCategories[fieldCategory] = [];\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            this.fieldsCategories[fieldCategory].push({\n                                'id'             : field.id,\n                                'type'           : field.type,\n                                'label'          : field.label,\n                                'class'          : field.class,\n                                'settings'       : field.settings,\n                                'required'       : field.required,\n                                'searchMask'     : field.searchMask,\n                                'resultMask'     : field.resultMask,\n                                'label_short'    : field.label_short,\n                                'metadata_key'   : field.metadata_key,\n                                'validationMask' : field.validationMask,\n                            });\n                            if (field.metadata_key && fieldCategory === 'batch_metadata') {\n                                this.inputMode = 'Auto';\n                            }\n                        });\n                    }\n                }\n                this.batchForm = this.toBatchFormGroup();\n\n                // listen for search field value changes\n                for (const fieldCategory in this.fieldsCategories) {\n                    if (data.fields.hasOwnProperty(fieldCategory)) {\n                        data.fields[fieldCategory].forEach((field: Field) => {\n                            if (field.metadata_key && this.batchForm.get('search_' + field.label_short)) {\n                                this.batchForm.get('search_' + field.label_short)?.valueChanges\n                                    .pipe(\n                                        filter((search: string) => !!search),\n                                        tap(() => {}),\n                                        takeUntil(this._onDestroy),\n                                        debounceTime(200),\n                                        map(search => {\n                                            if (!this.metadata || search.length < 3) {\n                                                return [];\n                                            }\n                                            this.searching = true;\n                                            return this.metadata.filter(\n                                                metadataItem => remove(metadataItem[field.label_short].toString())\n                                                    .toLowerCase()\n                                                    .indexOf(remove(search.toString().toLowerCase())) > -1\n                                            );\n                                        }),\n                                        delay(500)\n                                    )\n                                    .subscribe(filteredMetadata => {\n                                        this.filteredServerSideMetadata.next(filteredMetadata);\n                                        this.searching = false;\n                                    }, () => {\n                                        this.searching = false;\n                                    });\n                            }\n                        });\n                    }\n                }\n            }), finalize(() => this.loading = false),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormFieldsValues() {\n        for (const field of this.fieldsCategories['batch_metadata']) {\n            if (this.batchForm.get(field.label_short)) {\n                this.batchMetadataValues[field.label_short] = this.batchForm.get(field.label_short)?.value;\n                if (field.type === 'date') {\n                    this.batchMetadataValues[field.label_short] = moment(this.batchMetadataValues[field.label_short]).format('L');\n                }\n            }\n        }\n    }\n\n    toBatchFormGroup():FormGroup {\n        const group: any = {};\n        const format = moment().localeData().longDateFormat('L');\n        this.fieldsCategories['batch_metadata'].forEach((field: Field) => {\n            group[field.label_short] = field.required ?\n                new FormControl('', Validators.required) :\n                new FormControl('');\n            if (this.currentBatch.customFieldsValues.hasOwnProperty(field.label_short)) {\n                const value = field.type !== 'date' ? this.currentBatch.customFieldsValues[field.label_short] :\n                    moment(this.currentBatch.customFieldsValues[field.label_short], format);\n                group[field.label_short].setValue(value);\n            }\n            if (field.metadata_key)\n                group['search_' + field.label_short] = new FormControl('');\n        });\n        return new FormGroup(group);\n    }\n    /* -- End Metadata -- */\n\n    /* -- Begin documents control -- */\n    addDocumentIdToDropList(id: string): string {\n        if (!this.DropListDocumentsIds.includes(id))\n            this.DropListDocumentsIds.push(id);\n        return id;\n    }\n\n    sanitize(url: string): any {\n        return this._sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + url);\n    }\n\n    dropPage(event: CdkDragDrop<any[]>, document: any): void {\n        this.isDataEdited = true;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n            this.movedPages.push({\n                'pageId'        : event.container.data[event.currentIndex].id,\n                'newDocumentId' : Number(document['id'].split('-')[1]),\n                'isAddInNewDoc' : (document.status === 'USERADD')\n            });\n        }\n    }\n\n    dropDocument(event: CdkDragDrop<string[]>): void {\n        this.isDataEdited = true;\n        moveItemInArray(this.documents, event.previousIndex, event.currentIndex);\n        this.OrderDisplayDocumentValues();\n    }\n\n    OrderDisplayDocumentValues(): void {\n        let cpt = 1;\n        for(const document of this.documents) {\n            document.displayOrder = cpt;\n            cpt++;\n        }\n    }\n\n    openDocumentTypeDialog(document: any): void {\n        const dialogRef = this.dialog.open(DocumentTypeComponent, {\n            width   : '800px',\n            height  : '900px',\n            data    : {\n                selectedDocType: {\n                    key: document.documentTypeKey  ? document.documentTypeKey  : \"\",\n                },\n                formId: this.currentBatch.formId\n            }\n        });\n        dialogRef.afterClosed().subscribe((result: any) => {\n            if (result) {\n                document.documentTypeName = result.label;\n                document.documentTypeKey = result.key;\n                this.isDataEdited = true;\n            }\n        });\n    }\n\n    selectDocument(document: any): void {\n        this.currentBatch.selectedDocument = {'id': document.id, 'displayOrder': document.displayOrder};\n    }\n\n    deleteDocument(documentIndex: number): void {\n        const pagesCount = this.documents[documentIndex].pages.length;\n        const confirmMessage = pagesCount > 0 ?\n            this.translate.instant('SPLITTER.confirm_delete_document_not_empty', {\"pagesCount\": pagesCount}) :\n            this.translate.instant('SPLITTER.confirm_delete_document_empty');\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : confirmMessage,\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deletedDocumentsIds.push(this.documents[documentIndex].id);\n                this.documents = this.deleteItemFromList(this.documents, documentIndex);\n                this.isDataEdited = true;\n            }\n        });\n    }\n    /* End documents control */\n\n    /* Begin tools bar */\n    deleteItemFromList(list: any[], index: number): any[] {\n        delete list[index];\n        list = list.filter((x: any): x is any => x !== null);\n        return list;\n    }\n\n    countSelectedPages(): void {\n        let selectedPageCount = 0;\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                page.checkBox ? selectedPageCount++ : '';\n            }\n        }\n        this.currentBatch.selectedPagesCount = selectedPageCount;\n    }\n\n    deleteSelectedPages(): void {\n        if (this.currentBatch.selectedPagesCount === 0)\n            return;\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_delete_pages', {\"pagesCount\": this.currentBatch.selectedPagesCount}),\n                confirmButton      : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor : \"warn\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                for (const document of this.documents) {\n                    for (let pageIndex = 0; pageIndex < document.pages.length; pageIndex++) {\n                        if (document.pages[pageIndex].checkBox) {\n                            this.deletedPagesIds.push(document.pages[pageIndex].id);\n                            document.pages = this.deleteItemFromList(document.pages, pageIndex);\n                            pageIndex--;\n                        }\n                    }\n                }\n                this.isDataEdited = true;\n            }\n        });\n    }\n\n    setAllPagesTo(check: boolean): void {\n        let selectPagesCount = 0;\n        for (const document of this.documents) {\n            for (const page of document.pages) {\n                page.checkBox = check;\n                selectPagesCount++;\n            }\n        }\n        this.currentBatch.selectedPagesCount = check ? selectPagesCount : 0;\n    }\n\n    rotatePage(documentIndex: number, pageIndex: number): void {\n        const currentDegree = this.documents[documentIndex].pages[pageIndex].rotation;\n        this.isDataEdited = true;\n        switch(currentDegree) {\n            case -90: {\n                this.documents[documentIndex].pages[pageIndex].rotation = 0;\n                break;\n            }\n            case 180: {\n                this.documents[documentIndex].pages[pageIndex].rotation = -90;\n                break;\n            }\n            default: {\n                this.documents[documentIndex].pages[pageIndex].rotation += 90;\n                break;\n            }\n        }\n\n        if (this.zoomPage.pageId === this.documents[documentIndex].pages[pageIndex].id) {\n            this.zoomPage.rotation = this.documents[documentIndex].pages[pageIndex].rotation;\n        }\n    }\n\n    rotateSelectedPages(): void {\n        for (let documentIndex = 0; documentIndex < this.documents.length; documentIndex++) {\n            for (let pageIndex = 0; pageIndex < this.documents[documentIndex].pages.length; pageIndex++) {\n                if (this.documents[documentIndex].pages[pageIndex].checkBox) {\n                    this.rotatePage(documentIndex, pageIndex);\n                }\n            }\n        }\n    }\n\n    sendSelectedPages(): void {\n        const selectedDoc = this.documents.filter((doc: any) => doc.id === this.toolSelectedOption);\n        if (!selectedDoc) {\n            return;\n        }\n        const selectedDocIndex = this.documents.indexOf(selectedDoc[0]);\n        for (const document of this.documents) {\n            for (let i = document.pages.length - 1; i >= 0; i--) {\n                if (document.pages[i].checkBox) {\n                    const newPosition = this.documents[selectedDocIndex].pages.length;\n                    transferArrayItem(document.pages,\n                        this.documents[selectedDocIndex].pages, i,\n                        newPosition);\n                    this.movedPages.push({\n                        'pageId'        : this.documents[selectedDocIndex].pages[newPosition].id,\n                        'newDocumentId' : Number(this.documents[selectedDocIndex].id.split('-')[1]),\n                        'isAddInNewDoc' : (this.documents[selectedDocIndex].status === 'USERADD')\n                    });\n                }\n            }\n        }\n        this.isDataEdited = true;\n    }\n\n    changeBatch(id: number): void {\n        this.loading                            = true;\n        this.fieldsCategories['batch_metadata'] = [];\n        this.batchMetadataValues                = {};\n        this.fillDataValues({});\n        this.router.navigate(['splitter/viewer/' + this.currentTime + '/' + id]).then();\n        this.currentBatch.id = id;\n        this.loadSelectedBatch();\n        this.isDataEdited = false;\n    }\n\n    cancel(): void {\n        if (this.isDataEdited) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data:{\n                    confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                    confirmText        : this.translate.instant('SPLITTER.quit_without_saving_modifications'),\n                    confirmButton      : this.translate.instant('SPLITTER.quit_without_saving'),\n                    confirmButtonColor : \"warn\",\n                    cancelButton       : this.translate.instant('GLOBAL.cancel'),\n                },\n                width: \"600px\",\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.router.navigate([\"/splitter/list\"]).then();\n                }\n            });\n        }\n        else {\n            this.router.navigate([\"/splitter/list\"]).then();\n        }\n    }\n\n    validateWithConfirmation(): void {\n        if (!this.batchForm.valid && this.inputMode === \"Manual\") {\n            this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n            this.loading = false;\n            return;\n        }\n        if (this.inputMode === 'Auto' && !this.batchMetadataValues.metadataId && this.fieldsCategories['batch_metadata'].length !== 0) {\n            this.notify.error(this.translate.instant('SPLITTER.error_autocomplete_value'));\n            return;\n        }\n        for (const document of this.documents) {\n            if (!document.form.valid) {\n                this.notify.error(this.translate.instant('SPLITTER.error_empty_document_metadata'));\n                this.loading = false;\n                return;\n            }\n            if (!document.documentTypeKey) {\n                document.class = \"text-red-500\";\n                this.notify.error(this.translate.instant('SPLITTER.error_no_doc_type'));\n                this.loading = false;\n                return;\n            } else {\n                document.class = \"\";\n            }\n        }\n        this.getFormFieldsValues();\n        for(const field of this.fieldsCategories['batch_metadata']) {\n            if(field.validationMask) {\n                if(!this.batchMetadataValues[field.label_short].match(field.validationMask)) {\n                    this.notify.error(this.translate.instant('SPLITTER.field_form_not_respected', {'field': field.label}));\n                    this.loading = false;\n                    return;\n                }\n            }\n        }\n\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle       : this.translate.instant('GLOBAL.confirm'),\n                confirmText        : this.translate.instant('SPLITTER.confirm_validate'),\n                confirmButton      : this.translate.instant('SPLITTER.validate_batch'),\n                confirmButtonColor : \"green\",\n                cancelButton       : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.validate();\n            }\n        });\n    }\n\n    validate(): void {\n        this.loading = true;\n        this.notify.success(this.translate.instant('SPLITTER.batch_validate_processing'), 10000);\n        const batchMetadata             = this.batchMetadataValues;\n        batchMetadata['id']             = this.currentBatch.id;\n        batchMetadata['userName']       = this.userService.user['username'];\n        batchMetadata['userLastName']   = this.userService.user['lastname'];\n        batchMetadata['userFirstName']  = this.userService.user['firstname'];\n\n        // Build documents metadata arguments\n        const _documents: any[] = [];\n        for (const document of this.documents) {\n            const _document: any = {\n                id               : document['id'],\n                displayOrder     : document['displayOrder'],\n                documentTypeKey  : document['documentTypeKey'],\n                documentTypeName : document['documentTypeName'],\n                metadata         : document.form.getRawValue(),\n                pages            : []\n            };\n            for (const page of document.pages) {\n                _document.pages.push({\n                    id         : page['id'],\n                    rotation   : page['rotation'],\n                    sourcePage : page['sourcePage']\n                });\n            }\n            _documents.push(_document);\n        }\n        this.http.post(environment['url'] + '/ws/splitter/validate',\n            {\n                'documents'           : _documents,\n                'batchMetadata'       : batchMetadata,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n                'formId'              : this.currentBatch.formId,\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.router.navigate(['splitter/list']).then();\n                this.notify.success(this.translate.instant('SPLITTER.validate_batch_success'));\n                this.translate.get('HISTORY-DESC.validate_splitter', {batch_id: this.currentBatch.id}).subscribe((translated: string) => {\n                    this.historyService.addHistory('splitter', 'viewer', translated);\n                });\n                this.loading = true;\n            }),\n            catchError((err: any) => {\n                this.loading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveInfo(): void {\n        this.saveInfosLoading   = true;\n        this.getFormFieldsValues();\n\n        const _documents        = [];\n        for (const document of this.documents) {\n            const _document         = Object.assign({}, document);\n            _document['metadata']   = document.form.getRawValue();\n            delete _document.class;\n            delete _document.form;\n            _documents.push(_document);\n        }\n\n        this.http.post(environment['url'] + '/ws/splitter/saveInfo',\n            {\n                'documents'           : _documents,\n                'movedPages'          : this.movedPages,\n                'batchId'             : this.currentBatch.id,\n                'deletedPagesIds'     : this.deletedPagesIds,\n                'batchMetadata'       : this.batchMetadataValues,\n                'deletedDocumentsIds' : this.deletedDocumentsIds,\n            },\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.saveInfosLoading   = false;\n                this.isDataEdited       = false;\n                this.notify.success(this.translate.instant('SPLITTER.batch_modification_saved'));\n            }),\n            catchError((err: any) => {\n                this.saveInfosLoading = false;\n                this.notify.handleErrors(err);\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n    /* -- End tools bar -- */\n}\n","<div *ngIf=\"this.loading || this.documentsLoading || this.batchesLoading\">\n    <app-loader></app-loader>\n</div>\n<mat-drawer-container *ngIf=\"!this.loading\" class=\"w-full absolute top-16 bottom-0\" hasBackdrop=\"false\">\n    <mat-drawer #drawer mode=\"side\" opened class=\"w-1/5\">\n        <div class=\"mt-1\">\n            <div [ngSwitch]=\"currentTime\" class=\"mt-2 w-full h-10 grid place-content-center\">\n                <div class=\"text-base text-slate-400\">\n                    {{ timeLabels[currentTime] | translate }}, {{ getStatusLabel(currentBatch.status) }}\n                </div>\n            </div>\n            <span *ngIf=\"batches.length === 0\" class=\"text-slate-400 w-full grid place-content-center\">\n                {{ 'SPLITTER.no_batch_found' | translate }}\n            </span>\n            <div class=\"card\" *ngFor=\"let batch of this.batches | slice: 0 : 10\">\n                <mat-card class=\"mat-elevation-z4 my-2\" [ngClass]=\"{'border-4 border-green-400': this.currentBatch.id === batch.id}\">\n                    <a class=\"image-link\" (click)=\"changeBatch(batch['id'])\">\n                        <mat-card-header>\n                            <img mat-card-image [src]=\"batch['thumbnail']\" alt=\"Open-Capture Splitter image\">\n                        </mat-card-header>\n                    </a>\n                    <mat-card-content>\n                        <span matTooltip=\"{{ 'SPLITTER.document_number' | translate }} : {{ batch['documentsCount'] }}\"\n                              class=\"float-right text-green-400\">\n                            {{ batch['documentsCount'] }} <i class=\"far fa-file-alt\"></i>\n                        </span>\n                        <mat-card-subtitle class=\"mt-2 -mb-1 block overflow-hidden text-ellipsis w-11/12\">\n                            <span class=\"leading-7 flex\">\n                                {{ batch['fileName'] }}\n                            </span>\n                            <strong>{{ 'SPLITTER.identifier' | translate }}</strong> : {{ batch['id'] }}<br>\n                            <strong>{{ 'VERIFIER.register_date' | translate }}</strong> : {{ batch['date'] }}<br>\n                        </mat-card-subtitle>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </mat-drawer>\n    <mat-drawer-content class=\"flex flex-col items-start bg-white\">\n        <button class=\"btn-show-batches left-0 sticky min-h-full mt-0 top-0 left-0 w-2.5 min-w-0\"\n                mat-raised-button (click)=\"drawer.toggle()\">\n            <span>\n                <i *ngIf=\"drawer.opened\" class=\"fa-solid fa-angle-left\"></i>\n                <i *ngIf=\"!drawer.opened\" class=\"fa-solid fa-angle-right\"></i>\n            </span>\n        </button>\n        <div *ngIf=\"showZoomPage\" class=\"fixed z-10 w-4/12 h-5/6 grid justify-items-stretch right-0 top-20\">\n            <img class=\"justify-self-end border-2 zoom-image\"\n                 mat-card-image\n                 [src]=\"zoomPage.thumbnail\"\n                 (clickOutside)=\"showZoomPage = false\"\n                 [exclude]=\"'.btn-page-zoom, .btn-rotate'\"\n                 [ngClass]=\"\n                    (zoomPage['rotation'] === 0)   ? 'rotate-0 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === 90)  ? 'rotate-90 h-full w-4/5 mr-36':\n                    (zoomPage['rotation'] === 180) ? 'rotate-180 h-full w-4/5 mr-6':\n                    (zoomPage['rotation'] === -90) ? '-rotate-90 h-full w-4/5 mr-36':\n                    ''\"\n                 alt=\"Zoom Image\"/>\n        </div>\n        <div class=\"w-10/12 absolute top-0 mx-32\">\n            <mat-accordion class=\"block w-full h-52\">\n                <mat-expansion-panel class=\"my-10 bg-gray-20\" [expanded]=\"true\" (opened)=\"batchMetadataOpenState = true\"\n                                     (closed)=\"batchMetadataOpenState = false\" #batchMetadata>\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"grid grid-cols-3 gap-3\">\n                            <div class=\"grid grid-cols-2 gap-2\">\n                                <span>\n                                    {{ 'SPLITTER.batch_metadata' | translate }}\n                                </span>\n                                <div (click)=\"batchMetadata.toggle()\" class=\"mx-1\" *ngIf=\"fieldsCategories['batch_metadata'].length !== 0\">\n                                    <mat-slide-toggle [checked]=\"inputMode === 'Auto'\" (change)=\"changeInputMode($event);\">\n                                        {{ 'SPLITTER.auto_complete' | translate }}\n                                    </mat-slide-toggle>\n                                </div>\n                            </div>\n                            <div class=\"text-center\">\n                                <i class=\"fa-regular fa-rectangle-list\"></i>\n                                <mat-form-field id=\"form-select-field\" (click)=\"$event.stopPropagation()\" matTooltip=\"{{ 'SPLITTER.edit_used_form' | translate }}\">\n                                    <mat-select (selectionChange)=\"onFormChange($event.value)\" [(ngModel)]=\"currentBatch.formId\">\n                                        <mat-option [value]=\"form.id\" *ngFor=\"let form of this.forms;\">\n                                            {{ form.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"text-right text-gray-400\">\n                                <span class=\"mx-2\" matTooltip=\"{{ 'HEADER.status' | translate }}\">\n                                    <i class=\"fa-solid fa-flag\"></i>\n                                    {{ getStatusLabel(currentBatch.status) }}\n                                </span>\n                                <span>\n                                    <i class=\"fa-solid fa-pipe\"></i>\n                                    {{ 'SPLITTER.identifier' | translate }} : {{ currentBatch.id }}\n                                </span>\n                            </div>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"text-gray-400 text-center w-full\" *ngIf=\"fieldsCategories['batch_metadata'].length === 0\">\n                        <i class=\"block fa-solid fa-check fa-3x\"></i>\n                        <span class=\"block\">{{ 'SPLITTER.no_metadata_required' | translate }}</span>\n                    </div>\n                    <form [formGroup]=\"batchForm\"  class=\"flex flex-wrap mx-8\">\n                        <div *ngFor=\"let field of fieldsCategories['batch_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                            <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>\n                                        <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                    </mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\">\n                                        <mat-option *ngIf=\"field.metadata_key\">\n                                            <ngx-mat-select-search\n                                                    [formControlName]=\"'search_' + field.label_short\"\n                                                    placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                    [searching]=\"searching\"\n                                                    noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                            </ngx-mat-select-search>\n                                        </mat-option>\n                                        <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                    [value]=\"metadata.metadataId\"\n                                                    (click)=\"fillData(metadata)\">\n                                            <span *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                  [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                            </span>\n                                            <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                {{ metadata[field.label_short] }}\n                                            </span>\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <textarea matInput formControlName=\"{{ field.label_short }}\"\n                                          (ngModelChange)=\"setValueChange(field.label_short, $event)\"></textarea>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'text' && (!field.metadata_key || inputMode === 'Manual')\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <input matInput formControlName=\"{{ field.label_short }}\">\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"w-full\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-select [formControlName]=\"field.label_short\"\n                                                (selectionChange)=\"setValueChange(field.label_short, $event.value)\">\n                                        <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                            {{ option.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"w-full\" >\n                                    <input matInput [id]=\"field.id\" [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                    <mat-label>{{ field.label }}</mat-label>\n                                    <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #datePicker></mat-datepicker>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'checkbox'\" class=\"flex justify-center inline-block my-4\">\n                                <mat-checkbox formControlName=\"{{ field.label_short }}\">{{ field.label }}</mat-checkbox>\n                            </ng-container>\n                        </div>\n                    </form>\n                    <button mat-button (click)=\"loadReferential(true); $event.stopPropagation();\"\n                            class=\"float-right mb-2\"\n                            title=\"{{ 'SPLITTER.loadReferential' | translate }}\">\n                        <i class=\"fa-solid fa-sync fa-2x\"></i>\n                    </button>\n                </mat-expansion-panel>\n            </mat-accordion>\n            <span *ngIf=\"documents.length === 0\" class=\"block align-text-top text-center text-red-600\">{{ 'SPLITTER.no_document_to_show' | translate }}</span>\n            <div cdkDropList (cdkDropListDropped)=\"dropDocument($event)\">\n                <mat-card class=\"document w-full shadow-lg\"\n                          *ngFor=\"let document of documents; let documentIndex = index;\" (click)=\"selectDocument(document)\" cdkDrag>\n                    <div class=\"w-full h-40 border-dashed border-2 border-gray-400 bg-gray-200\" *cdkDragPlaceholder></div>\n                    <div class=\"drag-document absolute w-6 h-6 -left-1 -top-1 z-10 rounded-full text-gray-400 text-center\n                      align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                      \" matTooltip=\"{{ 'SPLITTER.change_document_position' | translate }}\" cdkDragHandle>\n                        <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                    </div>\n                    <div *cdkDragPreview class=\"drop-shadow-xl w-4/6 h-40 text-center text-gray-500 bg-slate-50 grid place-content-center\">\n                        <div class=\"absolute w-8 h-8 -left-1 -top-1 z-10 rounded-full text-center\n                              align-middle bg-slate-50 drop-shadow-xl hover:cursor-grabbing group-hover:text-gray-500\n                              grid place-content-center\" cdkDragHandle>\n                            <i class=\"fa-solid fa-arrows-up-down-left-right text-lg\"></i>\n                        </div>\n                        <i class=\"fa-solid fa-copy fa-3x\"></i>\n                        <span>{{ 'SPLITTER.drop_document_in_position' | translate }}</span>\n                    </div>\n                    <mat-card-title>\n                        <mat-accordion class=\"block mx-auto my-4\" style=\"width:98%;\">\n                            <mat-expansion-panel class=\"bg-gray-20\" [expanded]=\"fieldsCategories['document_metadata'].length !== 0\" (opened)=\"documentMetadataOpenState = true\"\n                                                 (closed)=\"documentMetadataOpenState = false\" #documentMetadata>\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title>\n                                        <button class=\"text-lg text-left hover:text-green-400 {{ document['class'] }}\"\n                                                [ngClass]=\"!document['documentTypeName'] ? 'text-red-500':''\"\n                                                (click)=\"documentMetadata.toggle(); openDocumentTypeDialog(document);\"\n                                                matTooltip=\"{{ 'GLOBAL.edit' | translate }}\">\n                                            <span class=\"w-full font-medium\">\n                                                <i class=\"fa-solid fa-edit\"></i>\n                                                <span *ngIf=\"!document['documentTypeName']\" class=\"mx-2\">{{ 'SPLITTER.no_selected_doctype' | translate }}</span>\n                                                {{ document['documentTypeName'] }}\n                                            </span>\n                                        </button>\n                                    </mat-panel-title>\n                                    <button mat-button class=\"right-2\" (click)=\"deleteDocument(documentIndex); $event.stopPropagation();\"\n                                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\">\n                                        <i class=\"fa-solid fa-trash-alt text-lg\"></i>\n                                    </button>\n                                </mat-expansion-panel-header>\n                                <div class=\"text-gray-400 w-full\">\n                                    <span class=\"m-6 w-11/12\">{{ 'SPLITTER.document_metadata' | translate }}</span>\n                                    <mat-divider class=\"mx-6\" style=\"width: 96%;\"></mat-divider>\n                                    <div *ngIf=\"fieldsCategories['document_metadata'].length === 0\">\n                                        <i class=\"text-center block fa-solid fa-check fa-3x\"></i>\n                                        <span class=\"block text-center\" >\n                                            {{ 'SPLITTER.no_metadata_required' | translate }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <form [formGroup]=\"document.form\" class=\"flex flex-wrap mx-6 mt-4\">\n                                    <div *ngFor=\"let field of fieldsCategories['document_metadata']\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                                        <ng-container *ngIf=\"field.type === 'text' && inputMode === 'Auto' && field.metadata_key\"\n                                             [ngClass]=\"field.class\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>\n                                                    <span [innerHTML]=\"getPlaceholderFromSearchMask(field.searchMask, field.label)\"></span>\n                                                </mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\" class=\"mat-search\">\n                                                    <mat-option *ngIf=\"field.metadata_key\">\n                                                        <ngx-mat-select-search\n                                                                [formControlName]=\"'search_' + field.label_short\"\n                                                                placeholderLabel=\"{{ 'SPLITTER.min_3_letter' | translate }}\"\n                                                                [searching]=\"searching\"\n                                                                noEntriesFoundLabel=\"{{ 'SPLITTER.no_result' | translate }}\">\n                                                        </ngx-mat-select-search>\n                                                    </mat-option>\n                                                    <mat-option *ngFor=\"let metadata of filteredServerSideMetadata | async\"\n                                                                [value]=\"metadata.metadataId\"\n                                                                (click)=\"fillData(metadata)\">\n                                                        <span *ngIf=\"metadata.metadataId !== batchMetadataValues.metadataId\"\n                                                              [innerHTML]=\"getPlaceholderFromResultMask(field.resultMask, metadata)\">\n                                                        </span>\n                                                        <span *ngIf=\"metadata.metadataId === batchMetadataValues.metadataId\">\n                                                            {{ metadata[field.label_short] }}\n                                                        </span>\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'textarea'\" [ngClass]=\"field.class\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <textarea matInput formControlName=\"{{ field.label_short }}\"\n                                                          (ngModelChange)=\"setValueChange(field.label_short, $event)\"></textarea>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'text' && (!field.metadata_key || inputMode === 'Manual')\"\n                                             [ngClass]=\"field.class\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <input matInput formControlName=\"{{ field.label_short }}\">\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'select'\" [ngClass]=\"field.class\">\n                                            <mat-form-field class=\"w-full\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-select [formControlName]=\"field.label_short\"\n                                                            (selectionChange)=\"setValueChange(field.label_short, $event.value)\">\n                                                    <mat-option *ngFor=\"let option of field.settings.options\" [value]=\"option.id\">\n                                                        {{ option.label }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'date'\">\n                                            <mat-form-field class=\"w-full\" >\n                                                <input matInput [id]=\"field.id\" [matDatepicker]=\"datePicker\" [formControlName]=\"field.label_short\">\n                                                <mat-label>{{ field.label }}</mat-label>\n                                                <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n                                                <mat-datepicker #datePicker></mat-datepicker>\n                                            </mat-form-field>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"field.type === 'checkbox'\" class=\"flex justify-center inline-block my-4\"\n                                             [ngClass]=\"field.class\">\n                                            <mat-checkbox formControlName=\"{{ field.label_short }}\">{{ field.label }}</mat-checkbox>\n                                        </ng-container>\n                                    </div>\n                                </form>\n                            </mat-expansion-panel>\n                        </mat-accordion>\n                    </mat-card-title>\n                    <mat-card-content class=\"document-content w-full\">\n                        <div cdkDropListOrientation=\"horizontal\" (click)=\"selectDocument(document)\"\n                             class=\"drop-list bg-white flex flex-row rounded w-full overflow-scroll h-104\"\n                             style=\"background-image: url('assets/imgs/dots.jpg');\"\n                             [ngClass]=\"currentBatch.selectedDocument.id === document.id ? 'border-2 border-green-400':\n                             'border-2 border-gray-200 hover:cursor-pointer'\"\n                             (cdkDropListDropped)=\"dropPage($event, document)\" cdkDropList\n                             id=\"{{ addDocumentIdToDropList(document['id']) }}\" [cdkDropListData]=\"document['pages']\"\n                             [cdkDropListConnectedTo]=\"DropListDocumentsIds\">\n                            <div class=\"page m-1.5 bg-gray-200 rounded-md overflow-hidden cursor-move w-60 p-1.5\"\n                                 *ngFor=\"let page of document['pages']; let pageIndex = index;\"\n                                 (click)=\"page['checkBox'] = !page['checkBox']; countSelectedPages();\" cdkDrag>\n                                <div class=\"bg-gray-200 m-1.5 border-dashed border-2 border-gray-400 w-60 p-3\" *cdkDragPlaceholder></div>\n                                <div class=\"flex justify-between\">\n                                    <mat-checkbox [(ngModel)]=\"page['checkBox']\"\n                                                  (click)=\"$event.stopPropagation();\"\n                                                  (change)=\"countSelectedPages();\"\n                                                  matTooltip=\"{{ 'SPLITTER.select' | translate }}\"\n                                                  class=\"page-check-box float-left mt-4\" id=\"page-check-box-{{ page['id'] }}\">\n                                    </mat-checkbox>\n                                    <button mat-button class=\"page-header-btn text-gray-400 mb-1 mt-0\"\n                                            (click)=\"rotatePage(documentIndex, pageIndex); $event.stopPropagation()\"\n                                            matTooltip=\"{{ 'SPLITTER.pageRotated' | translate }} {{ ' ' + page['rotation'] + ' ' + ('SPLITTER.degrees' | translate)}}\">\n                                        <span *ngIf=\"page['rotation'] !== 0\">\n                                            {{ page['rotation'] }}\n                                        </span>\n                                        <i class=\"fa-solid fa-rotate-right\"></i>\n                                    </button>\n                                    <button mat-button class=\"page-header-btn float-right bg-gray-100\"\n                                            matTooltip=\"{{ 'SPLITTER.zoom' | translate }}\"\n                                            (click)=\"getZoomPage(page); $event.stopPropagation();\">\n                                        <i *ngIf=\"page.id !== this.currentBatch.pageIdInLoad\" class=\"fa-solid fa-search-plus\"></i>\n                                        <i *ngIf=\"page.id === this.currentBatch.pageIdInLoad\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"></i>\n                                    </button>\n                                </div>\n                                <img [ngClass]=\"\n                                         (page['rotation'] === 0)   ? 'rotate-0 m-auto':\n                                         (page['rotation'] === 90)  ? 'rotate-90 m-auto scale-75 px-2':\n                                         (page['rotation'] === 180) ? 'rotate-180 m-auto':\n                                         (page['rotation'] === -90) ? '-rotate-90 m-auto scale-75 px-2':\n                                     ''\"\n                                     [src]=\"page['thumbnail']\"\n                                     title=\"{{ 'SPLITTER.moveToAnotherDoc' | translate }}\"\n                                     alt=\"Open-Capture Splitter image\"/>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <mat-card class=\"splitter-tools divide-x divide-green-500 border-gray-300 py-0 mb-8 z-10 sticky bottom-2.5\">\n                <mat-card-content style=\"overflow: auto;\" class=\"grid grid-rows-1 grid-cols-3\">\n                    <div class=\"absolute top-5 left-8 text-gray-500 bg-white px-2\"\n                         matTooltip=\"{{ currentBatch.selectedPagesCount }} {{ 'SPLITTER.selected_pages' | translate }}\">\n                        <span class=\"font-medium mx-1\">{{ currentBatch.selectedPagesCount }}</span>\n                        <i class=\"fa-solid fa-file\"></i>\n                    </div>\n                    <div class=\"border border-gray-600 rounded-lg flex col-span-2 my-4 overflow-x-auto overflow-y-hidden\">\n                        <div class=\"mt-2 -mb-1\">\n                            <button mat-button (click)=\"deleteSelectedPages()\"\n                                    class=\"btn-icon w-8 ml-4 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.delete_selected_pages' | translate }}\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\">\n                                <i class=\"fas fa-trash-alt text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(true)\" class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.select_all' | translate }}\">\n                                <i class=\"fas fa-check-circle text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"setAllPagesTo(false)\"\n                                    class=\"btn-icon border-r-2 border-black w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.unselect_all' | translate }}\">\n                                <i class=\"fas fa-ban text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"rotateSelectedPages()\"\n                                    [disabled]=\"currentBatch.selectedPagesCount === 0\"\n                                    class=\"btn-icon btn-rotate w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.rotatePage' | translate }}\">\n                                <i class=\"fas fa-rotate-right text-lg\"></i>\n                            </button>\n                            <button mat-button (click)=\"createDocument()\"\n                                    matTooltip=\"{{ 'SPLITTER.add_document' | translate }}\">\n                                <i class=\"fas fa-plus-circle fa-lg\" *ngIf=\"!addDocumentLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"addDocumentLoading\"></i>\n                            </button>\n                            <mat-form-field>\n                                <mat-label>{{ 'SPLITTER.send_to' | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"toolSelectedOption\">\n                                    <mat-option *ngFor=\"let document of this.documents;\" [value]=\"document['id']\">\n                                        {{ document['documentTypeName'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <button (click)=\"sendSelectedPages()\" mat-button class=\"btn-icon w-8 rounded-none\"\n                                    matTooltip=\"{{ 'SPLITTER.send' | translate }}\">\n                                <i class=\"fa fa-paper-plane text-lg\"></i>\n                            </button>\n                            <button (click)=\"saveInfo()\" mat-button class=\"w-8\"\n                                    matTooltip=\"{{ 'SPLITTER.save' | translate }}\" [ngClass]=\"{'text-green-400': isDataEdited}\">\n                                <i class=\"fa fa-save fa-lg\" *ngIf=\"!saveInfosLoading\"></i>\n                                <i class=\"fas fa-circle-notch fa-spin fa-lg my-4\" *ngIf=\"saveInfosLoading\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"grid grid-cols-2 gap-4 text-gray-900 relative mt-6\">\n                        <button mat-button (click)=\"cancel()\" type=\"submit\"\n                                class=\"p-6 ml-4 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                            {{ 'GLOBAL.quit' | translate }}\n                        </button>\n                        <button mat-button (click)=\"validateWithConfirmation()\" type=\"submit\"\n                                [disabled]=\"outputs.length === 0 || currentBatch.status !== 'NEW' || documents.length === 0\"\n                                class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                            <span >{{ 'FORMS.validate' | translate }}</span>\n                        </button>\n                        <div class=\"text-gray-400 -mt-2 col-start-2\">\n                            <span>{{ outputs.join(', ') }}</span>\n                            <span class=\"text-red-500\" *ngIf=\"this.outputs.length === 0\">{{ 'OUTPUT.no_output_configured' | translate }}</span>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-drawer-content>\n</mat-drawer-container>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan CHEVAL <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../env\";\nimport * as moment from \"moment/moment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\n\nexport class StatisticsComponent implements OnInit {\n    currentData         : any = [];\n    loading             : boolean = false;\n    options             : any = [\n        {\n            'id': 'verifier_documents_validated_per_user',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_user'),\n            'function': 'this.getUsersProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_validated_per_form',\n            'label': this.translate.instant('STATISTICS.verifier_documents_validated_per_form'),\n            'function': 'this.getFormsProcessDocument',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'verifier_documents_uploaded',\n            'label': this.translate.instant('STATISTICS.verifier_documents_uploaded'),\n            'function': 'this.getDocumentsUploadedVerifier',\n            'module': 'verifier',\n            'data': []\n        },\n        {\n            'id': 'splitter_documents_uploaded',\n            'label': this.translate.instant('STATISTICS.splitter_documents_uploaded'),\n            'function': 'this.getDocumentsUploadedSplitter',\n            'module': 'splitter',\n            'data': []\n        }\n    ];\n    diagramTypes        : any = [\n        {\n            'id': 'vertical-bar',\n            'label': marker('STATISTICS.diagram_vertical_bar'),\n            'logo': 'fa-chart-column'\n        },\n        {\n            'id': 'pie-chart',\n            'label': marker('STATISTICS.diagram_pie_chart'),\n            'logo': 'fa-chart-pie'\n        },\n        {\n            'id': 'pie-grid',\n            'label': marker('STATISTICS.diagram_pie_grid'),\n            'logo': 'fa-grip'\n        },\n\n    ];\n    selectedStatistic   : any;\n    selectedDiagramType : string = 'vertical-bar';\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n    ) {}\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n    }\n\n    getDocumentsUploadedVerifier(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=verifier&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getDocumentsUploadedSplitter(cpt: number) {\n        const currentYear = moment().format('Y');\n        this.http.get(environment['url'] + '/ws/history/list?module=splitter&submodule=upload_file&year=' + currentYear, {headers: this.authService.headers}).pipe(\n            tap((submodules: any) => {\n                const historyCpt: any = {};\n                moment.months().forEach((month: any) => {\n                    historyCpt[month] = 0;\n                });\n                submodules.history.forEach((_submodule: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    const value: any = moment(_submodule.date, format);\n                    const month = value.format('MMMM');\n                    historyCpt[month] += 1;\n                });\n                Object.keys(historyCpt).forEach((month: any) => {\n                    this.options[cpt].data.push({\n                        'name': month + ' ' + currentYear,\n                        'value': historyCpt[month]\n                    });\n                });\n                this.currentData = this.options[cpt].data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getFormsProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.forms.forEach((form: any) => {\n                    this.http.post(environment['url'] + '/ws/verifier/invoices/list',\n                        {'status': 'END', 'form_id': form.id}, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.options[cpt].data.push({\n                                'name': form.label + ' (' + form.module + ')',\n                                'value': data.total\n                            });\n                            this.currentData = this.options[cpt].data;\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getUsersProcessDocument(cpt: number) {\n        this.http.get(environment['url'] + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.http.get(environment['url'] + '/ws/history/list?submodule=document_validated', {headers: this.authService.headers}).pipe(\n                    tap((submodules: any) => {\n                        data.users.forEach((user: any) => {\n                            let historyCpt = 0;\n                            submodules.history.forEach((_submodule: any) => {\n                                if (user.id === _submodule.user_id) {\n                                    historyCpt += 1;\n                                }\n                            });\n                            this.options[cpt].data.push({\n                                'name': user.lastname + ' ' + user.firstname,\n                                'value': historyCpt\n                            });\n                            this.currentData = this.options[cpt].data;\n                        });\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    changeStatistic(event: any) {\n        if (event.value) {\n            this.options.forEach((option: any, cpt: number) => {\n                if (option.id === event.value) {\n                    this.selectedStatistic = option;\n                    if (option.data.length === 0) {\n                        this.currentData = [];\n                        this.loading = true;\n                        eval(option['function'] + '(' + cpt + ')');\n                    }\n                    else {\n                        this.currentData = option.data;\n                    }\n                }\n            });\n        }\n    }\n\n    changeDiagramType(event: any) {\n        if (event.value) {\n            this.diagramTypes.forEach((option: any) => {\n                if (option.id === event.value) {\n                    this.selectedDiagramType = option.id;\n                }\n            });\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header flex justify-center p-4 items-center bg-green-400 bg-opacity-60 text-gray-900\">\n            <h3 class=\"text-center flex m-0\">{{ this.serviceSettings.getTitle() }}</h3>\n        </div>\n        <hr class=\"border-green-400 relative z-30\">\n        <div class=\"flex justify-center\" style=\"height: calc(100% - 70px)\">\n            <div class=\"w-full h-1 absolute text-center mt-2 z-50\">\n                <mat-form-field class=\"w-1/4\">\n                    <mat-select (selectionChange)=\"changeStatistic($event)\"\n                                [disabled]=\"this.loading\"\n                                [placeholder]=\"'STATISTICS.choose_statistic_report' | translate\">\n                        <mat-option *ngFor=\"let option of options\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }}\n                            <span style=\"font-size: 12px;\" class=\"text-green-400 ml-1 mt-2\">\n                               {{ option['module'] }}\n                            </span>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"ml-4 w-1/4\">\n                    <mat-select [disabled]=\"!this.selectedStatistic || this.loading\"\n                                [ngModel]=\"this.selectedDiagramType\" (selectionChange)=\"changeDiagramType($event)\"\n                                [placeholder]=\"'STATISTICS.choose_diagram' | translate\">\n                        <mat-option *ngFor=\"let option of diagramTypes\" [value]=\"option['id']\">\n                            {{ option['label'] | translate }} <i class=\"fa-solid {{ option['logo'] }} ml-2\"></i>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"relative mt-20 w-full\" *ngIf=\"!loading && this.selectedStatistic\">\n                <ngx-charts-bar-vertical *ngIf=\"this.selectedDiagramType === 'vertical-bar'\"\n                        [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"true\" [showYAxisLabel]=\"true\"\n                        [showXAxisLabel]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-bar-vertical>\n                <ngx-charts-pie-chart *ngIf=\"this.selectedDiagramType === 'pie-chart'\" [results]=\"currentData\"\n                                      [labels]=\"true\" [legendTitle]=\"this.selectedStatistic.label | translate\">\n                </ngx-charts-pie-chart>\n                <ngx-charts-pie-grid *ngIf=\"this.selectedDiagramType === 'pie-grid'\" [results]=\"currentData\"></ngx-charts-pie-grid>\n                <ngx-charts-line-chart *ngIf=\"this.selectedDiagramType === 'line-charts'\" [showXAxisLabel]=\"true\"\n                        [showYAxisLabel]=\"true\" [results]=\"currentData\" [xAxis]=\"true\" [yAxis]=\"true\" [legend]=\"false\">\n                </ngx-charts-line-chart>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture.\n\nOpen-Capture is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormControl } from \"@angular/forms\";\nimport { FileValidators } from \"ngx-file-drag-drop\";\nimport { environment } from  \"../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../services/notifications/notifications.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { HistoryService } from \"../../services/history.service\";\n\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class UploadComponent implements OnInit {\n    headers                  : HttpHeaders   = this.authService.headers;\n    selectedInput            : any           = '';\n    selectedInputTechnicalId : any           = '';\n    inputs                   : any[]         = [];\n    loading                  : boolean       = true;\n    sending                  : boolean       = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public localStorageService: LocalStorageService\n    ) {\n    }\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    ngOnInit(): void {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        this.http.get(environment['url'] + '/ws/inputs/list?module=' + splitterOrVerifier,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.inputs = data.inputs;\n                if (this.inputs.length === 1) {\n                    this.selectedInput = data.inputs[0].id;\n                    this.selectedInputTechnicalId = data.inputs[0].input_id;\n                }\n             }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized',\n                        {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    setInput(inputId: any) {\n        this.inputs.forEach((element: any) => {\n            if (element.id === inputId) {\n                this.selectedInputTechnicalId = element.input_id;\n            }\n        });\n        this.selectedInput = inputId;\n    }\n\n    uploadInvoice(): void {\n        this.sending = true;\n        const formData: FormData = new FormData();\n\n        if (this.fileControl.value!.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value!.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value![i]['name'], this.fileControl.value![i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier !== undefined || splitterOrVerifier !== '') {\n            this.http.post(\n                environment['url'] + '/ws/' + splitterOrVerifier + '/upload?inputId=' + this.selectedInputTechnicalId,\n                formData,\n                {\n                    headers: this.authService.headers\n                },\n            ).pipe(\n                tap(() => {\n                    this.fileControl.setValue([]);\n                    this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                    this.sending = false;\n                    this.historyService.addHistory(splitterOrVerifier, 'upload_file', this.translate.instant('HISTORY-DESC.file_uploaded', {input: this.selectedInputTechnicalId}));\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n            return;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/7 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\">\n            {{ \"ACCOUNTS.choose_input_upload\" | translate }}\n        </h3>\n        <mat-divider></mat-divider>\n        <mat-list>\n            <mat-list-item *ngFor=\"let input of inputs\" class=\"cursor-pointer m-2 w-auto\" (click)=\"setInput(input.id)\">\n                <span [class.text-green-400]=\"this.selectedInput === input.id\" class=\"hover:text-green-400\">\n                    {{ input.input_label }}\n                </span>\n                <span *ngIf=\"this.selectedInput === input.id\">\n                    <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\" class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <div *ngIf=\"this.loading\">\n            <app-loader></app-loader>\n        </div>\n        <ngx-file-drag-drop\n                [class.pointer-events-none]=\"this.sending\"\n                [class.disabled]=\"this.sending\"\n                [formControl]=\"fileControl\"\n                [activeBorderColor]=\"'#97BF3D'\"\n                [multiple]=\"true\"\n                [accept]=\"'pdf'\"\n                [displayFileSize]=\"true\"\n                [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n                [class]=\"'max-w-3xl h-56 mt-24 mb-5'\"\n                (valueChanged)=\"checkFile($event)\">\n        </ngx-file-drag-drop>\n        <div class=\"text-center\"\n             [class.cursor-not-allowed]=\"!(!this.sending && this.selectedInput && this.fileControl.value!.length !== 0)\">\n            <button mat-button\n                    [disabled]=\"this.sending || this.selectedInput === '' || this.fileControl.value!.length === 0\" (click)=\"uploadInvoice()\"\n                    [class.hover:bg-transparent]=\"!this.sending && this.selectedInput && this.fileControl.value!.length !== 0\"\n                    [class.bg-opacity-100]=\"!this.sending && this.selectedInput && this.fileControl.value!.length !== 0\"\n                    [class.bg-opacity-40]=\"!(!this.sending && this.selectedInput && this.fileControl.value!.length !== 0)\"\n                    [class.text-white]=\"!this.sending && this.selectedInput && this.fileControl.value!.length !== 0\"\n                    [class.hover:text-gray-900]=\"!this.sending && this.selectedInput && this.fileControl.value!.length !== 0\"\n                    class=\"p-6 border-solid border-green-400 border bg-green-400 text-sm font-medium transition duration-300\">\n                {{ 'UPLOAD.upload_file' | translate }}\n            </button>\n        </div>\n        <span *ngIf=\"this.selectedInput === ''\" class=\"flex justify-center mt-4 text-red-500\">\n            {{ 'UPLOAD.please_select_input' | translate }}\n        </span>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { environment } from  \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { FlatTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeFlatDataSource, MatTreeFlattener } from \"@angular/material/tree\";\nimport { UserService } from \"../../../services/user.service\";\nimport { ConfirmDialogComponent } from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ConfigService } from \"../../../services/config.service\";\nimport { HistoryService } from \"../../../services/history.service\";\nimport { FormControl } from \"@angular/forms\";\n\ninterface AccountsNode {\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    purchase_or_sale: any\n    count: number\n    display: boolean\n    children: any\n}\n\ninterface FlatNode {\n    expandable: boolean\n    name: string\n    id: number\n    parent_id: any\n    supplier_id: any\n    purchase_or_sale: any\n    display: boolean\n    count: number\n    level: number\n    children: any\n}\n\n@Component({\n    selector: 'app-verifier-list',\n    templateUrl: './verifier-list.component.html',\n    styleUrls: ['./verifier-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\nexport class VerifierListComponent implements OnInit {\n    loading                 : boolean           = true;\n    loadingCustomers        : boolean           = true;\n    status                  : any[]             = [];\n    forms                   : any[]             = [\n        {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n        {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n    ];\n    filteredForms           : any[]             = [];\n    config                  : any;\n    currentForm             : any               = '';\n    currentStatus           : string            = 'NEW';\n    currentTime             : string            = 'today';\n    batchList               : any[]             = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today'),\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday'),\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older'),\n        }\n    ];\n    pageSize                : number            = 16;\n    pageIndex               : number            = 0;\n    pageSizeOptions         : any []            = [4, 8, 12, 16, 24, 48];\n    total                   : number            = 0;\n    totals                  : any               = {};\n    offset                  : number            = 0;\n    selectedTab             : number            = 0;\n    invoices                : any []            = [];\n    allowedCustomers        : any []            = [];\n    allowedSuppliers        : any []            = [];\n    purchaseOrSale          : string            = '';\n    search                  : string            = '';\n    TREE_DATA               : AccountsNode[]    = [];\n    expanded                : boolean           = false;\n    invoiceToDeleteSelected : boolean           = false;\n    totalChecked            : number            = 0;\n    customerFilterEmpty     : boolean           = false;\n    customerFilter                              = new FormControl('');\n\n    private _transformer = (node: AccountsNode, level: number) => ({\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        supplier_id: node.supplier_id,\n        id: node.id,\n        parent_id: node.parent_id,\n        purchase_or_sale: node.purchase_or_sale,\n        display: node.display,\n        count: node.count,\n        level: level,\n        children: node.children\n    });\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private historyService: HistoryService,\n        private routerExtService: LastUrlService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n    isLevelOne = (_: number, node: FlatNode) => node.level === 1;\n    isLevelTwo = (_: number, node: FlatNode) => node.level === 2;\n    isNotLevelOne = (_: number, node: FlatNode) => node.level !== 1;\n\n    async ngOnInit() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n\n        if (!this.userService.user) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n\n        marker('VERIFIER.nb_pages'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.expand_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.collapse_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.select_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.unselect_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.documents_settings'); // Needed to get the translation in the JSON file\n        this.localStorageService.save('splitter_or_verifier', 'verifier');\n        this.removeLockByUserId(this.userService.user.username);\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('verifier/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.localStorageService.get('invoicesPageIndex'))\n                this.pageIndex = parseInt(this.localStorageService.get('invoicesPageIndex') as string);\n            if (this.localStorageService.get('invoicesTimeIndex')) {\n                this.selectedTab = parseInt(this.localStorageService.get('invoicesTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localStorageService.remove('invoicesPageIndex');\n            this.localStorageService.remove('invoicesTimeIndex');\n        }\n\n        this.http.get(environment['url'] + '/ws/status/list?module=verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        setTimeout(() => {\n            this.loadForms();\n            this.loadCustomers();\n        }, 100);\n    }\n\n    loadForms() {\n        this.http.get(environment['url'] + '/ws/forms/list?module=verifier&totals=true&status=' + this.currentStatus + '&user_id=' + this.userService.user.id + '&time=' + this.currentTime, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.filteredForms = [];\n                this.forms = [\n                    {'id' : '', \"label\": this.translate.instant('VERIFIER.all_forms')},\n                    {'id' : 'no_form', \"label\": this.translate.instant('VERIFIER.no_form')}\n                ];\n                data.forms.forEach((form: any) => {\n                    this.forms.push(form);\n                    this.filteredForms.push(form);\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    removeLockByUserId(userId: any) {\n        this.http.put(environment['url'] + '/ws/verifier/invoices/removeLockByUserId/' + userId, {}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.TREE_DATA = [];\n        this.http.get(environment['url'] + '/ws/accounts/customers/list/verifier', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const customers = data.customers;\n                this.TREE_DATA.push({\n                    name: this.translate.instant('ACCOUNTS.customer_not_specified'),\n                    id: 0,\n                    parent_id: '',\n                    supplier_id: '',\n                    purchase_or_sale: '',\n                    display: true,\n                    count: 0,\n                    children: [],\n                });\n                this.allowedCustomers.push(0); // 0 is used if for some reasons no customer was recover by OC process\n                this.http.get(environment['url'] + '/ws/users/getCustomersByUserId/' + this.userService.user.id, {headers: this.authService.headers}).pipe(\n                    tap((data_customers_by_id: any) => {\n                        customers.forEach((customer: any) => {\n                            data_customers_by_id.forEach((customer_id: any) => {\n                                if (customer_id === customer.id) {\n                                    this.allowedCustomers.push(customer.id);\n                                    this.TREE_DATA.push({\n                                        name: customer.name,\n                                        id: customer.id,\n                                        parent_id: '',\n                                        supplier_id: '',\n                                        purchase_or_sale: '',\n                                        display: true,\n                                        count: 0,\n                                        children: [],\n                                    });\n                                }\n                            });\n                        });\n                        this.loadInvoices().then();\n                    }),\n                    finalize(() => this.loadingCustomers = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async loadInvoices(loading = true) {\n        this.invoiceToDeleteSelected = false;\n        this.totalChecked = 0;\n        if (loading) {\n            this.invoices = [];\n            this.loading = true;\n        }\n        this.loadingCustomers = true;\n        this.loadForms();\n        let url = environment['url'] + '/ws/verifier/invoices/totals/' + this.currentStatus + '/' + this.userService.user.id;\n        if (this.currentForm !== '') {\n            url = environment['url'] + '/ws/verifier/invoices/totals/' + this.currentStatus + '/' + this.userService.user.id + '/' + this.currentForm;\n        }\n        this.http.get(url, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.totals = data.totals;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.post(environment['url'] + '/ws/verifier/invoices/list',\n            {\n                'allowedCustomers': this.allowedCustomers, 'status': this.currentStatus, 'limit': this.pageSize,\n                'allowedSuppliers': this.allowedSuppliers, 'form_id': this.currentForm, 'time': this.currentTime,\n                'offset': this.offset, 'search': this.search, 'purchaseOrSale': this.purchaseOrSale\n            },\n            {headers: this.authService.headers}\n        ).pipe(\n            tap((data: any) => {\n                if (data) {\n                    if (data.invoices.length !== 0) this.total = data.total;\n                    else if (this.pageIndex !== 0) {\n                        this.pageIndex = this.pageIndex - 1;\n                        this.offset = this.pageSize * (this.pageIndex);\n                        this.loadInvoices();\n                    }\n                    this.invoices = data.invoices;\n                    this.invoices.forEach((invoice: any) => {\n                        if (!invoice.thumb.includes('data:image/jpeg;base64')) {\n                            invoice.thumb = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + invoice.thumb);\n                        }\n                        if (invoice.form_label === null || invoice.form_label === '' || invoice.form_label === undefined) {\n                            invoice.form_label = this.translate.instant('VERIFIER.no_form');\n                        }\n                        if (!invoice.form_id) {\n                            invoice.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"ACCOUNTS.form\"}\n                                ]\n                            };\n                        } else {\n                            this.forms.forEach((form: any) =>  {\n                                if (form.id === invoice.form_id) {\n                                    if (form.settings.display) {\n                                        invoice.display = form.settings.display;\n                                    }\n                                }\n                            });\n                        }\n\n                        if (!invoice.display) {\n                            invoice.display = {\n                                \"subtitles\": [\n                                    {\"id\": \"invoice_number\", \"label\": \"FACTURATION.invoice_number\"},\n                                    {\"id\": \"document_date\", \"label\": \"FACTURATION.document_date\"},\n                                    {\"id\": \"date\", \"label\": \"VERIFIER.register_date\"},\n                                    {\"id\": \"original_filename\", \"label\": \"VERIFIER.original_file\"},\n                                    {\"id\": \"form_label\", \"label\": \"VERIFIER.form\"}\n                                ]\n                            };\n                        }\n\n                        const invoice_display_tmp = invoice.display.subtitles;\n                        invoice.display = {'subtitles': []};\n                        invoice_display_tmp.forEach((subtitle: any) => {\n                            let subtitle_data = '';\n                            if (invoice.datas.hasOwnProperty(subtitle.id)) {\n                                subtitle_data = invoice.datas[subtitle.id];\n                            } else if (invoice.hasOwnProperty(subtitle.id)) {\n                                subtitle_data = invoice[subtitle.id];\n                            }\n\n                            invoice.display.subtitles.push({\n                                'id': subtitle.id,\n                                'label': subtitle.label,\n                                'data': subtitle_data\n                            });\n                        });\n                    });\n                }\n\n                /*\n                * Starting from here, we fill the customers tree\n                */\n                const customersPurchaseToKeep : any = [];\n                const customersSaleToKeep : any = [];\n                this.allowedCustomers.forEach((customer: any) => {\n                    this.invoices.forEach((invoice:any) => {\n                        if (invoice.purchase_or_sale === 'purchase' && !customersPurchaseToKeep.includes(customer)) {\n                            customersPurchaseToKeep.push(customer);\n                        }\n                        if (invoice.purchase_or_sale === 'sale' && !customersSaleToKeep.includes(customer)) {\n                            customersSaleToKeep.push(customer);\n                        }\n                    });\n                });\n\n                /*\n                * RESET the TREE DATA before re populate it\n                */\n                this.TREE_DATA.forEach((_data: any, index: number) => {\n                    this.TREE_DATA[index].display = true;\n                    this.TREE_DATA[index].count = 0;\n                    this.TREE_DATA[index].children = [];\n                });\n\n                this.TREE_DATA.forEach((_data: any, index: number) => {\n                    customersSaleToKeep.forEach((customer1: any) => {\n                        if (_data.id === customer1) {\n                            let childExists = false;\n                            this.TREE_DATA[index].children.forEach((child: any) => {\n                                if (child.id === 0) {\n                                    childExists = true;\n                                }\n                            });\n                            if (!childExists) {\n                                this.TREE_DATA[index].children.push(\n                                    {name: this.translate.instant('UPLOAD.sale_invoice'), id: 0, display: true, count: 0, children: []},\n                                );\n                                this.createChildren('sale', 0, index);\n                            }\n                        }\n                    });\n                    customersPurchaseToKeep.forEach((customer2: any) => {\n                        if (_data.id === customer2) {\n                            if (this.TREE_DATA[index]) {\n                                let childExists = false;\n                                this.TREE_DATA[index].children.forEach((child: any) => {\n                                    if (child.id === 1) {\n                                        childExists = true;\n                                    }\n                                });\n                                if (!childExists) {\n                                    this.TREE_DATA[index].children.push(\n                                        {name: this.translate.instant('UPLOAD.purchase_invoice'), id: 1, display: true, count: 0, children: []},\n                                    );\n                                    this.createChildren('purchase', 1, index);\n                                }\n                            }\n                        }\n                    });\n                });\n                this.dataSource.data = this.TREE_DATA;\n                this.filterCustomers();\n            }),\n            finalize(() => {\n                this.loading = false;\n                this.loadingCustomers = false;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    fillChildren(parentId: any, parent: any, childName: any, supplierName: any, supplierId: any, id: any, purchaseOrSale: any) {\n        let childNameExists = false;\n        parent.forEach((child: any) => {\n            if (child.name === childName) {\n                childNameExists = true;\n                child.count = child.count + 1;\n            }\n        });\n\n        if (!childNameExists) {\n            parent.push({\n                name: supplierName,\n                supplier_id: supplierId,\n                id: id,\n                parent_id: parentId,\n                purchase_or_sale: purchaseOrSale,\n                count: 1,\n                display: true\n            });\n        }\n    }\n\n    resetSearchCustomer() {\n        this.customerFilter.setValue('');\n        this.filterCustomers();\n    }\n\n    filterCustomers() {\n        const tmpData = this.dataSource.data;\n        this.customerFilterEmpty = false;\n        let customerMatch = false;\n        tmpData.forEach((element: any) => {\n            if (element.name.toLowerCase().includes(this.customerFilter.value!.toLowerCase())) {\n                element.display = true;\n                customerMatch = true;\n            } else {\n                element.display = false;\n            }\n        });\n        if (!customerMatch) this.customerFilterEmpty = true;\n        this.dataSource.data = tmpData;\n    }\n\n    changeCustomer(customerId: number, invoiceId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + invoiceId + '/update',\n            {'args': {\"customer_id\": customerId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetInvoices();\n                    this.notify.success(this.translate.instant('VERIFIER.customer_changed_successfully'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    changeInvoiceForm(formId: number, invoiceId: number) {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + invoiceId + '/update',\n            {'args': {\"form_id\": formId}},\n            {headers: this.authService.headers}).pipe(\n                finalize(() => {\n                    this.resetInvoices();\n                    this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    createChildren(purchaseOrSale: any, id: any, index: any) {\n        this.TREE_DATA[index].children.forEach((child: any) => {\n            if (child.id === id) {\n                this.invoices.forEach((invoice: any) => {\n                    if (this.TREE_DATA[index].id === invoice.customer_id && invoice.purchase_or_sale === purchaseOrSale) {\n                        if (invoice.supplier_id) {\n                            this.fillChildren(this.TREE_DATA[index].id, child.children, invoice.supplier_name, invoice.supplier_name, invoice.supplier_id, invoice.invoice_id, purchaseOrSale);\n                        } else {\n                            this.fillChildren(this.TREE_DATA[index].id, child.children, invoice.supplier_name, this.translate.instant('ACCOUNTS.supplier_unknow'), invoice.supplier_id, invoice.invoice_id, purchaseOrSale);\n                        }\n                        child.count = child.count + 1;\n                        this.TREE_DATA[index].count = this.TREE_DATA[index].count + 1;\n                    }\n                });\n            }\n        });\n    }\n\n    loadInvoicePerCustomer(node: any) {\n        const parentId = node.parent_id;\n        const supplierId = node.supplier_id;\n        const purchaseOrSale = node.purchase_or_sale;\n        this.TREE_DATA.forEach((element: any) => {\n            if (element.id === parentId) {\n                const customerId = element.id;\n                this.allowedCustomers = [customerId];\n                this.allowedSuppliers = [supplierId];\n                this.purchaseOrSale = purchaseOrSale;\n                this.resetPaginator();\n                this.loadInvoices();\n            }\n        });\n    }\n\n    resetInvoices() {\n        this.loading = true;\n        this.loadingCustomers = true;\n        this.allowedCustomers = [];\n        this.allowedSuppliers = [];\n        this.purchaseOrSale = '';\n        this.search = '';\n        this.currentForm = '';\n        this.resetPaginator();\n        this.loadCustomers();\n    }\n\n    selectOrUnselectAllInvoices(event: any) {\n        const label = event.srcElement.textContent;\n        this.invoiceToDeleteSelected = !this.invoiceToDeleteSelected;\n        const checkboxList = document.getElementsByClassName('checkBox_list');\n        Array.from(checkboxList).forEach((element: any) => {\n            element.checked = (label === this.translate.instant('VERIFIER.select_all'));\n        });\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n    }\n\n    deleteAllInvoices() {\n        this.loading = true;\n        this.loadingCustomers = true;\n        const checkboxList = document.querySelectorAll('.checkBox_list:checked');\n        Array.from(checkboxList).forEach((element: any) => {\n            const invoiceId = element.id.split('_')[0];\n            this.deleteInvoice(invoiceId, true);\n        });\n        this.notify.success(this.translate.instant('VERIFIER.all_documents_checked_deleted'));\n        this.loadCustomers();\n    }\n\n    deleteInvoice(invoiceId: number, batchDelete = false) {\n        this.http.delete(environment['url'] + '/ws/verifier/invoices/delete/' + invoiceId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (!batchDelete) {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('VERIFIER.documents_deleted'));\n                }\n                this.historyService.addHistory('verifier', 'delete_document', this.translate.instant('HISTORY-DESC.delete_document', {document_id: invoiceId}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkCheckedInvoices() {\n        this.totalChecked = document.querySelectorAll('.checkBox_list:checked').length;\n        this.invoiceToDeleteSelected = this.totalChecked !== 0;\n    }\n\n    deleteConfirmDialog(invoiceId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_document'),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loading = true;\n                this.loadingCustomers = true;\n                this.deleteInvoice(invoiceId);\n            }\n        });\n    }\n\n    displayInvoiceLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('VERIFIER.document_locked'),\n                confirmText         : this.translate.instant('VERIFIER.document_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\",\n        });\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_all_documents'),\n                confirmButton       : this.translate.instant('GLOBAL.delete_all_checked'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteAllInvoices();\n            }\n        });\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadInvoices();\n    }\n\n    changeForm(event: any) {\n        this.currentForm = event.value;\n        this.resetPaginator();\n        this.loadInvoices();\n    }\n\n    onTabChange(event: any) {\n        this.search = '';\n        this.selectedTab = event.index;\n        this.localStorageService.save('invoicesTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.resetPaginator();\n        this.loadInvoices();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.pageIndex = event.pageIndex;\n        this.localStorageService.save('invoicesPageIndex', event.pageIndex);\n        this.loadInvoices();\n    }\n\n    searchInvoice(event: any) {\n        this.search = event.target.value;\n        this.loadInvoices(false).then();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n        this.localStorageService.save('invoicesPageIndex', this.pageIndex);\n    }\n\n    expandAll() {\n        if (!this.expanded) this.treeControl.expandAll();\n        else this.treeControl.collapseAll();\n        this.expanded = !this.expanded;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"2xl:w-96 xl:w-80 md:w-72 sm:w-64 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\" [class.pointer-events-none]=\"this.loading\">\n            <i class=\"fa-solid fa-sync-alt mr-4 cursor-pointer\" (click)=\"resetInvoices()\"\n               [matTooltip]=\"'VERIFIER.reset_document_list' | translate\"></i>\n            {{ \"VERIFIER.suppliers_by_customer\" | translate }}\n            <i [class.fa-compress-arrows-alt]=\"this.expanded\" [class.fa-expand-arrows-alt]=\"!this.expanded\"\n               class=\"fa-solid ml-4 cursor-pointer\" (click)=\"expandAll()\"\n               [matTooltip]=\"!this.expanded ? this.translate.instant('VERIFIER.expand_all') : this.translate.instant('VERIFIER.collapse_all')\"></i>\n        </h3>\n        <mat-divider></mat-divider>\n        <div class=\"pb-6\">\n            <mat-form-field class=\"px-4 pt-4 -mb-6 w-full\" appearance=\"outline\"\n                            [class.pointer-events-none]=\"this.loadingCustomers || this.dataSource.data.length === 0\">\n                <mat-label>\n                    {{ 'VERIFIER.search_customer' | translate }}\n                </mat-label>\n                <input matInput type=\"text\" [formControl]=\"this.customerFilter\"\n                       (keyup)=\"filterCustomers()\"\n                       autocomplete=\"off\"\n                       [readonly]=\"this.loadingCustomers || this.dataSource.data.length === 0\">\n                <button matSuffix class=\"text-gray-900 cursor-pointer\" (click)=\"resetSearchCustomer()\"\n                        *ngIf=\"this.customerFilter.value\">\n                    <i class=\"fa-solid fa-sync-alt text-xl relative mr-4\"\n                       [matTooltip]=\"'VERIFIER.reset_customers_search' | translate\"></i>\n                </button>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"this.loadingCustomers || this.dataSource.data.length === 0\" class=\"flex text-gray-400 object-contain\"\n             style=\"height: calc(100% - 10rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-users fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'VERIFIER.loading_customers' | translate }}\n                </span>\n            </div>\n        </div>\n        <div *ngIf=\"this.customerFilter.value && !this.loadingCustomers && this.customerFilterEmpty\"\n             class=\"flex text-gray-400 object-contain\" style=\"height: calc(100% - 10rem)\">\n            <div class=\"m-auto text-center\">\n                <i class=\"fa-solid fa-ban fa-4x fa-beat-fade w-full mb-2\"></i>\n                <span class=\"w-full\">\n                    {{ 'VERIFIER.no_customers_filter' | translate }}\n                </span>\n            </div>\n        </div>\n        <mat-tree *ngIf=\"!this.loadingCustomers && this.dataSource.data.length !== 0\" [dataSource]=\"this.dataSource\"\n                  [treeControl]=\"this.treeControl\">\n            <mat-tree-node style=\"min-height: 24px\" class=\"pl-12 cursor-pointer hover:bg-black hover:bg-opacity-20\"\n                           *matTreeNodeDef=\"let node; when:isLevelTwo;\" (click)=\"loadInvoicePerCustomer(node)\">\n                <button mat-icon-button disabled>\n                    <i class=\"text-green-400 ml-4 text-base fa-solid fa-user pb-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                <span class=\"float-right ml-auto select-none mr-6 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node style=\"min-height: 24px\" class=\"parent cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                           *matTreeNodeDef=\"let node; when: hasChild; when:isNotLevelOne\" matTreeNodeToggle\n                           [class.hidden]=\"!node.display || (node.count === 0 && node.id === 0)\">\n                <button mat-icon-button [class.hidden]=\"node.count === 0 && node.id === 0\">\n                    <mat-icon class=\"mat-icon-rtl-mirror text-gray-900\">\n                        {{ this.treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n                    </mat-icon>\n                </button>\n                <span class=\"select-none\" [class.pointer-events-none]=\"node.count === 0\"\n                      [class.hidden]=\"node.count === 0 && node.id === 0\">\n                    {{ node.name }}\n                </span>\n                <span *ngIf=\"!this.treeControl.isExpanded(node)\" [class.hidden]=\"node.count === 0 && node.id === 0\"\n                      class=\"float-right ml-auto select-none mr-4 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node [class.hidden]=\"node.count === 0\" style=\"min-height: 24px\"\n                           class=\"child pl-6 cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                           *matTreeNodeDef=\"let node;when: isLevelOne;\" matTreeNodeToggle>\n                <button mat-icon-button>\n                    <i [class.fa-folder-open]=\"this.treeControl.isExpanded(node)\"\n                       class=\"text-gray-600 fa-solid fa-folder text-lg relative -top-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{ node.name }}</span>\n                <span *ngIf=\"!this.treeControl.isExpanded(node)\" class=\"float-right ml-auto select-none mr-12 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{ node.count }}\n                </span>\n            </mat-tree-node>\n        </mat-tree>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\"\n                class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\"\n               class=\"fa-solid fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <mat-tab-group [selectedIndex]=\"this.selectedTab\" (selectedTabChange)=\"onTabChange($event)\"\n                       class=\"batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of batchList\"  [id]=\"batch.id\" [disabled]=\"this.loading\">\n                <ng-template mat-tab-label>\n                    <span>\n                        {{ this.translate.instant(batch.label) }}\n                    </span>\n                    <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 relative bottom-1.5 font-bold\">\n                        {{ this.totals[batch.id] }}\n                    </span>\n                </ng-template>\n                <div class=\"verifier-container flex flex-col\">\n                    <div class=\"grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <mat-form-field class=\"relative mt-0.5 left-4 w-1/2\" appearance=\"outline\">\n                            <mat-label>{{ 'VERIFIER.search' | translate }}</mat-label>\n                            <input matInput type=\"text\" [(ngModel)]=\"search\" [disabled]=\"this.total === 0\" (keyup)=\"searchInvoice($event)\">\n                        </mat-form-field>\n                        <div class=\"w-full m-auto grid grid-cols-2 gap-2\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentStatus\" (selectionChange)=\"changeStatus($event)\"\n                                            [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.status\" [value]=\"option['id']\">\n                                        {{ option['label'] }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>{{ 'SETTINGS.list_forms' | translate }}</mat-label>\n                                <mat-select [(value)]=\"this.currentForm\" (selectionChange)=\"changeForm($event)\" [disabled]=\"this.loading\">\n                                    <mat-option *ngFor=\"let option of this.forms\" [value]=\"option['id']\">\n                                        {{ option['label'] | translate }}\n                                        <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3 font-bold\">{{ option['total'] }}</span>\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <span [class.hidden]=\"this.loading || this.total === 0\" class=\"relative right-0\">\n                            <mat-paginator [length]=\"this.total\" [pageSize]=\"this.pageSize\" [pageIndex]=\"this.pageIndex\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\" (page)=\"onPageChange($event)\">\n                            </mat-paginator>\n                        </span>\n                    </div>\n\n                    <div class=\"z-30 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"this.invoices.length > 1\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllInvoices($event)\"\n                              [innerHTML]=\"this.invoiceToDeleteSelected ? this.translate.instant('VERIFIER.unselect_all') : this.translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked === 0\"> ({{ this.totalChecked }})</span>\n                        <span [class.hidden]=\"!this.invoiceToDeleteSelected\"\n                              (click)=\"$event.stopPropagation();deleteAllConfirmDialog()\">\n                            <i class=\"fa-solid fa-trash ml-2 text-red-500 cursor-pointer\"\n                               matTooltip=\"{{ 'GLOBAL.delete_all_checked' | translate }}\"></i>\n                        </span>\n                    </div>\n\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n\n                    <div *ngIf=\"this.invoices.length === 0\" class=\"m-4\">\n                        {{ 'SPLITTER.no_batch_found' | translate }}\n                    </div>\n\n                    <div *ngIf=\"this.loading\">\n                        <app-loader></app-loader>\n                    </div>\n\n                    <div class=\"content mx-10 mt-3\" *ngIf=\"!this.loading\">\n                        <div class=\"cards-list list grid 2xl:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-flow-row gap-12\">\n                            <mat-card *ngFor=\"let invoice of this.invoices;\" class=\"cursor-pointer p-0 mb-0\">\n                                <label class=\"p-4 absolute z-40 cursor-pointer\">\n                                    <input id=\"{{ invoice.invoice_id }}_checkbox\" (click)=\"checkCheckedInvoices()\"\n                                           class=\"accent-green-400 checkBox_list cursor-pointer w-5 h-5\" type=\"checkbox\">\n                                </label>\n                                <div class=\"absolute right-0 pt-4 pr-5 z-40\">\n                                    <div [matMenuTriggerFor]=\"menu\" matTooltipPosition=\"above\"\n                                         [matTooltip]=\"this.translate.instant('VERIFIER.documents_settings')\">\n                                        <i class=\"fa-solid fa-ellipsis-vertical text-2xl\"></i>\n                                    </div>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"customers\">\n                                            {{ \"INPUT.associated_customer\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"formMenu\">\n                                            {{ \"POSITIONS-MASKS.form_associated\" | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #customers=\"matMenu\">\n                                        <button mat-menu-item *ngFor=\"let customer of this.dataSource.data\"\n                                                (click)=\"changeCustomer(customer.id, invoice.invoice_id)\">\n                                            <span [class.text-green-400]=\"customer.id === invoice.customer_id\">\n                                                {{ customer.name | translate }}\n                                            </span>\n                                            <span *ngIf=\"customer.id === invoice.customer_id\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #formMenu=\"matMenu\">\n                                        <button mat-menu-item (click)=\"changeInvoiceForm(form.id, invoice.invoice_id)\"\n                                                *ngFor=\"let form of this.filteredForms\">\n                                            <span [class.text-green-400]=\"form.id === invoice.form_id\">\n                                                {{ form.label | translate }}\n                                            </span>\n                                            <span *ngIf=\"form.id === invoice.form_id\">\n                                                <i class=\"fa-regular fa-circle-check text-green-400 ml-4\"></i>\n                                            </span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <img [routerLink]=\"invoice.locked ? '/verifier/list' : '/verifier/viewer/' + invoice.invoice_id\"\n                                     mat-card-image class=\"m-auto p-4\" [src]=\"invoice.thumb\" alt=\"Open-Capture image\"\n                                     (click)=\"invoice.locked ? displayInvoiceLocked(invoice.locked_by) : ''\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-8 pr-8\"\n                                        [routerLink]=\"invoice.locked ? '/verifier/list' : '/verifier/viewer/' + invoice.invoice_id\"\n                                        (click)=\"invoice.locked ? displayInvoiceLocked(invoice.locked_by) : ''\">\n                                    <mat-card-title class=\"break-all\">\n                                        <span class=\"leading-7\">\n                                            <i [matTooltip]=\"'VERIFIER.document_locked_by' | translate\"\n                                               class=\"fa-solid fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\"\n                                               *ngIf=\"invoice.locked\"></i>\n                                            {{ invoice.supplier_name ? invoice.supplier_name : 'ACCOUNTS.supplier_unknow' | translate }}\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              [matTooltip]=\"this.translate.instant('VERIFIER.nb_pages') + ' : ' + invoice.nb_pages\">\n                                            {{ invoice.nb_pages }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1\">\n                                        <div class=\"-mb-1 text-base text-ellipsis overflow-hidden w-full inline-block\"\n                                             *ngFor=\"let subtitles of invoice.display['subtitles']\">\n                                            <strong>{{ subtitles['label'] | translate }}</strong>&nbsp;:&nbsp;{{ subtitles['data'] }}\n                                        </div>\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4 pl-4\">\n                                    <i class=\"fa-solid fa-trash cursor-pointer text-red-500\"\n                                       (click)=\"$event.stopPropagation();deleteConfirmDialog(invoice.invoice_id)\">\n                                       <span class=\"font-medium mat-typography\">{{ 'VERIFIER.delete_document' | translate }}</span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from  \"../../env\";\nimport { catchError, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { DatePipe } from '@angular/common';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ConfigService } from \"../../../services/config.service\";\nimport * as moment from 'moment';\nimport { UserService } from \"../../../services/user.service\";\nimport { HistoryService } from \"../../../services/history.service\";\nimport { LocaleService } from \"../../../services/locale.service\";\ndeclare const $: any;\n\n@Component({\n    selector: 'verifier-viewer',\n    templateUrl: './verifier-viewer.component.html',\n    styleUrls: ['./verifier-viewer.component.scss'],\n    providers: [DatePipe]\n})\n\nexport class VerifierViewerComponent implements OnInit {\n    imageInvoice            : any;\n    invoiceId               : any;\n    invoice                 : any;\n    fields                  : any;\n    config                  : any;\n    isOCRRunning            : boolean     = false;\n    settingsOpen            : boolean     = false;\n    ocrFromUser             : boolean     = false;\n    accountingPlanEmpty     : boolean     = false;\n    getOnlyRawFooter        : boolean     = false;\n    disableOCR              : boolean     = false;\n    tokenError              : boolean     = false;\n    visualIsHide            : boolean     = false;\n    saveInfo                : boolean     = true;\n    loading                 : boolean     = true;\n    loadingSubmit           : boolean     = false;\n    supplierExists          : boolean     = true;\n    deleteDataOnChangeForm  : boolean     = true;\n    oldVAT                  : string      = '';\n    oldSIRET                : string      = '';\n    oldSIREN                : string      = '';\n    currentFilename         : string      = '';\n    lastLabel               : string      = '';\n    lastId                  : string      = '';\n    lastColor               : string      = '';\n    toHighlight             : string      = '';\n    toHighlightAccounting   : string      = '';\n    token                   : string      = '';\n    imgSrc                  : SafeUrl     = '';\n    ratio                   : number      = 0;\n    currentPage             : number      = 1;\n    accountingPlan          : any         = {};\n    formSettings            : any         = {};\n    formList                : any         = {};\n    currentFormFields       : any         = {};\n    suppliers               : any         = [];\n    currentSupplier         : any         = {};\n    outputsLabel            : any         = [];\n    outputs                 : any         = [];\n    imgArray                : any         = {};\n    fieldCategories         : any[]       = [\n        {\n            id: 'supplier',\n            label: this.translate.instant('FORMS.supplier')\n        },\n        {\n            id: 'facturation',\n            label: this.translate.instant('FACTURATION.facturation')\n        },\n        {\n            id: 'other',\n            label: this.translate.instant('FORMS.other')\n        }\n    ];\n    form                    : any         = {\n        supplier      : [],\n        facturation   : [],\n        other         : []\n    };\n    pattern                 : any         = {\n        alphanum                        : '^[(\\\\-)?0-9a-zA-Z\\\\s\\']*$',\n        alphanum_extended               : '^[(\\\\-)?0-9a-zA-Z-/#,\\\\.\\'\\\\s]*$',\n        alphanum_extended_with_accent   : '^[(\\\\-)?0-9a-zA-Z\\\\u00C0-\\\\u017F-/#,\\'\\\\.\\\\s]*$',\n        number_int                      : '^[(\\\\-)?0-9]*$',\n        number_float                    : '^[(\\\\-)?0-9]*([.][0-9]*)*$',\n        char                            : '^[A-Za-z\\\\s]*$',\n        email                           : '^([A-Za-z0-9]+[\\\\.\\\\-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\\\.[A-Z|a-z]{2,})+$'\n    };\n    supplierNamecontrol     : FormControl =  new FormControl();\n    filteredOptions         : Observable<any> | any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private configService: ConfigService,\n        private historyService: HistoryService,\n        private localStorageService: LocalStorageService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.localStorageService.save('splitter_or_verifier', 'verifier');\n        this.ocrFromUser = false;\n        this.saveInfo = true;\n        this.config = this.configService.getConfig();\n        this.invoiceId = this.route.snapshot.params['id'];\n        this.translate.get('HISTORY-DESC.viewer', {document_id: this.invoiceId}).subscribe((translated: string) => {\n            this.historyService.addHistory('verifier', 'viewer', translated);\n        });\n        this.updateInvoice({\n            'locked': true,\n            'locked_by': this.userService.user.username\n        });\n        this.invoice = await this.getInvoice();\n        this.currentFilename = this.invoice.full_jpg_filename;\n        await this.getThumb(this.invoice.full_jpg_filename);\n        if (this.invoice.form_id) {\n            await this.generateOutputs(this.invoice.form_id);\n        }\n\n        this.formList = await this.getAllForm();\n        this.formList = this.formList.forms;\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n\n        let supplierFormFound = false;\n        if (this.invoice.supplier_id) {\n            for (const element of this.suppliers) {\n                if (element.id === this.invoice.supplier_id) {\n                    this.currentSupplier = element;\n                    if (element.form_id) {\n                        supplierFormFound = element.form_id;\n                    }\n                }\n            }\n        }\n\n        if (Object.keys(this.currentFormFields).length === 0) {\n            let defaultFormFound = false;\n            if (supplierFormFound) {\n                await this.generateOutputs(supplierFormFound);\n            } else {\n                for (const element of this.formList) {\n                    if (element.default_form) {\n                        defaultFormFound = element.id;\n                    }\n                }\n                if (defaultFormFound) {\n                    await this.generateOutputs(defaultFormFound);\n                }\n            }\n            if (defaultFormFound || supplierFormFound) {\n                this.currentFormFields = await this.getForm();\n            } else {\n                this.notify.error(this.translate.instant('FORMS.no_form_available'));\n                await this.router.navigate(['/verifier/list']);\n            }\n        }\n        /*\n        * Enable library to draw rectangle on load (OCR ON FLY)\n        */\n        this.imageInvoice = $('#document_image');\n        this.ratio = this.invoice.img_width / this.imageInvoice.width();\n        this.ocr({\n            'target' : {\n                'id': '',\n                'labels': [\n                    {'textContent': ''}\n                ]\n            }\n        }, true);\n        await this.fillForm(this.currentFormFields);\n        if (this.invoice.supplier_id) {\n            this.getSupplierInfo(this.invoice.supplier_id, false, true);\n        }\n        setTimeout(() => {\n            this.drawPositions();\n            this.convertAutocomplete();\n            document.getElementById('image')!.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            this.loading = false;\n        }, 500);\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        this.filteredOptions = this.supplierNamecontrol.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n    }\n\n    convertAutocomplete() {\n        this.outputs.forEach((output: any) => {\n            if (output.data.options.links && output.output_type_id === 'export_mem') {\n                const data = {\n                    \"host\": output.data.options.auth[0].value,\n                    \"login\": output.data.options.auth[1].value,\n                    \"password\": output.data.options.auth[2].value,\n                    \"autocompleteField\": '',\n                    \"memCustomField\": '',\n                    \"memClause\": '',\n                    \"vatNumberContactCustom\": '',\n                    \"enabled\": false,\n                    \"supplierCustomId\": ''\n                };\n\n                output.data.options.links.forEach((element: any) => {\n                    if (element.id === 'enabled' && element.value) {\n                        data['enabled'] = true;\n                    }\n                    if (element.id === 'openCaptureField' && element.value) {\n                        data['autocompleteField'] = element.value;\n                    } else if (element.id === 'memCustomField' && element.value) {\n                        data['memCustomField'] = element.value;\n                    } else if (element.id === 'memClause' && element.value) {\n                        data['memClause'] = element.value;\n                    } else if (element.id === 'vatNumberContactCustom' && element.value) {\n                        data['vatNumberContactCustom'] = element.value;\n                    }\n                });\n                if (data['enabled']) {\n                    this.form.supplier.forEach((supplier_element: any) => {\n                        if (supplier_element.id === 'vat_number' || supplier_element.id === 'siret') {\n                            data['supplierCustomId'] += supplier_element.control.value;\n                        }\n                    });\n\n                    this.form.facturation.forEach((element: any) => {\n                       if (element.id === data['autocompleteField']) {\n                           this.http.post(environment['url'] + '/ws/mem/getDocumentsWithContact', data, {headers: this.authService.headers},\n                           ).pipe(\n                               tap((_return: any) => {\n                                   element.type = 'autocomplete';\n                                   if (_return && _return.count > 0) {\n                                       element.autocomplete_values = element.control.valueChanges\n                                            .pipe(\n                                               startWith(''),\n                                               map(option => option ? this._filter_data(option, _return.resources) : _return.resources.slice())\n                                           );\n                                   }\n                               }),\n                               catchError((err: any) => {\n                                   console.debug(err);\n                                   this.notify.handleErrors(err);\n                                   return of(false);\n                               })\n                           ).subscribe();\n                       }\n                    });\n                }\n            }\n        });\n    }\n\n    async generateOutputs(formId: any) {\n        this.currentFormFields = await this.getFormFieldsById(formId);\n        this.formSettings = await this.getFormById(formId);\n        if (this.formSettings.outputs.length !== 0) {\n            for (const outputId in this.formSettings.outputs) {\n                const output = await this.getOutputs(this.formSettings.outputs[outputId]);\n                this.outputs.push(output);\n                this.outputsLabel.push(output.output_label);\n            }\n        }\n        if (this.formSettings.supplier_verif && !this.token) {\n            const token: any = await this.generateTokenInsee();\n            if (token['token']) {\n                if (token['token'].includes('ERROR')) {\n                    this.tokenError = true;\n                    this.token = token['token'].replace('ERROR : ', '');\n                } else {\n                    this.tokenError = false;\n                    this.token = token['token'];\n                }\n            }\n        }\n    }\n\n    async generateTokenInsee() {\n        return await this.http.get(environment['url'] + '/ws/verifier/getTokenINSEE', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getThumb(filename:string) {\n        const cpt = filename.split('-')[filename.split('-').length - 1].split('.')[0];\n        if (this.imgArray[cpt]) {\n            this.imgSrc = this.imgArray[cpt];\n        } else {\n            this.http.post(environment['url'] + '/ws/verifier/getThumb', {'args': {'type': 'full', 'filename': filename}},\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.imgSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n                    this.imgArray[cpt] = this.imgSrc;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n        return this.imgSrc;\n    }\n\n    private _filter(value: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        const _return = this.suppliers.filter((supplier: any) => supplier.name.toLowerCase().indexOf(filterValue) !== -1);\n        this.supplierExists = _return.length !== 0;\n        if (!this.supplierExists) {\n            this.form['supplier'].forEach((element: any) => {\n                if (element.id !== 'name') {\n                    element.control.setValue('');\n                    element.control.setErrors(null);\n                }\n            });\n        }\n        return _return;\n    }\n\n    private _filter_data(value: any, data: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        return data.filter((element: any) => element.data.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    updateFilteredOption(event: any, control: any) {\n        let value = '';\n        if (event.target.value) value = event.target.value;\n        else if (control.value) value = control.value;\n        control.patchValue(value);\n    }\n\n    getFieldInfo(fieldId: any) {\n        for (const parent in this.fields) {\n            for (const cpt in this.form[parent]) {\n                const field = this.form[parent][cpt];\n                if (field.id === fieldId) {\n                    return field;\n                }\n            }\n        }\n    }\n\n    async drawPositions(): Promise<any> {\n        for (const fieldId in this.invoice.datas) {\n            const page = this.getPage(fieldId);\n            const position = this.invoice.positions[fieldId];\n            if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                const splittedFieldId = fieldId.split('_');\n                const field = this.getFieldInfo(fieldId);\n                let cpt = '0';\n                if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                    cpt = splittedFieldId[splittedFieldId.length - 1];\n                }\n                if (field) {\n                    this.drawPositionByField(field, position, cpt);\n                    $('#' + field.id).blur();\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any, cpt = '0') {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        if (cpt !== '0') this.lastLabel += ' ' + parseInt(cpt);\n        this.lastColor = field.color;\n        this.disableOCR = true;\n        const newArea = {\n            x: position.ocr_from_user ? position.x / this.ratio : position.x / this.ratio - ((position.x / this.ratio) * 0.005),\n            y: position.ocr_from_user ? position.y / this.ratio : position.y / this.ratio - ((position.y / this.ratio) * 0.003),\n            width: position.ocr_from_user ? position.width / this.ratio : position.width / this.ratio + ((position.width / this.ratio) * 0.05),\n            height: position.ocr_from_user ? position.height / this.ratio : position.height / this.ratio + ((position.height / this.ratio) * 0.6)\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    getPage(fieldId: any) {\n        let page: number = 1;\n        if (this.invoice.pages) {\n            Object.keys(this.invoice.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.invoice.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getInvoice(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/verifier/invoices/' + this.invoiceId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getForm(): Promise<any> {\n        if (this.invoice.form_id)\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + this.invoice.form_id, {headers: this.authService.headers}).toPromise();\n        if (this.invoice.supplier_id)\n            return await this.http.get(environment['url'] + '/ws/forms/fields/getBySupplierId/' + this.invoice.supplier_id, {headers: this.authService.headers}).toPromise();\n        else\n            return await this.http.get(environment['url'] + '/ws/forms/getDefault/verifier', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getAllForm(): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/list?module=verifier', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormFieldsById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/fields/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormById(formId: number): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/forms/getById/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async fillForm(data: any): Promise<any> {\n        this.form = {\n            'supplier': [],\n            'facturation': [],\n            'other': []\n        };\n        this.fields = data.fields;\n        for (const category in this.fields) {\n            for (const cpt in this.fields[category]) {\n                const field = this.fields[category][cpt];\n                this.form[category].push({\n                    id: field.id,\n                    label: field.label,\n                    required: field.required,\n                    control: new FormControl(),\n                    type: field.type,\n                    pattern: this.getPattern(field.format),\n                    color: field.color,\n                    unit: field.unit,\n                    class: field.class,\n                    format: field.format,\n                    display: field.display,\n                    format_icon: field.format_icon,\n                    display_icon: field.display_icon,\n                    class_label: field.class_label,\n                    cpt: 0,\n                    values: '',\n                    lineSelected: field.lineSelected,\n                    fullSizeSelected: field.fullSizeSelected\n                });\n\n                const _field = this.form[category][this.form[category].length - 1];\n                if (field.id === 'accounting_plan') {\n                    let array : any = {};\n                    array = await this.retrieveAccountingPlan();\n                    this.accountingPlanEmpty = Object.keys(array).length === 0;\n                    if (this.accountingPlanEmpty) {\n                        array = await this.retrieveDefaultAccountingPlan();\n                    }\n                    this.accountingPlan = this.sortArray(array);\n                    _field.values = this.form[category][cpt].control.valueChanges\n                        .pipe(\n                            startWith(''),\n                            map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                        );\n                }\n\n                if (this.invoice.datas[field.id]) {\n                    let value = this.invoice.datas[field.id];\n                    if (field.format === 'date' && field.id !== '' && field.id !== undefined && value) {\n                        value = value.replaceAll('.', '/');\n                        value = value.replaceAll(',', '/');\n                        value = value.replaceAll(' ', '/');\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    _field.control.setValue(value);\n                    _field.control.markAsTouched();\n\n                    if (field.id === 'siret' || field.id === 'siren') this.checkSirenOrSiret(field.id, value);\n                    if (field.id === 'vat_number') this.checkVAT(field.id, value);\n                }\n\n                if (field.id === 'name' && category === 'supplier') {\n                    this.supplierNamecontrol = this.form[category][cpt].control;\n                }\n\n                if (!field.lineSelected && !field.fullSizeSelected) {\n                    this.findChildren(field.id, _field, category);\n                } else if (field.fullSizeSelected) {\n                    for (const field_data in this.invoice.datas) {\n                        if (field_data.includes(field.id + '_')) {\n                            this.duplicateLine(field.id, category, true);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    async getOutputs(outputId: any): Promise<any> {\n        return await this.http.get(environment['url'] + '/ws/outputs/getById/' + outputId, {headers: this.authService.headers}).toPromise();\n    }\n\n    private _filter_accounting(array: any, value: any): string[] {\n        this.toHighlightAccounting = value;\n        const filterValue = value.toLowerCase();\n        return array.filter((option: any) => option.compte_lib.toLowerCase().indexOf(filterValue) !== -1 || option.compte_num.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    sortArray(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.compte_num, y = b.compte_num;\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    async retrieveAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getAccountingPlan/' + this.invoice.customer_id, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveDefaultAccountingPlan() {\n        return await this.http.get(environment['url'] + '/ws/accounts/customers/getDefaultAccountingPlan', {headers: this.authService.headers}).toPromise();\n    }\n\n    hideVisuals() {\n        this.visualIsHide = !this.visualIsHide;\n        const visuals = document.getElementsByClassName('select-areas-background-area');\n        Array.from(visuals).forEach((element: any) => {\n            const cpt = element.id.match(/(\\d+)/)[0];\n            if (this.visualIsHide) {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'none';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'none';\n            } else {\n                document.getElementById(\"select-areas-background-area_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-outline_\" + cpt)!.style.display = 'block';\n                document.getElementById(\"select-areas-label-container_\" + cpt)!.style.display = 'block';\n            }\n        });\n    }\n\n    findChildren(parentId: any, parent: any, categoryId: any) {\n        for (const field in this.invoice.datas) {\n            if (field.includes(parentId + '_')) {\n                parent.cpt += 1;\n                const splitted = field.split('_');\n                const cpt = parseInt(splitted[splitted.length - 1]) + 1;\n                this.form[categoryId].push({\n                    id: field,\n                    label: parent.label,\n                    required: parent.required,\n                    control: new FormControl(),\n                    type: parent.type,\n                    pattern: this.getPattern(parent.format),\n                    color: parent.color,\n                    unit: parent.unit,\n                    class: parent.class,\n                    format: parent.format,\n                    display: 'simple',\n                    format_icon: parent.format_icon,\n                    display_icon: parent.display_icon,\n                    class_label: parent.class_label,\n                    cpt: cpt,\n                });\n                const value = this.invoice.datas[field];\n                const _field = this.form[categoryId][this.form[categoryId].length - 1];\n                _field.control.setValue(value);\n            }\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    ocr(event: any, enable: boolean, color = 'green') {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        this.lastLabel = event.target.labels[0].textContent.replace('*', '').trim();\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        if (this.invoice.status !== 'END') {\n            deleteArea.addClass('pointer-events-auto');\n            backgroundArea.addClass('pointer-events-auto');\n            resizeArea.addClass('pointer-events-auto');\n        }\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            this.scrollToElement();\n            if (this.invoice.status !== 'END') {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageInvoice.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageInvoice.width(), this.imageInvoice.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        if (_this.lastId) {\n                            if ($('#select-area-label_' + cpt).length > 0) {\n                                const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                                if (inputId.trim() !== _this.lastId.trim()) {\n                                    _this.lastId = inputId;\n                                    _this.lastLabel = $('#select-area-label_' + cpt).text();\n                                }\n                            }\n                            _this.ocr_process(img, cpt, selection);\n                        }\n                    }\n                },\n                onDeleted(_img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    if (inputId) {\n                        _this.updateFormValue(inputId, '');\n                        delete _this.invoice.positions[inputId.trim()];\n                        if (_this.deleteDataOnChangeForm) {\n                            _this.deleteData(inputId);\n                            _this.deletePosition(inputId);\n                            _this.deletePage(inputId);\n                        }\n                    }\n                }\n            });\n        } else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    scrollToElement() {\n        if (this.invoice.positions[this.lastId]) {\n            const currentHeight = window.innerHeight;\n            if (document.getElementsByClassName('input_' + this.lastId).length > 0) {\n                const position = document.getElementsByClassName('input_' + this.lastId)![0]!.getBoundingClientRect().top;\n                if (position >= currentHeight || position <= currentHeight) {\n                    document.getElementById('image')!.scrollTo({\n                        top: position - 200,\n                        behavior: 'smooth'\n                    });\n                }\n            }\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        // Write the label of the input above the selection rectangle\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (parseInt(String(page)) === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                const deleteContainer = $('#select-areas-delete_' + cpt);\n                const resizeHandler = $('.select-areas-resize-handler_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                resizeHandler.addClass('resize_' + this.lastId);\n                deleteContainer.addClass('delete_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n                if (this.invoice.status === 'END') {\n                    outline.addClass('pointer-events-none');\n                    backgroundArea.addClass('pointer-events-none');\n                    resizeHandler.addClass('pointer-events-none');\n                    deleteContainer.addClass('pointer-events-none');\n                }\n            }\n            // End write\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n            if (!this.isOCRRunning && !this.loading && this.saveInfo) {\n                this.isOCRRunning = true;\n                let lang = this.localeService.currentLang;\n                if (Object.keys(this.currentSupplier).length !== 0) {\n                    lang = this.currentSupplier.document_lang;\n                }\n                this.http.post(environment['url'] + '/ws/verifier/ocrOnFly',\n                    {\n                        selection: this.getSelectionByCpt(selection, cpt),\n                        fileName: this.currentFilename, lang: lang,\n                        thumbSize: {width: img.currentTarget.width, height: img.currentTarget.height}\n                    }, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.isOCRRunning = false;\n                            let oldPosition = {\n                                x: 0,\n                                y: 0,\n                                width: 0,\n                                height: 0,\n                            };\n                            if (this.invoice.positions[inputId.trim()]) {\n                                oldPosition = {\n                                    x: this.invoice.positions[inputId.trim()].x / this.ratio - ((this.invoice.positions[inputId.trim()].x / this.ratio) * 0.005),\n                                    y: this.invoice.positions[inputId.trim()].y / this.ratio - ((this.invoice.positions[inputId.trim()].y / this.ratio) * 0.003),\n                                    width: this.invoice.positions[inputId.trim()].width / this.ratio + ((this.invoice.positions[inputId.trim()].width / this.ratio) * 0.05),\n                                    height: this.invoice.positions[inputId.trim()].height / this.ratio + ((this.invoice.positions[inputId.trim()].height / this.ratio) * 0.6)\n                                };\n                            }\n\n                            const newPosition = this.getSelectionByCpt(selection, cpt);\n                            if (newPosition.x !== oldPosition.x && newPosition.y !== oldPosition.y &&\n                                newPosition.width !== oldPosition.width && newPosition.height !== oldPosition.height) {\n                                this.updateFormValue(inputId, data.result);\n                                const res = this.saveData(data.result, this.lastId, true);\n                                if (res) {\n                                    this.savePosition(newPosition);\n                                    this.savePages(this.currentPage).then();\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n            }\n            this.saveInfo = true;\n        } else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    updateFormValue(inputId: string, value: any) {\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.id.trim() === inputId.trim()) {\n                    if (input.format === 'number_int' || input.format === 'number_float') {\n                        value = value.replace(/[A-Za-z€%$]/g, '');\n                    }\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    input.control.setValue(value);\n                    input.control.markAsTouched();\n                }\n            });\n        }\n    }\n\n    savePosition(position: any) {\n        position = {\n            ocr_from_user: true,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio,\n            height: position.height * this.ratio,\n            width: position.width * this.ratio\n        };\n\n        if (this.invoice.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.invoice.supplier_id + '/updatePosition',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/updatePosition',\n            {'args': {[this.lastId]: position}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.invoice.positions[this.lastId] = position;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async savePages(page: any) {\n        if (this.invoice.supplier_id) {\n            this.http.put(environment['url'] + '/ws/accounts/supplier/' + this.invoice.supplier_id + '/updatePage',\n                {'args': {'form_id': this.currentFormFields.form_id, [this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/updatePage',\n            {'args': {[this.lastId]: page}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.invoice.pages[this.lastId] = page;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    saveData(data: any, fieldId: any = false, showNotif: boolean = false) {\n        if (this.invoice.status !== 'END') {\n            const oldData = data;\n            if (fieldId) {\n                const field = this.getField(fieldId);\n                if (Object.keys(field).length !== 0) {\n                    if (field.unit === 'addresses' || field.unit === 'supplier') showNotif = false;\n                    if (field.control.errors || this.invoice.datas[fieldId] === data) return false;\n                    data = {[fieldId]: data};\n                    this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/updateData',\n                        {'args': data},\n                        {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.invoice.datas[fieldId] = oldData;\n                            if (showNotif) {\n                                this.notify.success(this.translate.instant('INVOICES.position_and_data_updated',\n                                    {\"input\": this.lastLabel}));\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    createSupplier() {\n        const addressData: any = {};\n        const supplierData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n            if (element.unit === 'supplier') supplierData[element.id] = field.control.value;\n            if (element.unit === 'addresses') addressData[element.id] = field.control.value;\n            this.saveData(field.control.value, element.id);\n        });\n\n        this.http.post(environment['url'] + '/ws/accounts/addresses/create', {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                supplierData['address_id'] = data.id;\n                this.http.post(environment['url'] + '/ws/accounts/suppliers/create', {'args': supplierData}, {headers: this.authService.headers},\n                ).pipe(\n                    tap(async (supplier_data: any) => {\n                        this.historyService.addHistory('accounts', 'create_supplier', this.translate.instant('HISTORY-DESC.create-supplier', {supplier: supplierData['name']}));\n                        this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                        this.updateInvoice({'supplier_id': supplier_data['id']});\n                        this.invoice.supplier_id = supplier_data['id'];\n                        this.suppliers = await this.retrieveSuppliers();\n                        this.suppliers = this.suppliers.suppliers;\n                        for (const element of this.suppliers) {\n                            if (element.id === this.invoice.supplier_id) {\n                                this.currentSupplier = element;\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    editSupplier() {\n        const supplierData: any = {};\n        const addressData: any = {};\n        this.fields.supplier.forEach((element: any) => {\n            const field = this.getField(element.id);\n            if (element.unit === 'supplier') supplierData[element.id] = field.control.value;\n            if (element.unit === 'addresses') addressData[element.id] = field.control.value;\n            this.saveData(field.control.value, element.id);\n        });\n\n        this.http.put(environment['url'] + '/ws/accounts/suppliers/update/' + this.invoice.supplier_id, {'args': supplierData}, {headers: this.authService.headers},\n        ).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.put(environment['url'] + '/ws/accounts/addresses/updateBySupplierId/' + this.invoice.supplier_id, {'args': addressData}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.historyService.addHistory('accounts', 'update_supplier', this.translate.instant('HISTORY-DESC.update-supplier', {supplier: supplierData['name']}));\n                this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    updateInvoice(data: any) {\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoiceId + '/update',\n            {'args': data},\n            {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getField(fieldId: any) {\n        let _field : any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((field: any) => {\n                if (field.id.trim() === fieldId.trim()) {\n                    _field = field;\n                }\n            });\n        }\n        return _field;\n    }\n\n    deleteData(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/deleteData',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('INVOICES.data_deleted', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePosition(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/deletePosition',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.invoice.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.invoice.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.invoice.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.invoice.supplier_id + '/deletePosition',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePage(fieldId: any, multiple: boolean = false) {\n        let args: any;\n        if (multiple) {\n            args = {'fields': fieldId, 'multiple': true};\n        } else {\n            args = fieldId.trim();\n        }\n\n        this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/deletePage',\n            {'args': args}, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        if (this.invoice.supplier_id) {\n            if (multiple) {\n                args = {'fields': fieldId, 'multiple': true, 'form_id' : this.invoice.form_id};\n            } else {\n                args = {'field_id': fieldId.trim(), 'form_id' : this.invoice.form_id};\n            }\n            this.http.put(environment['url'] + '/ws/accounts/suppliers/' + this.invoice.supplier_id + '/deletePage',\n                {'args': args}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getPattern(format: any) {\n        let pattern = '';\n        for (const cpt in this.pattern) {\n            if (cpt === format) {\n                pattern = this.pattern[cpt];\n            }\n        }\n        return pattern;\n    }\n\n    duplicateLine(fieldId: any, categoryId: any, neededValue: boolean = false) {\n        const listOfNewField: any = {};\n        const listOfNewFieldData: any = {};\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const newField = Object.assign({}, this.form[categoryId][i]);\n                        this.form[categoryId][i].cpt += 1;\n                        newField.id = newField.id + '_' + this.form[categoryId][i].cpt;\n                        newField.cpt = this.form[categoryId][i].cpt;\n                        newField.display = 'simple';\n                        newField.deleteLine = this.form[categoryId][i].fullSizeSelected;\n                        newField.lineSelected = true;\n                        newField.fullSizeSelected = false;\n                        newField.control = new FormControl();\n                        if (this.invoice.datas[newField.id]) {\n                            let value = this.invoice.datas[newField.id];\n                            if (newField.format === 'date' && newField.id !== '' && newField.id !== undefined && value) {\n                                value = value.replaceAll('.', '/');\n                                value = value.replaceAll(',', '/');\n                                value = value.replaceAll(' ', '/');\n                                const format = moment().localeData().longDateFormat('L');\n                                value = moment(value, format);\n                                value = new Date(value._d);\n                            }\n                            newField.control.setValue(value);\n                            newField.control.markAsTouched();\n                            listOfNewFieldData[newField.id] = value;\n                        } else {\n                            listOfNewField[newField.id] = '';\n                            listOfNewFieldData[newField.id] = '';\n                        }\n\n                        if (this.form[categoryId][i].cpt > 1 ) {\n                            this.form[categoryId].splice(i + (parseInt(numberOfField) * parseInt(this.form[categoryId][i].cpt)), 0, newField);\n                        } else {\n                            this.form[categoryId].splice(i + parseInt(numberOfField), 0, newField);\n                        }\n\n                        if (newField.id === 'accounting_plan') {\n                            this.form[categoryId][cpt + field.cpt].values = this.form[categoryId][cpt].control.valueChanges.pipe(\n                                startWith(''),\n                                map(option => option ? this._filter_accounting(this.accountingPlan, option) : this.accountingPlan)\n                            );\n                        }\n                    }\n                }\n            }\n        });\n\n        if (!neededValue) {\n            this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/updateData',\n                {'args': listOfNewField}, {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        } else {\n            let lineEmpty = true;\n            Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                if (listOfNewFieldData[newFieldId]) {\n                    lineEmpty = false;\n                }\n            });\n\n            if (lineEmpty) {\n                Object.keys(listOfNewFieldData).forEach((newFieldId: any) => {\n                    this.form[categoryId].forEach((element: any, cpt: number) => {\n                        if (newFieldId === element.id) {\n                            const parentId = element.id.split('_').slice(0, -1).join('_');\n                            this.form[categoryId].splice(cpt, 1);\n                            this.form[categoryId].forEach((parent_field: any) => {\n                                if (parent_field.id.trim() === parentId.trim()) {\n                                    parent_field.cpt = parent_field.cpt - 1;\n                                }\n                            });\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    duplicateField(fieldId: any, categoryId: any) {\n        for (const category in this.form) {\n            if (category === categoryId) {\n                this.form[category].forEach((field: any, cpt: number) => {\n                    if (field.id.trim() === fieldId.trim()) {\n                        const newField = Object.assign({}, field);\n                        newField.id = newField.id + '_' + field.cpt;\n                        field.cpt += 1;\n                        newField.cpt = field.cpt;\n                        newField.display = 'simple';\n                        newField.control = new FormControl();\n                        this.form[category].splice(cpt + field.cpt, 0, newField);\n                        this.saveData('', newField.id);\n                        this.notify.success(this.translate.instant('INVOICES.field_duplicated', {\"input\": this.translate.instant(field.label)}));\n                    }\n                });\n            }\n        }\n    }\n\n    removeDuplicateLine(fieldId: any, categoryId: any) {\n        const listOfFieldToDelete: any[] = [];\n        this.form[categoryId].forEach((field: any, cpt: number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                const numberOfField = field.class.replace('w-1/', '');\n                if (numberOfField !== 'full') {\n                    for (let i = cpt - numberOfField + 1; i <= cpt; i++) {\n                        const parentId = this.form[categoryId][i].id.split('_').slice(0, -1).join('_');\n                        listOfFieldToDelete.push(this.form[categoryId][i].id);\n                        this.form[categoryId].forEach((parent_field: any) => {\n                            if (parent_field.id.trim() === parentId.trim()) {\n                                parent_field.cpt = parent_field.cpt - 1;\n                            }\n                        });\n                    }\n                    this.form[categoryId].splice((cpt + 1) - numberOfField, numberOfField);\n                }\n            }\n        });\n        this.deleteData(listOfFieldToDelete, true);\n        this.deletePosition(listOfFieldToDelete, true);\n        this.deletePage(listOfFieldToDelete, true);\n    }\n\n    removeDuplicateField(fieldId: any, categoryId: any) {\n        const parentId = fieldId.split('_').slice(0, -1).join('_');\n        this.form[categoryId].forEach((field: any, cpt:number) => {\n            if (field.id.trim() === fieldId.trim()) {\n                this.deleteData(field.id);\n                this.deletePosition(field.id);\n                this.deletePage(field.id);\n                this.form[categoryId].splice(cpt, 1);\n            } else if (field.id.trim() === parentId.trim()) {\n                field.cpt = field.cpt - 1;\n            }\n        });\n    }\n\n    isChildField(fieldId: any) {\n        const splittedId = fieldId.split('_');\n        return Number.isInteger(parseInt(splittedId[splittedId.length - 1])) && !fieldId.includes('custom_');\n    }\n\n    getSupplierInfo(supplierId: any, showNotif = false, launchOnInit = false) {\n        this.suppliers.forEach((supplier: any) => {\n            if (supplier.id === supplierId) {\n                this.http.get(environment['url'] + '/ws/accounts/getAdressById/' + supplier.address_id, {headers: this.authService.headers}).pipe(\n                    tap((address: any) => {\n                        const supplierData : any = {\n                            'name': supplier.name,\n                            'address1': address.address1,\n                            'address2': address.address2,\n                            'city': address.city,\n                            'country': address.country,\n                            'postal_code': address.postal_code,\n                            'siret': supplier.siret,\n                            'siren': supplier.siren,\n                            'iban': supplier.iban,\n                            'email': supplier.email,\n                            'vat_number': supplier.vat_number,\n                        };\n                        this.getOnlyRawFooter = supplier.get_only_raw_footer;\n                        for (const column in supplierData) {\n                            if (supplierData[column]) this.updateFormValue(column, supplierData[column]);\n                        }\n\n                        if (!launchOnInit) {\n                            this.updateInvoice({'supplier_id': supplierId});\n                            this.saveData(supplierData);\n                            this.http.put(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/updateData',\n                                {'args': supplierData},\n                                {headers: this.authService.headers}).pipe(\n                                tap(() => {\n                                    this.invoice.supplier_id = supplierId;\n                                    for (const element of this.suppliers) {\n                                        if (element.id === this.invoice.supplier_id) {\n                                            this.currentSupplier = element;\n                                        }\n                                    }\n                                    if (showNotif) {\n                                        this.notify.success(this.translate.instant('INVOICES.supplier_infos_updated'));\n                                    }\n                                }),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    // Function used to verify SIRET or SIREN using the Luhn algorithm\n    verify(value: any, size: any, isVAT = false) {\n        if (isVAT) {\n            return value.length === size;\n        }\n\n        if (isNaN(value) || value.length !== size) {\n            return false;\n        }\n        let bal     = 0;\n        let total   = 0;\n        for (let i = size - 1; i >= 0; i--) {\n            const step = (value.charCodeAt(i) - 48) * (bal + 1);\n            total += (step > 9) ? step - 9 : step;\n            bal = 1 - bal;\n        }\n        return total % 10 === 0;\n    }\n\n    getErrorMessage(field: any, category: any) {\n        let error: any;\n        this.form[category].forEach((element: any) => {\n            if (element.id === field) {\n                if (element.control.errors) {\n                    const required = element.control.errors.required;\n                    const pattern = element.control.errors.pattern;\n                    const datePickerPattern = element.control.errors.matDatepickerParse;\n                    const siret_error = element.control.errors.siret_error;\n                    const siren_error = element.control.errors.siren_error;\n                    const vat_error = element.control.errors.vat_error;\n                    if (pattern) {\n                        if (pattern.requiredPattern === this.getPattern('alphanum')) {\n                            error = this.translate.instant('ERROR.alphanum_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('alphanum_extended')) {\n                            error = this.translate.instant('ERROR.alphanum_extended_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_int')) {\n                            error = this.translate.instant('ERROR.number_int_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('number_float')) {\n                            error = this.translate.instant('ERROR.number_float_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('char')) {\n                            error = this.translate.instant('ERROR.char_pattern');\n                        } else if (pattern.requiredPattern === this.getPattern('email')) {\n                            error = this.translate.instant('ERROR.email_pattern');\n                        }\n                    } else if (datePickerPattern) {\n                        error = this.translate.instant('ERROR.date_pattern');\n                    } else if (required) {\n                        error = this.translate.instant('ERROR.field_required');\n                    } else if (siret_error) {\n                        error = siret_error;\n                    } else if (siren_error) {\n                        error = siren_error;\n                    } else if (vat_error) {\n                        error = vat_error;\n                    } else if (this.tokenError) {\n                        error = this.token;\n                    } else {\n                        error = this.translate.instant('ERROR.unknow_error');\n                    }\n                }\n            }\n        });\n        return error;\n    }\n\n    setAutocompleteDefaultValue(event: any) {\n        if (event.isUserInput) {\n            this.form.facturation.forEach((element: any) => {\n                if (element.autocomplete_values) {\n                    element.autocomplete_id = event.source.id;\n                }\n            });\n        }\n    }\n\n    validateForm() {\n        this.loadingSubmit = true;\n        let valid = true;\n        const arrayData: any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.control.value) {\n                    let value = input.control.value;\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = value.format(format);\n                    }\n                    Object.assign(arrayData, {[input.id] : value});\n                }\n                if (input.control.errors) {\n                    valid = false;\n                    input.control.markAsTouched();\n                    this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n                }\n            });\n        }\n        if (!valid) {\n            this.loadingSubmit = false;\n            return;\n        }\n        this.saveData(arrayData);\n        /*\n            Executer les actions paramétrées dans les réglages du formulaires\n         */\n        if (this.formSettings.outputs.length !== 0) {\n            this.formSettings.outputs.forEach((outputId: any, cpt: number) => {\n                this.http.get(environment['url'] + '/ws/outputs/getById/' + outputId, {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        if (data.data.options.links) {\n                            this.form.facturation.forEach((element: any) => {\n                                if (element.autocomplete_values) {\n                                    if (data.output_type_id === 'export_mem') {\n                                        data.data['res_id'] = element.autocomplete_id;\n                                    }\n                                }\n                            });\n                        }\n\n                        this.http.post(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/' + data.output_type_id, {'args': data},{headers: this.authService.headers}).pipe(\n                            tap(() => {\n                                /* Actions à effectuer après le traitement des chaînes sortantes */\n                                if (cpt + 1 === this.formSettings.outputs.length) {\n                                    this.historyService.addHistory('verifier', 'document_validated', this.translate.instant('HISTORY-DESC.document_validated', {document_id: this.invoiceId, outputs: this.outputsLabel.join(', ')}));\n                                    this.updateInvoice({'status': 'END', 'locked': false, 'locked_by': null});\n                                    this.router.navigate(['/verifier']).then();\n                                    this.loadingSubmit = false;\n                                    if (this.formSettings.delete_documents_after_outputs) {\n                                        this.http.get(environment['url'] + '/ws/verifier/invoices/' + this.invoice.id + '/deleteDocuments', {headers: this.authService.headers}).pipe(\n                                            catchError((err: any) => {\n                                                console.debug(err);\n                                                this.notify.handleErrors(err);\n                                                return of(false);\n                                            })\n                                        ).subscribe();\n                                    }\n                                    this.notify.success(this.translate.instant('VERIFIER.form_validated_and_output_done', {outputs: this.outputsLabel.join('<br>')}));\n                                }\n                            }),\n                            catchError((err: any) => {\n                                this.loadingSubmit = false;\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            });\n        } else {\n            this.notify.error(this.translate.instant('VERIFIER.no_outputs_for_this_form', {'form': this.formSettings.label}));\n            this.loadingSubmit = false;\n        }\n    }\n\n    refuseForm() {\n        this.historyService.addHistory('verifier', 'document_refused', this.translate.instant('HISTORY-DESC.document_refused', {invoice_id: this.invoiceId}));\n        this.updateInvoice({'status': 'ERR', 'locked': false, 'locked_by': null});\n        this.notify.error(this.translate.instant('VERIFIER.document_refused'));\n        this.router.navigate(['/verifier/list']).then();\n    }\n\n    async changeForm(event: any) {\n        this.loading = true;\n        const newFormId = event.value;\n        for (const cpt in this.formList) {\n            if (this.formList[cpt].id === newFormId) {\n                this.updateInvoice({'form_id': newFormId});\n                this.currentFormFields = await this.getFormFieldsById(newFormId);\n                this.deleteDataOnChangeForm = false;\n                this.imageInvoice.selectAreas('destroy');\n                this.settingsOpen = false;\n                this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                await this.ngOnInit();\n                this.deleteDataOnChangeForm = true;\n            }\n        }\n    }\n\n    nextPage() {\n        if (this.currentPage < this.invoice.nb_pages) {\n            this.currentPage = this.currentPage + 1;\n            this.changeImage(this.currentPage, this.currentPage - 1);\n        } else {\n            this.changeImage(1, this.invoice.nb_pages);\n        }\n    }\n\n    previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            this.changeImage(this.currentPage, this.currentPage + 1);\n        } else {\n            this.changeImage(this.invoice.nb_pages, this.currentPage);\n        }\n    }\n\n    changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.currentFilename.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n            const newFilename = this.currentFilename.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.currentFilename = newFilename;\n            this.getThumb(newFilename).then();\n            this.currentPage = pageToShow;\n            for (const fieldId in this.invoice.datas) {\n                const page = this.getPage(fieldId);\n                const position = this.invoice.positions[fieldId];\n                if (position) {\n                    const input = $('.input_' + fieldId);\n                    const background = $('.background_' + fieldId);\n                    const outline = $('.outline_' + fieldId);\n                    const resizeHandler = $('.resize_' + fieldId);\n                    const deleteContainer = $('.delete_' + fieldId);\n                    input.remove();\n                    background.remove();\n                    outline.remove();\n                    resizeHandler.remove();\n                    deleteContainer.remove();\n                    if (parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                        this.lastId = fieldId;\n                        const splittedFieldId = fieldId.split('_');\n                        let field = this.getFieldInfo(fieldId);\n                        if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1])) && !fieldId.includes('custom_')) {\n                            const cpt = splittedFieldId[splittedFieldId.length - 1];\n                            const tmpFieldId = splittedFieldId.join('_').replace('_' + cpt, '');\n                            field = this.getFieldInfo(tmpFieldId);\n                            field.label = this.translate.instant(field.label) + ' ' + (parseInt(cpt) + 1);\n                        }\n                        this.saveInfo = false;\n                        if (field) {\n                            if (parseInt(String(page)) === this.currentPage) {\n                                this.drawPositionByField(field, position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    checkSirenOrSiret(siretOrSiren: any, value: any) {\n        if (this.formSettings.supplier_verif && this.invoice.status !== 'END') {\n            const sizeSIREN = 9;\n            const sizeSIRET = 14;\n            if (siretOrSiren === 'siren' && this.oldSIREN !== value) {\n                if (this.verify(value, sizeSIREN) && this.token) {\n                    this.oldSIREN = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIREN', {'token': this.token, 'siren': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siren') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siren_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siren') {\n                            setTimeout(() => {\n                                if (!this.token) {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.wrong_siren_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            } else if (siretOrSiren === 'siret'  && this.oldSIRET !== value) {\n                if (this.verify(value, sizeSIRET) && this.token) {\n                    this.oldSIRET = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifySIRET', {'token': this.token, 'siret': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siret') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siret_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siret') {\n                            setTimeout(() => {\n                                if (!this.token) {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.wrong_siret_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    checkVAT(id: any, value: any) {\n        if (id === 'vat_number' && this.formSettings.supplier_verif && this.invoice.status !== 'END') {\n            if (this.oldVAT !== value) {\n                const sizeVAT = 13;\n                if (this.verify(value, sizeVAT, true)) {\n                    this.oldVAT = value;\n                    this.http.post(environment['url'] + '/ws/verifier/verifyVATNumber', {'vat_number': value}, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'vat_number') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'vat_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                } else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'vat_number') {\n                            setTimeout(() => {\n                                if (!this.token) {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.ecu_api_not_up')});\n                                } else {\n                                    element.control.setErrors({'vat_error': this.translate.instant('ERROR.wrong_vat_number_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n}\n","<div *ngIf=\"this.loading\">\n    <app-loader></app-loader>\n</div>\n<div class=\"grid grid-cols-2 overflow-auto\" style=\"height: calc(100vh - 64px) !important\">\n    <div class=\"fixed z-50 text-xl left-6 top-4\">\n        <ng-container *ngIf=\"!this.loading && this.invoice && this.invoice.nb_pages> 1\">\n            <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n            {{ 'VERIFIER.page' | translate }}\n            {{ currentPage }}\n            {{ 'VERIFIER.on' | translate }}\n            {{ invoice.nb_pages }}\n            <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n        </ng-container>\n    </div>\n    <div id=\"image\" class=\"overflow-auto\" style=\"height: calc(100vh - 64px) !important; direction: rtl\">\n        <div class=\"image-container px-4\" *ngIf=\"this.invoice\">\n            <img id=\"document_image\" alt=\"Open-Capture\" [src]=\"this.imgSrc\">\n        </div>\n    </div>\n    <div *ngIf=\"this.fields\" class=\"px-4 overflow-auto pt-2\">\n        <div>\n            <div class=\"relative float-left top-5\">\n                <i class=\"fa-solid fa-eye cursor-pointer text-green-400 text-lg\" (click)=\"hideVisuals()\"\n                   [class.fa-eye-slash]=\"this.visualIsHide\"\n                   [matTooltip]=\"'VERIFIER.hide_visuals' | translate\"></i>\n            </div>\n            <div class=\"relative z-20 float-right\" style=\"width: 96%\">\n                <mat-accordion>\n                    <mat-expansion-panel class=\"top-2 mb-4\" [(expanded)]=\"this.settingsOpen\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title class=\"justify-center\">{{ 'GLOBAL.settings' | translate }}</mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <mat-tab-group class=\"mx-5\">\n                            <mat-tab [label]=\"'VERIFIER.change_form' | translate\">\n                                <p class=\"mt-3 text-center text-gray-400\">{{ 'VERIFIER.change_form_details' | translate }}</p>\n                                <mat-form-field class=\"w-full\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                    <mat-select [(value)]=\"this.currentFormFields.form_id\" (selectionChange)=\"changeForm($event)\"\n                                                [disabled]=\"this.invoice.status === 'END'\">\n                                        <mat-option *ngFor=\"let form of this.formList\" [value]=\"form['id']\">\n                                            {{ form['label'] }}\n                                        </mat-option>\n                                    </mat-select>\n                                    <mat-hint class=\"text-gray-500\">\n                                        {{ 'VERIFIER.outputs_list' | translate }} : {{ this.outputsLabel.join(', ') }}\n                                    </mat-hint>\n                                </mat-form-field>\n                            </mat-tab>\n                        </mat-tab-group>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n        </div>\n        <ng-container *ngFor=\"let category of this.fieldCategories\">\n            <ng-container *ngIf=\"this.form[category['id']].length !== 0\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white left-6 z-10\"\n                     [style]=\"'width:calc(3% + ' + (this.translate.instant(category['label']).length + 5)+ '%)'\">\n                    {{ category['label'] | translate }}\n                    <span *ngIf=\"getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                          class=\"cursor-default relative top-1.5 text-red-500 text-3xl\"\n                          matTooltip=\"{{ 'VERIFIER.only_raw_footer' | translate }}\">&bull;</span>\n                    <span *ngIf=\"!getOnlyRawFooter && this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                          class=\"cursor-default relative top-1.5 text-green-400 text-3xl\"\n                          matTooltip=\"{{ 'VERIFIER.calculated_footer' | translate }}\">&bull;</span>\n                    <span *ngIf=\"this.translate.instant(category['label']) === this.translate.instant('FORMS.supplier')\"\n                          class=\"text-sm cursor-pointer ml-2\">\n                        <i *ngIf=\"this.invoice.supplier_id && supplierExists && invoice.status !== 'END'\" (click)=\"editSupplier()\" class=\"fa-solid fa-edit\"></i>\n                        <i *ngIf=\"!this.invoice.supplier_id || !supplierExists && invoice.status !== 'END'\" (click)=\"createSupplier()\" class=\"fa-solid fa-plus\"></i>\n                    </span>\n                </div>\n                <div class=\"relative border-green-400 border rounded-lg -top-3.5\">\n                    <div id=\"{{ category['id'] }}\" class=\"flex flex-wrap w-full mt-6\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.form[category['id']];\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.invoice.status === 'END'\"\n                                                (click)=\"updateFilteredOption($event, field.control)\"\n                                                *ngIf=\"category['id'] === 'supplier' && field.id === 'name' else other\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field.required\" [readonly]=\"this.invoice.status === 'END'\"\n                                           [formControl]=\"field.control\" [pattern]=\"field.pattern\" [matAutocomplete]=\"auto\">\n                                    <mat-error *ngIf=\"field.control.errors\">\n                                        {{ getErrorMessage(field.id, category['id']) }}\n                                    </mat-error>\n                                    <mat-autocomplete #auto=\"matAutocomplete\" [id]=\"field.id\"\n                                                      (optionSelected)='getSupplierInfo($event.option.id, true)'>\n                                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                                <ng-template #other>\n                                    <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                        <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                            {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                        </mat-label>\n                                        <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                              class=\"absolute top-0.5 -right-2 cursor-pointer text-gray-600\">\n                                            <i class=\"fa-solid fa-circle-plus\"></i>\n                                        </span>\n                                        <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                              class=\"absolute top-0.5 -right-2 cursor-pointer text-red-500 opacity-70\">\n                                            <i class=\"fa-solid fa-trash\"></i>\n                                        </span>\n                                        <input [id]=\"field.id\" matInput type=\"text\" [formControl]=\"field.control\" [required]=\"field.required\"\n                                               [pattern]=\"field.pattern\" (click)=\"this.ocrFromUser = true; this.saveInfo = true;\"\n                                               (focusin)=\"ocr($event, true, field.color);\" [readonly]=\"this.invoice.status === 'END'\"\n                                               (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id']); checkVAT(field['id'], $any($event.target).value); checkSirenOrSiret(field['id'], $any($event.target).value)\">\n                                        <mat-error *ngIf=\"field.control.errors\">\n                                            {{ getErrorMessage(field.id, category['id']) }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </ng-template>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                    </mat-label>\n                                    <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-gray-600\">\n                                        <i class=\"fa-solid fa-circle-plus\"></i>\n                                    </span>\n                                    <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-red-500 opacity-70\">\n                                        <i class=\"fa-solid fa-trash\"></i>\n                                    </span>\n                                    <textarea [id]=\"field.id\" matInput cdkTextareaAutosize\n                                              cdkAutosizeMinRows=\"1\"\n                                              cdkAutosizeMaxRows=\"5\"\n                                              [required]=\"field.required\" [formControl]=\"field.control\" [pattern]=\"field.pattern\"\n                                              (focusin)=\"ocr($event, true, field.color)\" [readonly]=\"this.invoice.status === 'END'\"\n                                              (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"></textarea>\n                                    <mat-error *ngIf=\"field.control.errors\">\n                                        {{ getErrorMessage(field.id, category['id']) }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                    </mat-label>\n                                    <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-gray-600\">\n                                        <i class=\"fa-solid fa-circle-plus\"></i>\n                                    </span>\n                                    <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-red-500 opacity-70\">\n                                        <i class=\"fa-solid fa-trash\"></i>\n                                    </span>\n                                    <input [id]=\"field.id\" matInput [matDatepicker]=\"picker\" [formControl]=\"field.control\"\n                                           [readonly]=\"this.invoice.status === 'END'\"\n                                           (focusin)=\"ocr($event, true, field.color)\" [required]=\"field.required\"\n                                           (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                           (dateChange)=\"saveData($any($event.targetElement).value, field['id'])\">\n                                    <mat-datepicker-toggle [disabled]=\"this.invoice.status === 'END'\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker>\n                                    <mat-error *ngIf=\"field.control.errors\">\n                                        {{ getErrorMessage(field.id, category['id']) }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'autocomplete'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                    </mat-label>\n                                    <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-gray-600\">\n                                        <i class=\"fa-solid fa-circle-plus\"></i>\n                                    </span>\n                                    <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-red-500 opacity-70\">\n                                        <i class=\"fa-solid fa-trash\"></i>\n                                    </span>\n                                    <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field.required\"\n                                           [formControl]=\"field.control\"\n                                           (focusin)=\"ocr($event, true, field.color)\"\n                                           (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                           [matAutocomplete]=\"data\" [readonly]=\"this.invoice.status === 'END'\">\n                                    <mat-autocomplete #data=\"matAutocomplete\">\n                                        <span *ngIf=\"field.autocomplete_values\">\n                                            <mat-option *ngFor=\"let option of field.autocomplete_values | async\" [value]=\"option.data\"\n                                                        (onSelectionChange)=\"setAutocompleteDefaultValue($event)\" [id]=\"option.res_id\">\n                                                <span [innerHTML]=\"option.data | highlight: toHighlight\"></span>\n                                                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">\n                                                    {{ option.alt_identifier }}\n                                                </span>\n                                            </mat-option>\n                                        </span>\n                                        <mat-option *ngIf=\"!field.autocomplete_values\">\n                                            <span [innerHTML]=\"'VERIFIER.no_autocomplete_data' | translate\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                    </mat-label>\n                                    <span *ngIf=\"field.display === 'multi' && !field.lineSelected\" (click)=\"duplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-gray-600\">\n                                        <i class=\"fa-solid fa-circle-plus\"></i>\n                                    </span>\n                                    <span *ngIf=\"isChildField(field.id) && !field.lineSelected\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                      class=\"absolute top-0.5 -right-2 cursor-pointer text-red-500 opacity-70\">\n                                        <i class=\"fa-solid fa-trash\"></i>\n                                    </span>\n                                    <input matInput [id]=\"field.id\" type=\"text\" [required]=\"field.required\"\n                                           [formControl]=\"field.control\" [matAutocomplete]=\"accounting\" [readonly]=\"this.invoice.status === 'END'\">\n                                    <span *ngIf=\"accountingPlanEmpty\" class=\"absolute text-gray-600 top-0.5 -right-2 cursor-help\"\n                                          [matTooltip]=\"'VERIFIER.accounting_plan_empty' | translate\">\n                                        <i class=\"fa-solid fa-circle-question\"></i>\n                                    </span>\n                                    <mat-autocomplete #accounting=\"matAutocomplete\">\n                                        <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option.compte_lib\" [id]=\"option.compte_num\">\n                                            <span [innerHTML]=\"option.compte_num + ' - ' + option['compte_lib'] | highlight: toHighlightAccounting\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                                <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"!field.id.includes('accounting_plan')\" [class.opacity-50]=\"this.invoice.status === 'END'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <mat-select [id]=\"field.id\" [disabled]=\"this.invoice.status === 'END'\">\n                                        <mat-option *ngFor=\"let option of field.values\" [value]=\"option['compte_num']\">\n                                            {{ option['compte_num'] }} - {{ option['compte_lib'] }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <span *ngIf=\"field.fullSizeSelected\" (click)=\"duplicateLine(field.id, category['id'])\"\n                                  class=\"relative -right-1.5 cursor-pointer text-gray-900 -top-2.5\"\n                                  [matTooltip]=\"'VERIFIER.duplicate_line' | translate\" matTooltipPosition=\"above\">\n                                <i class=\"fa-solid fa-clone text-lg\"></i>\n                            </span>\n                            <span *ngIf=\"field.deleteLine\" (click)=\"removeDuplicateLine(field.id, category['id'])\"\n                                  class=\"relative -right-1.5 cursor-pointer text-red-500 -top-2.5\"\n                                  [matTooltip]=\"'VERIFIER.remove_duplicated_line' | translate\" matTooltipPosition=\"above\">\n                                <i class=\"fa-solid fa-trash text-lg\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <div class=\"mb-6 grid grid-cols-2 gap-4 h-12 text-gray-900\">\n            <button mat-button (click)=\"validateForm()\" type=\"submit\" [disabled]=\"this.invoice.status === 'END'\"\n                    class=\"p-6 border-solid border-green-400 border bg-green-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                <span *ngIf=\"!this.loadingSubmit\">{{ 'FORMS.validate' | translate }}</span>\n                <i *ngIf=\"this.loadingSubmit\" class=\"fa-solid text-2xl fa-circle-notch fa-spin text-gray-900\"></i>\n            </button>\n            <button mat-button (click)=\"refuseForm()\" type=\"submit\" [disabled]=\"this.invoice.status === 'END'\"\n                    class=\"p-6 border-solid border-red-400 border bg-red-400 text-white hover:bg-transparent hover:text-gray-900 transition duration-300\">\n                {{ 'FORMS.refuse' | translate }}\n            </button>\n        </div>\n    </div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { environment } from \"./app/env\";\nimport { AppModule } from './app/app.module';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nif (environment.production) {\n    enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule).then();\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Injectable } from '@angular/core';\nimport { LocalStorageService } from \"./local-storage.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"./user.service\";\nimport { environment } from \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n    public headersExists : boolean = false;\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private localStorage: LocalStorageService,\n    ) {\n        if (!this.getToken()) {\n            this.headersExists = false;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    generateHeaders() {\n        if (this.getToken()) {\n            this.headersExists = true;\n        }\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    setCachedUrl(url: string) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['cachedUrlName'], url);\n    }\n\n    getCachedUrl() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['cachedUrlName']);\n    }\n\n    cleanCachedUrl() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.remove(tokenNames['cachedUrlName']);\n    }\n\n    setTokenConfig(config: any) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['configName'], config);\n    }\n\n    getTokenConfig() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['configName']);\n    }\n\n    getTokenName() {\n        let tokenName = 'OpenCaptureToken';\n        let userDataName = 'OpenCaptureUserData';\n        let cachedUrlName = 'OpenCaptureCachedUrl';\n        let configName = 'OpenCaptureConfig';\n        if (environment['customId']) {\n            tokenName += '_' + environment['customId'];\n            userDataName += '_' + environment['customId'];\n            cachedUrlName += '_' + environment['customId'];\n            configName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            tokenName += '_' + environment['fqdn'];\n            userDataName += '_' + environment['fqdn'];\n            cachedUrlName += '_' + environment['fqdn'];\n            configName += '_' + environment['fqdn'];\n        }\n\n        return {\n            'tokenJwt': tokenName,\n            'configName': configName,\n            'userData': userDataName,\n            'cachedUrlName': cachedUrlName\n        };\n    }\n\n    setTokens(token: string, user_token: string) {\n        const tokenNames = this.getTokenName();\n        this.localStorage.save(tokenNames['tokenJwt'], token);\n        this.localStorage.save(tokenNames['userData'], user_token);\n    }\n\n    getToken() {\n        const tokenNames = this.getTokenName();\n        return this.localStorage.get(tokenNames['tokenJwt']);\n    }\n\n    logout() {\n        const tokenNames = this.getTokenName();\n        this.userService.setUser({});\n        this.localStorage.remove('login_image_b64');\n        this.localStorage.remove('selectedSettings');\n        this.localStorage.remove(tokenNames['tokenJwt']);\n        this.localStorage.remove(tokenNames['userData']);\n        this.localStorage.remove('splitter_or_verifier');\n        this.localStorage.remove('selectedParentSettings');\n        this.localStorage.remove('task_watcher_minimize_display');\n        this.http.get(environment['url'] + '/ws/auth/logout').pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.router.navigateByUrl(\"/login\").then();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService,\n    ) {}\n\n    readConfig() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        return new Promise((resolve) => {\n            this.http.get(environment['url'] + '/ws/config/readConfig', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.config);\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    setConfig(config: any) {\n        this.authService.setTokenConfig(btoa(JSON.stringify(config)));\n    }\n\n    getConfig() {\n        return JSON.parse(atob(this.authService.getTokenConfig() as string));\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string\n    confirmText : string\n    confirmButton : string\n    selectValues: any\n    selectLabel : string\n    confirmButtonColor : string\n    cancelButton : string\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\n\nexport class ConfirmDialogComponent implements OnInit {\n    selectData: any;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData,\n    ) { }\n\n    ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 w-11/12 m-auto\">\n<mat-dialog-content class=\"mat-typography text-gray-900\" [innerHTML]=data.confirmText></mat-dialog-content>\n<mat-dialog-content class=\"mat-typography\" *ngIf=\"data.selectValues\">\n    <mat-form-field class=\"w-full mt-1\">\n        <mat-label>{{ data.selectLabel }}</mat-label>\n        <mat-select [(value)]=\"this.selectData\">\n            <mat-option *ngFor=\"let option of data.selectValues\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions class=\"flex justify-end pb-4 pr-4\">\n    <button mat-button [mat-dialog-close]=\"\">{{ data.cancelButton }}</button>\n    <button *ngIf=\"data.selectValues\" mat-button [mat-dialog-close]=\"this.selectData\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n    <button *ngIf=\"!data.selectValues\" mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\"\n            cdkFocusInitial [class.text-green-400]=\"data.confirmButtonColor === 'green'\">{{ data.confirmButton }}\n    </button>\n</mat-dialog-actions>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { PrivilegesService } from \"./privileges.service\";\nimport { ActivatedRouteSnapshot, Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private privilegesService: PrivilegesService,\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        if (route.data['privileges'] !== undefined) {\n            let returnValue = true;\n            route.data['privileges'].forEach((privilege: any) => {\n                const hasPrivilege = this.privilegesService.hasPrivilege(privilege);\n                if (!hasPrivilege) {\n                    this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                        let label = '';\n                        if (route.routeConfig) {\n                            label = '<b>' + this.translate.instant(route.data['title']) + '</b>';\n                        }\n                        this.notify.error(translated + label);\n                        this.router.navigateByUrl('/home').then();\n                    });\n                    returnValue = false;\n                }\n            });\n            return returnValue;\n        } else {\n            return false;\n        }\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: './hint.service.html',\n    styleUrls: ['./hint.service.scss']\n})\n\nexport class HintServiceComponent {\n    @Input() message!: string;\n    @Input() specificClass: string = 'w-1/2';\n}\n","<div class=\"hint {{ this.specificClass }}\">\n    <i class=\"fa-solid fa-circle-exclamation fa-2x\"></i>\n    <div class=\"message\" [innerHTML]=\"this.message\"></div>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from  \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { AuthService } from \"./auth.service\";\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HistoryService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService\n    ) { }\n\n    addHistory(module: any, submodule: string, desc: string) {\n        if (!this.userService.user || !this.userService.user.id) {\n            this.userService.user = this.userService.getUserFromLocal();\n        }\n        const user = this.userService.user.lastname + ' ' + this.userService.user.firstname + ' (' + this.userService.user.username + ')';\n        const data = {\n            'module': module,\n            'submodule': submodule,\n            'desc': desc,\n            'user_info': user,\n            'user_id': this.userService.user.id\n        };\n        this.http.post(environment['url'] + '/ws/history/add', data, {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getCurrentUrl() {\n        return this.currentUrl;\n    }\n\n    public getPreviousUrl() {\n        return this.previousUrl;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n\n    constructor() {}\n\n    save(id: string, content: any) {\n        localStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return localStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        localStorage.removeItem(id);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { of } from \"rxjs\";\nimport * as moment from 'moment';\nimport { environment } from  \"../app/env\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { HistoryService } from \"./history.service\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang         : string = 'fra';\n    currentBabelLang    : string = 'fr';\n    dateAdaptaterLocale : string = 'fr-FR';\n    langs               : [] = [];\n    localeLoading       : boolean = false;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private dateAdapter: DateAdapter<any>,\n        private historyService: HistoryService\n    ) {\n        this.dateAdapter.setLocale('fr-FR');\n        moment.updateLocale('fr-FR', {\n            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n            months : 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n            weekdays : 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n            longDateFormat : {\n                LT : 'HH:mm',\n                LTS : 'HH:mm:ss',\n                L : 'DD/MM/YYYY',\n                l : 'DD/MM/YYYY',\n                LL : 'D MMMM YYYY',\n                LLL : 'D MMMM YYYY HH:mm',\n                LLLL : 'dddd D MMMM YYYY HH:mm'\n            },\n            week : {\n                dow : 1, // Monday is the first day of the week.\n            }\n        });\n        moment.updateLocale('en-GB', {\n            longDateFormat : {\n                LT: \"h:mm A\",\n                LTS: \"h:mm:ss A\",\n                L: \"MM/DD/YYYY\",\n                l: \"MM/DD/YYYY\",\n                LL: \"MMMM Do YYYY\",\n                LLL: \"MMMM Do YYYY LT\",\n                LLLL: \"dddd, MMMM Do YYYY LT\",\n                llll: \"ddd, MMM D YYYY LT\"\n            },\n            week : {\n                dow : 0, // Sunday is the first day of the week.\n            }\n        });\n        moment.locale(this.dateAdaptaterLocale);\n    }\n\n    changeLocale(data: any) {\n        this.localeLoading = true;\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        this.http.get(environment['url'] + '/ws/i18n/changeLanguage/' + data.value, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                const label = data.source._elementRef.nativeElement.textContent;\n                this.historyService.addHistory('general', 'language_changed', this.translate.instant('HISTORY-DESC.language_changed', {lang: label}));\n                this.getCurrentLocale();\n            }),\n            finalize(() => {\n                setTimeout(() => {\n                    this.localeLoading = false;\n                    window.location.reload();\n                }, 500);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCurrentLocale() {\n        this.http.get(environment['url'] + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang;\n                this.currentBabelLang = data.babel_lang;\n                if (data.moment_lang) {\n                    this.dateAdaptaterLocale = data.moment_lang;\n                }\n                this.dateAdapter.setLocale(this.dateAdaptaterLocale);\n                this.translate.use(this.currentLang);\n                moment.locale(this.dateAdaptaterLocale);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getLocales() {\n        this.http.get(environment['url'] + '/ws/i18n/getAllLang').pipe(\n            tap((data: any) => {\n                this.langs = data.langs;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(): boolean {\n        if (this.authService.getToken()) {\n            this.router.navigateByUrl('/home').then();\n            return false;\n        }\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { NotificationService } from \"./notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UserService } from \"./user.service\";\nimport { environment } from \"../app/env\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocaleService } from \"./locale.service\";\nimport { ConfigService } from \"./config.service\";\nimport { HistoryService } from \"./history.service\";\nimport { LastUrlService } from \"./last-url.service\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService implements CanActivate {\n\n    constructor(\n        public router: Router,\n        private http:HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private routerExtService: LastUrlService,\n        private localStorage: LocalStorageService\n    ) {}\n\n    login(token: string, route: any) {\n        if ((this.userService.getUser() === undefined || Object.keys(this.userService.getUser()).length === 0) && this.userService.getUserFromLocal() === undefined) {\n            this.http.post(\n                environment['url'] + '/ws/auth/login',\n                {\n                    'token': token,\n                    'lang': this.localeService.currentBabelLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())));\n                    if (!this.authService.headersExists) {\n                        this.authService.generateHeaders();\n                    }\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        this.historyService.addHistory('general', 'login', this.translate.instant('HISTORY-DESC.login_with_token'));\n                        if (route) {\n                            this.localStorage.save('task_watcher_minimize_display', 'true');\n                            this.router.navigate([route]).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    if (err.status !== 402) { // Specific case for simple SSO\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    }\n                    return of(true);\n                })\n            ).subscribe();\n        }\n    }\n\n    canActivate(): boolean {\n        const token = this.authService.getToken();\n        let route = '';\n        if (!token) {\n            const params = new URLSearchParams(window.location.href);\n            let token_param = '';\n            for (const [key, value] of params.entries()) {\n                if (key === 'token') {\n                    token_param = value;\n                    route = window.location.hash.replace('#', '').replace(/\\?.*/,'')\n                    this.login(token_param, route);\n                }\n            }\n        }\n        if (!token) {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                const currentUrl = this.routerExtService.getCurrentUrl();\n                if (currentUrl !== '/logout' && currentUrl !== '/login' && currentUrl !== '/500') {\n                    this.authService.setCachedUrl(currentUrl.replace(/^\\//g, ''));\n                }\n                this.notify.error(translated);\n                this.authService.logout();\n            });\n            return false;\n        }\n        this.login(token, null);\n        return true;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from  \"../../app/env\";\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html',\n    styleUrls: ['notification.service.scss'],\n})\n\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}\n\n    dismiss() {\n        this.data.close();\n    }\n}\n\n@Injectable()\nexport class NotificationService {\n    constructor(\n        private router: Router,\n        public snackBar: MatSnackBar,\n        public translate: TranslateService\n    ) {}\n\n    success(message: string, _duration?: number) {\n        const duration = _duration ? this.getMessageDuration(message, _duration) :\n            this.getMessageDuration(message, 2000);\n\n        if (this.snackBar._openedSnackBarRef) {\n            if (!this.snackBar._openedSnackBarRef.instance.data.message.includes(this.translate.instant('USER.already_logged_in'))) {\n                setTimeout(() => {\n                    const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n                        duration: duration,\n                        panelClass: ['success-snackbar', 'mt-20', 'mr-3'],\n                        verticalPosition : 'top',\n                        horizontalPosition: 'right',\n                        data: {\n                            message: message,\n                            icon: 'info-circle',\n                            close: () => {\n                                snackBar.dismiss();\n                            }\n                        }\n                    });\n                }, duration);\n            }\n        } else {\n            const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n                duration: duration,\n                panelClass: ['success-snackbar', 'mt-20', 'mr-3'],\n                verticalPosition : 'top',\n                horizontalPosition: 'right',\n                data: {\n                    message: message,\n                    icon: 'info-circle',\n                    close: () => {\n                        snackBar.dismiss();\n                    }\n                }\n            });\n        }\n    }\n\n    error(message: string, url: any = null) {\n        const duration = this.getMessageDuration(message, 5000);\n        if (this.snackBar._openedSnackBarRef) {\n            if (!this.snackBar._openedSnackBarRef.instance.data.message.includes(this.translate.instant('USER.already_logged_in'))) {\n                setTimeout(() => {\n                    const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n                        duration: duration,\n                        panelClass: ['error-snackbar', 'mt-20', 'mr-3'],\n                        verticalPosition : 'top',\n                        horizontalPosition: 'right',\n                        data: {\n                            url: url,\n                            message: message,\n                            icon: 'exclamation-triangle',\n                            close: () => {\n                                snackBar.dismiss();\n                            }\n                        }\n                    });\n                }, duration / 3.5);\n            }\n        } else {\n            const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n                duration: duration,\n                panelClass: ['error-snackbar', 'mt-20', 'mr-3'],\n                verticalPosition : 'top',\n                horizontalPosition: 'right',\n                data: {\n                    url: url,\n                    message: message,\n                    icon: 'exclamation-triangle',\n                    close: () => {\n                        snackBar.dismiss();\n                    }\n                }\n            });\n        }\n    }\n\n    handleErrors(err: any, route='') {\n        if (err.status === 0 && err.statusText === 'Unknown Error') {\n            const message = '<b>' + this.translate.instant('ERROR.connection_failed') + '</b> : ' +\n                this.translate.instant('ERROR.is_server_up', {server: environment['url']});\n            if (this.router.url !== '/login') {\n                this.router.navigate(['/500']).then(() => {\n                    this.error(message);\n                });\n            } else {\n                this.error(message);\n            }\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                if (err.error.message === 'missing_custom_or_file_doesnt_exists') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.is_custom_present_and_file_exists'));\n                } else if (err.error.message === 'bad_or_missing_database_informations') {\n                    this.error('<b>' + this.translate.instant('ERROR.database_error') + '</b> : ' + this.translate.instant('ERROR.bad_or_missing_database_informations'));\n                } else if (err.error.message === 'missing_secret_key') {\n                    this.error('<b>' + this.translate.instant('ERROR.configuration_error') + '</b> : ' + this.translate.instant('ERROR.missing_secret_key'));\n                } else {\n                    this.error('<b>' + err.error.errors + '</b> : ' + err.error.message, err.url);\n                }\n                if (err.status === 403 || err.status === 404) {\n                    this.router.navigate(['/login']).then();\n                }\n                else if (err.error.errors === this.translate.instant('ERROR.jwt_error')) {\n                    this.router.navigate(['/logout']).then();\n                }\n            } else if (err.error.exception !== undefined)\n                this.error(err.error.exception[0].message, err.url);\n            else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined)\n                    this.error(err.error.error[0].message, err.url);\n                else\n                    this.error(err.error.error.message, err.url);\n            } else\n                this.error(`${err.status} : ${err.statusText}`, err.url);\n        } else {\n            this.error(err);\n        }\n\n        if (route) {\n            this.router.navigate([route]).then();\n        }\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n}\n","<div class=\"notif-container\" (click)=\"dismiss()\">\n    <div class=\"notif-container-icon\">\n        <i class=\"fa fa-{{ data.icon }} fa-2x\"></i>\n    </div>\n    <div class=\"notif-container-content\">\n        <div class=\"notif-container-content-msg\">\n            <div [innerHTML]=\"data.url\"></div>\n            <div [innerHTML]=\"data.message\"></div>\n        </div>\n    </div>\n</div>\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { PipeTransform, Pipe, Injectable } from '@angular/core';\n\n@Pipe({\n    name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], field : string, value : string): any[] {\n        if (!items) return [];\n        if (!value || value.length === 0) return items;\n        return items.filter(it =>\n        it[field].toLowerCase().indexOf(value.toLowerCase()) !== -1);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilegeId: any) {\n        let found = false;\n        const user = this.userService.getUserFromLocal();\n        if (user) {\n            const userPrivileges = user['privileges'];\n            if (userPrivileges) {\n                if (privilegeId === undefined) {\n                    return true;\n                }\n                if (userPrivileges === '*')\n                    return true;\n\n                userPrivileges.forEach((element: any) => {\n                    if (privilegeId === element) {\n                        found = true;\n                    }\n                });\n                return found;\n            }\n        }\n        return false;\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LastUrlService } from './last-url.service';\nimport { HintServiceComponent } from './hint/hint.service';\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TasksWatcherComponent } from './tasks-watcher/tasks-watcher.component';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\n\n@NgModule({\n    imports: [\n        AppMaterialModule,\n        CommonModule,\n        TranslateModule,\n        DragDropModule\n    ],\n    declarations: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent,\n        TasksWatcherComponent,\n    ],\n    exports: [\n        TasksWatcherComponent\n    ],\n    entryComponents: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent,\n    ],\n    providers: [NotificationService, LastUrlService, HintServiceComponent]\n})\nexport class ServicesModule { }\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { Title } from \"@angular/platform-browser\";\nimport { LastUrlService } from \"./last-url.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SettingsService {\n    selectedSetting: any = \"configurations\";\n    selectedParentSetting: any = \"general\";\n    settingsParent: any[] = [\n        {\n            \"id\": \"general\",\n            \"label\": this.translate.instant(\"SETTINGS.general\"),\n            \"opened\": false\n        },\n        {\n            \"id\": \"verifier\",\n            \"label\": this.translate.instant(\"SETTINGS.verifier\"),\n            \"opened\": false\n        },\n        {\n            \"id\": \"splitter\",\n            \"label\": this.translate.instant(\"SETTINGS.splitter\"),\n            \"opened\": false\n        },\n    ];\n    settings: any = {\n        \"general\": [\n            {\n                \"id\"        : \"configurations\",\n                \"label\"     : this.translate.instant(\"SETTINGS.configurations\"),\n                \"icon\"      : \"fa-solid fa-sliders\",\n                \"route\"     : '/settings/general/configurations',\n                \"privilege\" : \"configurations\",\n            },\n            {\n                \"id\"        : \"docservers\",\n                \"label\"     : this.translate.instant(\"SETTINGS.docservers\"),\n                \"icon\"      : \"fa-solid fa-hard-drive\",\n                \"route\"     : '/settings/general/docservers',\n                \"privilege\" : \"docservers\",\n            },\n            {\n                \"id\"        : \"regex\",\n                \"label\"     : this.translate.instant(\"SETTINGS.regex\"),\n                \"icon\"      : \"fa-solid fa-star-of-life\",\n                \"route\"     : '/settings/general/regex',\n                \"privilege\" : \"regex\",\n            },\n            {\n                \"id\"        : \"mailcollect\",\n                \"label\"     : this.translate.instant(\"SETTINGS.mailcollect\"),\n                \"icon\"      : \"fa-solid fa-inbox\",\n                \"route\"     : '/settings/general/mailcollect',\n                \"privilege\" : \"mailcollect\",\n            },\n            {\n                \"id\"        : \"users\",\n                \"label\"     : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"      : \"fa-solid fa-user\",\n                \"route\"     : '/settings/general/users',\n                \"privilege\" : \"users_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : 'add_user',\n                        \"label\"     : this.translate.instant(\"USER.create_user\"),\n                        \"route\"     : \"/settings/general/users/new\",\n                        \"privilege\" : \"add_user\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_user',\n                        \"label\"             : this.translate.instant(\"USER.update\"),\n                        \"route\"             : \"/settings/general/users/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_user\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"user-quota\",\n                \"label\"     : this.translate.instant(\"SETTINGS.user_quota\"),\n                \"icon\"      : \"fa-solid fa-user-gear\",\n                \"route\"     : '/settings/general/user-quota',\n                \"privilege\" : \"user_quota\",\n            },\n            {\n                \"id\"        : \"roles\",\n                \"label\"     : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"      : \"fa-solid fa-users\",\n                \"route\"     : \"/settings/general/roles\",\n                \"privilege\" : \"roles_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_role\",\n                        \"label\"     : this.translate.instant(\"ROLE.create_role\"),\n                        \"route\"     : \"/settings/general/roles/new\",\n                        \"privilege\" : \"add_role\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_role',\n                        \"label\"             : this.translate.instant(\"ROLE.update\"),\n                        \"route\"             : \"/settings/general/roles/update/\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"privilege\"         : \"update_role\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"custom-fields\",\n                \"label\"     : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"route\"     : \"/settings/general/custom-fields\",\n                \"icon\"      : \"fa-solid fa-code\",\n                \"privilege\" : \"custom_fields\",\n            },\n            {\n                \"id\"        : \"login-methods\",\n                \"label\"     : this.translate.instant(\"SETTINGS.login_methods\"),\n                \"icon\"      : \"fa-solid fa-right-to-bracket\",\n                \"route\"     : \"/settings/general/login-methods\"\n            },\n            {\n                \"id\"        : \"about-us\",\n                \"label\"     : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"      : \"fa-solid fa-address-card\",\n                \"route\"     : \"/settings/general/about-us\"\n            }\n        ],\n        \"verifier\": [\n            {\n                \"id\"        : \"verifier_display\",\n                \"label\"     : this.translate.instant(\"SETTINGS.verifier_display\"),\n                \"icon\"      : \"fa-solid fa-display\",\n                \"route\"     : \"/settings/verifier/display\",\n                \"privilege\" : \"verifier_display\",\n            },\n            {\n                \"id\"        : \"form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/verifier/forms\",\n                \"privilege\" : \"forms_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/verifier/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/verifier/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"input_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.input_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-in-alt\",\n                \"route\"     : \"/settings/verifier/inputs\",\n                \"privilege\" : \"inputs_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_input\"),\n                        \"route\"     : \"/settings/verifier/inputs/new\",\n                        \"privilege\" : \"add_input\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_input\"),\n                        \"route\"             : \"/settings/verifier/inputs/update/\",\n                        \"privilege\"         : \"update_input\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/verifier/outputs\",\n                \"privilege\" : \"outputs_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/verifier/outputs/new\",\n                        \"privilege\" : \"add_output\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/verifier/outputs/update/\",\n                        \"privilege\"         : \"update_output\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"position_mask_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_positions_mask\"),\n                \"icon\"      : \"fa-solid fa-map-marker-alt\",\n                \"route\"     : \"/settings/verifier/positions-mask\",\n                \"privilege\" : \"position_mask_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_position_mask\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.positions_mask_builder\"),\n                        \"route\"     : \"/settings/verifier/positions-mask/create\",\n                        \"privilege\" : \"add_position_mask\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_position_mask\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.positions_mask_update\"),\n                        \"route\"             : \"/settings/verifier/positions-mask/update/\",\n                        \"privilege\"         : \"update_position_mask\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            }\n        ],\n        \"splitter\": [\n            {\n                \"id\"        : \"splitter_form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fa-brands fa-wpforms\",\n                \"route\"     : \"/settings/splitter/forms\",\n                \"privilege\" : \"forms_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/splitter/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fa-solid fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/splitter/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fa-solid fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_input_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.input_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-in-alt\",\n                \"route\"     : \"/settings/splitter/inputs\",\n                \"privilege\" : \"inputs_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_input\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_input\"),\n                        \"route\"     : \"/settings/splitter/inputs/new\",\n                        \"privilege\" : \"splitter_add_input\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_input\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_input\"),\n                        \"route\"             : \"/settings/splitter/inputs/update/\",\n                        \"privilege\"         : \"update_input\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"splitter_output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fa-solid fa-sign-out-alt\",\n                \"route\"     : \"/settings/splitter/outputs\",\n                \"privilege\" : \"outputs_list_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_output\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/splitter/outputs/new\",\n                        \"privilege\" : \"add_output_splitter\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_output\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/splitter/outputs/update/\",\n                        \"privilege\"         : \"update_output_splitter\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"separator\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\"      : \"fa-solid fa-qrcode\",\n                \"route\"     : \"/settings/splitter/separator\",\n                \"privilege\" : \"separator_splitter\"\n            },\n            {\n                \"id\"        : \"document-type\",\n                \"label\"     : this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\"      : \"fa-solid fa-file\",\n                \"route\"     : \"/settings/splitter/document-type\",\n                \"privilege\" : \"document_type_splitter\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type\"),\n                        \"route\"     : \"/settings/splitter/document-type/new\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"        : \"splitter_add_folder_doc_type\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_doc_type_folder\"),\n                        \"route\"     : \"/settings/splitter/document-type/create-folder\",\n                        \"privilege\" : \"add_document_type\",\n                        \"icon\"      : \"fa-solid fa-folder-plus\",\n                    },\n                    {\n                        \"id\"                : \"splitter_update_doc_type\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_doc_type\"),\n                        \"route\"             : \"/settings/splitter/document-type/update/\",\n                        \"privilege\"         : \"update_document_type\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"artificial-intelligence\",\n                \"label\"     : this.translate.instant(\"SETTINGS.artificial_intelligence\"),\n                \"icon\"      : \"fa-solid fa-microchip\",\n                \"route\"     : \"/settings/splitter/ai\",\n                \"privilege\" : \"list_ai_model\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"splitter_add_model\",\n                        \"label\"     : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.add_model\"),\n                        \"route\"     : \"/settings/splitter/ai/create\",\n                        \"privilege\" : \"create_ai_model\",\n                        \"icon\"      : \"fa-solid fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"splitter_update_model\",\n                        \"label\"             : this.translate.instant(\"ARTIFICIAL-INTELLIGENCE.update_model\"),\n                        \"route\"             : \"/settings/splitter/ai/update/\",\n                        \"privilege\"         : \"update_ai_model\",\n                        \"icon\"              : \"fa-solid fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            }\n        ]\n    };\n\n    constructor(\n        private router: Router,\n        private titleService: Title,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private localStorage: LocalStorageService\n    ) {}\n\n    init() {\n        if (!this.authService.headersExists) {\n            this.authService.generateHeaders();\n        }\n        const selectedParentSetting = this.localStorage.get('selectedParentSettings');\n        const selectedSetting = this.localStorage.get('selectedSettings');\n\n        if (selectedSetting) {\n            this.setSelectedSettings(selectedSetting);\n        }\n        if (selectedParentSetting) {\n            this.setSelectedParentSettings(selectedParentSetting);\n        }\n\n        if (selectedParentSetting == null && selectedSetting == null) {\n            let foundSettings = false;\n            this.settingsParent.forEach((parent: any) => {\n                if (this.router.url.includes(parent['id'])) {\n                    foundSettings = true;\n                    this.setSelectedParentSettings(parent['id']);\n                }\n            });\n\n            if (!foundSettings) {\n                this.setSelectedParentSettings('general');\n                this.setSelectedSettings('about-us');\n            }\n        }\n\n        this.closeOtherParent('', this.selectedParentSetting);\n    }\n\n    getTitle() {\n        let title = this.titleService.getTitle();\n        title = title.split(' - ')[0];\n        return title;\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.setSelectedSettings(settingId);\n        this.setSelectedParentSettings(settingParentId);\n    }\n\n    getSelectedSetting() {\n        return this.selectedSetting;\n    }\n\n    getSelectedParentSetting() {\n        return this.selectedParentSetting;\n    }\n\n    getSettingsParent() {\n        return this.settingsParent;\n    }\n\n    closeOtherParent(url: any, parentId: any) {\n        this.settingsParent.forEach((parent: any) => {\n            parent.opened = parentId === parent['id'];\n        });\n    }\n\n    getSettings() {\n        return this.settings;\n    }\n\n    getSettingsAction(parentId: any, settingId: any) {\n        let actions: any;\n        this.settings[parentId].forEach((element: any) => {\n            if (element['id'] === settingId && element['actions']) {\n                actions = element['actions'];\n            }\n        });\n        return actions;\n    }\n\n    setSelectedSettings(value: string) {\n        this.selectedSetting = value;\n        this.localStorage.save('selectedSettings', value);\n    }\n\n    setSelectedParentSettings(value: string) {\n        this.selectedParentSetting = value;\n        this.localStorage.save('selectedParentSettings', value);\n    }\n}\n","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Oussama Brich <oussama.brich@edissyum.com> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from \"../local-storage.service\";\nimport { environment } from \"../../app/env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { interval, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router } from \"@angular/router\";\nimport { NotificationService } from \"../notifications/notifications.service\";\n\n@Component({\n    selector: 'app-tasks-watcher',\n    templateUrl: './tasks-watcher.component.html',\n    styleUrls: ['./tasks-watcher.component.scss']\n})\n\nexport class TasksWatcherComponent implements OnInit {\n    minimizeDisplay     : boolean = false;\n    isFirstCallDone     : boolean = false;\n    getTaskRunning      : boolean = false;\n    tasks               : any[]   = [];\n    displayedTasksData  : any[]   = [];\n    authorizedUrl       : any[]   = ['/verifier/list', '/splitter/list', '/upload'];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.minimizeDisplay = this.localStorageService.get('task_watcher_minimize_display') === 'true';\n        interval(4000).subscribe(() => {\n            if (this.authorizedUrl.includes(this.router.url) && !this.getTaskRunning && !this.minimizeDisplay) {\n                this.getLastTasks();\n            }\n        });\n    }\n\n    changeDisplayMode(minimizeDisplay: boolean) {\n        this.minimizeDisplay = minimizeDisplay;\n        if (!this.minimizeDisplay) {\n            this.getLastTasks();\n        }\n        this.localStorageService.save('task_watcher_minimize_display', minimizeDisplay ? 'true': 'false');\n    }\n\n    getLastTasks() {\n        this.isFirstCallDone = true;\n        this.getTaskRunning  = true;\n        const splitterOrVerifier = this.localStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier) {\n            this.http.get(environment['url'] + '/ws/tasks/progress?module=' + splitterOrVerifier,\n                {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if(this.displayedTasksData !== data.tasks) {\n                        this.tasks = [];\n                        let cpt = 1;\n                        for(const task of data.tasks) {\n                            this.tasks.push({\n                                'id'            : cpt,\n                                'type'          : task.type,\n                                'fileName'      : task.title,\n                                'module'        : task.module,\n                                'beginTime'     : task.begin_time,\n                                'endTime'       : task.end_time,\n                                'error'         : task.error_description ? task.error_description : false,\n                                'status'        : task.status ? task.status : 'in_progress',\n                                'age'           : task.age !== 0 ?\n                                    this.translate.instant(\"GLOBAL.n_minutes_ago\", {'minutes': task.age}):\n                                    this.translate.instant(\"GLOBAL.few_seconds_ago\")\n                            });\n                            cpt++;\n                        }\n                    }\n                    this.displayedTasksData = data.tasks;\n                }),\n                finalize(() => this.getTaskRunning = false),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    showError(error: any) {\n        if (error) {\n            this.notify.handleErrors({\n                error: {\n                    errors : this.translate.instant('GLOBAL.task_error_informations'),\n                    message : error\n                }\n            });\n        }\n    }\n}\n","<mat-card class=\"w-1/3 h-36 absolute bottom-2 right-2 z-10 bg-slate-50\" style=\"padding: 0 !important;\"\n          *ngIf=\"!this.minimizeDisplay && this.authorizedUrl.includes(this.router.url)\">\n    <mat-card-title class=\"text-sm m-4\" cdkDragHandle>\n        {{ 'GLOBAL.current_tasks' | translate }}\n    <span class=\"text-lg absolute right-4 top-2 hover:text-green-400 inline-block align-bottom hover:cursor-pointer\"\n          (click)=\"changeDisplayMode(!this.minimizeDisplay)\" matTooltip=\"{{ 'GLOBAL.minimize' | translate }}\">\n        <i class=\"fa-solid fa-window-minimize align-top\"></i>\n    </span>\n    </mat-card-title>\n    <div class=\"mx-4 h-20 bg-slate-100\" [class.overflow-hidden]=\"tasks.length === 0 && !isFirstCallDone\"\n        [class.overflow-y-auto]=\"tasks.length !== 0 && isFirstCallDone\">\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"tasks.length === 0 && !isFirstCallDone\">\n            <i class=\"fa-solid fa-circle-notch fa-spin fa-2x w-full text-gray-400\"></i>\n            <span class=\"block\">{{ 'GLOBAL.loading' | translate }}</span>\n        </div>\n        <div class=\"text-gray-400 my-4 text-center w-full\" *ngIf=\"tasks.length === 0 && !getTaskRunning && isFirstCallDone\">\n            <i class=\"fa-solid fa-check fa-2x w-full text-gray-400 mt-4\"></i>\n            <span class=\"block\">{{ 'GLOBAL.no_task_to_show' | translate }}</span>\n        </div>\n        <div *ngFor=\"let task of tasks\" class=\"h-8 w-full px-4 border-t-2 grid grid-cols-10\"\n             (click)=\"showError(task.error)\" [class.cursor-pointer] = task.error>\n            <span class=\"col-span-1 pt-1\">\n                {{ task.id }}\n            </span>\n            <span class=\"col-span-5 pt-1 w-full truncate\">\n                {{ task.fileName }}\n            </span>\n            <span class=\"col-span-3 text-sm text-slate-400 pt-1 truncate\"\n                  matTooltip=\"{{ 'GLOBAL.add_time' | translate }} {{ task.beginTime}}\">\n                {{ task.age }}\n            </span>\n            <span class=\"col-span-1 text-right\">\n                <i *ngIf=\"task.status === 'in_progress'\" class=\"fas fa-circle-notch fa-spin fa-lg my-4\"></i>\n                <i *ngIf=\"task.status === 'error'\" class=\"fas fa-triangle-exclamation fa-lg my-4 text-amber-500 cursor-pointer\"\n                    matTooltip=\"{{ 'GLOBAL.task_error' | translate }} : {{ task.error }}\"></i>\n                <i *ngIf=\"task.status === 'done'\" class=\"fa-solid fa-check fa-lg my-4\"\n                   matTooltip=\"{{ 'GLOBAL.end_time' | translate }} {{ task.endTime }}\"></i>\n            </span>\n        </div>\n    </div>\n</mat-card>\n<div (click)=\"changeDisplayMode(!this.minimizeDisplay)\" *ngIf=\"this.minimizeDisplay && this.authorizedUrl.includes(this.router.url)\"\n     class=\"w-12 h-12 absolute bottom-6 right-6 rounded-full z-10 bg-slate-100 hover:text-green-400 hover:cursor-pointer\n            grid justify-items-center drop-shadow-md\">\n    <span  class=\"text-lg pt-2\">\n        <i class=\"fa-solid fa-list-check fa-align-center\"></i>\n    </span>\n</div>","/** This file is part of Open-Capture.\n\n Open-Capture is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"./local-storage.service\";\nimport { environment } from \"../app/env\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private localStorage: LocalStorageService\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser() {\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        const token = this.getUserData();\n        if (token) {\n            return JSON.parse(atob(token as string));\n        } else {\n            if (this.router.url !== '/' && this.router.url !== '/login' && this.router.url !== '/logout') {\n                this.router.navigate(['/logout']).then();\n            }\n        }\n    }\n\n    getUserData() {\n        let userTokenName = 'OpenCaptureUserData';\n        if (environment['customId']) {\n            userTokenName += '_' + environment['customId'];\n        } else if (environment['fqdn']) {\n            userTokenName += '_' + environment['fqdn'];\n        }\n        return this.localStorage.get(userTokenName);\n    }\n}\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["marker","FormControl","environment","catchError","tap","of","i0","CreateCustomerComponent","constructor","router","http","dialog","route","userService","formBuilder","authService","translate","notify","historyService","serviceSettings","privilegesService","headers","id","label","type","control","required","values","instant","name","alpha2Code","alpha3Code","numericCode","callingCode","ngOnInit","headersExists","generateHeaders","loading","onCountrySelected","country","addressForm","forEach","element","setValue","updateRequired","field","requiredFields","currentModule","value","customerForm","includes","isValidForm","state","status","markAsTouched","onSubmit","customer","address","post","pipe","data","addHistory","success","navigate","then","err","console","debug","handleErrors","subscribe","getErrorMessageCustomer","error","getErrorMessageAddress","selectors","decls","vars","consts","template","ctx","finalize","ConfirmDialogComponent","$event","CustomersListComponent","routerExtService","localStorageService","lastUrl","getPreviousUrl","get","pageIndex","parseInt","offset","pageSize","remove","allCustomers","customers","loadCustomers","search","length","total","searchCustomer","event","target","onPageChange","save","deleteConfirmDialog","customerId","dialogRef","open","confirmTitle","confirmText","confirmButton","confirmButtonColor","cancelButton","width","afterClosed","result","deleteCustomer","undefined","delete","sortData","sort","slice","active","direction","splice","a","b","isAsc","compare","company_number","vat_number","siret","siren","UpdateCustomerComponent","snapshot","params","hasOwnProperty","addressId","defaultValue","put","Validators","CreateSupplierComponent","localeService","hint","email","forms","cpt","supplierForm","valueChanges","replace","langs","lang","push","supplier","getErrorMessageSupplier","errors","SuppliersListComponent","allSuppliers","suppliers","loadSuppliers","form","form_id","form_label","searchSupplier","supplierId","deleteSupplier","deletePositionsConfirmDialog","deleteSupplierPositions","skipAutoValidateConfirmDialog","skipAutoValidate","iban","getReferenceFile","mimeType","mimetype","referenceFile","file","link","document","createElement","href","download","filename","click","importSuppliers","files","formData","FormData","append","UpdateSupplierComponent","adr_field","adr_element","MomentDateAdapter","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MAT_MOMENT_DATE_FORMATS","DateAdapter","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MatNativeDateModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatRippleModule","MatTreeModule","AppMaterialModule","provide","useClass","deps","useValue","imports","exports","RouterModule","HomeComponent","LoginComponent","LogoutComponent","UploadComponent","HistoryComponent","UserProfileComponent","NotFoundComponent","HasPrivilegeService","StatisticsComponent","LoginRedirectService","LoginRequiredService","Error500Component","VerifierListComponent","SplitterListComponent","SplitterViewerComponent","VerifierViewerComponent","routes","path","component","redirectTo","pathMatch","title","canActivate","privileges","AppRoutingModule","forRoot","useHash","filter","map","NavigationEnd","AppComponent","location","titleService","sanitizer","activatedRoute","changeDetector","appTitle","getTitle","events","child","firstChild","childImage","childImageMobile","splitterOrVerifier","url","ttl","image","imageMobile","b64Content","bypassSecurityTrustUrl","currentLang","use","setTitle","ngAfterContentChecked","detectChanges","BrowserModule","Title","ServicesModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","DragDropModule","BrowserAnimationsModule","TranslateLoader","TranslateModule","TranslateService","HTTP_INTERCEPTORS","HttpClient","HttpClientModule","TranslateHttpLoader","FormsModule","ReactiveFormsModule","SettingsRoutingModule","FilterPipe","NgxFileDragDropModule","NgClickOutsideModule","NgxMatSelectSearchModule","NgsgModule","NgxChartsModule","DocumentTypeFactoryComponent","DocumentTypeComponent","MenuComponent","UsersListComponent","SettingsComponent","MatPaginatorIntl","CustomMatPaginatorIntl","LastUrlService","AboutUsComponent","CreateUserComponent","UpdateUserComponent","RolesListComponent","UpdateRoleComponent","CreateRoleComponent","LoginMethodsComponent","LoaderComponent","CustomFieldsComponent","FormListComponent","FormBuilderComponent","CreateOutputComponent","OutputsListComponent","HighlightPipe","UpdateOutputComponent","CreateInputComponent","InputsListComponent","UpdateInputComponent","UpdatePositionsMaskComponent","PositionsMaskListComponent","CreatePositionsMaskComponent","SeparatorComponent","SplitterCreateInputComponent","SplitterUpdateInputComponent","SplitterInputListComponent","SplitterUpdateOutputComponent","SplitterCreateOutputComponent","SplitterOutputListComponent","SplitterFormBuilderComponent","SplitterFormListComponent","CreateDocTypeComponent","ListDocTypeComponent","CreateFolderDocTypeComponent","ListAiModelComponent","CreateAiModelComponent","UpdateAiModelComponent","ConfigurationsComponent","DocserversComponent","RegexComponent","HintServiceComponent","MatSelectCountryModule","MiddlewareComponent","VerifierDisplayComponent","MailCollectComponent","UserQuotaComponent","SettingsMenuComponent","createTranslateLoader","AppModule","bootstrap","appearance","multi","defaultLanguage","loader","useFactory","declarations","page","Math","max","startIndex","endIndex","min","nbPage","ceil","getAndInitTranslations","translated","itemsPerPageLabel","nextPageLabel","firstPageLabel","lastPageLabel","previousPageLabel","changes","next","factory","customId","fqdn","production","version","require","startWith","DatePipe","moment","datePipe","_filter","array","toHighlight","filterValue","toLowerCase","option","indexOf","user","getUserFromLocal","users","userHistory","history","_user","user_id","filteredUsers","loadHistory","userSelected","subModuleSelected","moduleSelected","module","history_module","format","localeData","longDateFormat","history_date","transform","resetPaginator","setSelectedUser","userId","setSelectedModule","setSelectedSubModule","subModule","resetFilter","displayFn","lastname","firstname","username","history_submodule","user_info","history_desc","user_ip","features","splitter","hasPrivilege","verifier","configService","loginForm","group","password","getCurrentLocale","loginImage","configuration","subtitle","login_method_name","enableLoginMethodName","isConnectionBtnDisabled","processLogin","currentBabelLang","observe","setUser","body","setTokens","auth_token","btoa","JSON","stringify","getUser","readConfig","getCachedUrl","admin_password_alert","cleanCachedUrl","getErrorMessage","hasError","logout","styles","setTimeout","getLocales","k","n","addEventListener","e","keyCode","audio","Audio","konami","getElementById","style","display","transition","opacity","play","getSplitterOrVerifier","toggleProfileDropdown","profileDropdownCurrentState","closeprofileDropDown","toggleMobileMenu","mobileMenuState","inputs","HttpHeaders","HttpRequest","localStorage","isValidIP","str","arr","split","el","test","isValidFQDN","intercept","request","currentUrl","window","RegExp","currentUrlArray","i","isIp","isFQDN","currentCustom","oldUrl","token","set","newRequest","method","Object","assign","handle","privilegeService","login_methods","enabled","method_name","disablePasswordModification","loggedUserId","navigateByUrl","roles","editable","profile","profileForm","init","isProd","currentVersion","git_latest","lastVersion","allConfigurations","configurations","loadConfigurations","onClick","logo","upload","fileInput","reader","FileReader","readAsDataURL","onload","args","skipLocationChange","label_type","updateValue","updateLoading","updateMode","searchConfiguration","description","FormGroup","moveItemInArray","transferArrayItem","field_id","controlType","autoComplete","options","key","limit","class","retrieveCustomFields","toFormGroup","addFieldInputs","match","dropCustomField","previousContainer","container","previousIndex","currentIndex","enableCustomField","input","moveToActive","index","inactiveFields","activeFields","moveToInactive","displayInput","_return","newField","customFields","label_short","settings","metadata_key","addSelectOption","selectOptions","idControl","labelControl","displayChoicesList","dropSelectOption","deleteSelectOption","optionIndex","addSelectOptionsToArgs","addCustomField","resetForm","deleteCustom","customFieldId","activeOrInactive","object","deleteCustomField","oldList","newList","oldIndex","newIndex","updatedField","updateCustomOnSubmit","updateCustomId","inactiveOrActive","updateCustomField","customField","update","allDocservers","docservers","loadDocservers","docserver","searchDocservers","docserver_id","_formBuilder","loginMethods","isDefaultChecked","isLdapChecked","synchroparamsFormGroup","configs","ldap_configurations","connectionFormGroup","config","updateTypeAd","isUserInput","source","changedDefaultMethod","loginMethodName","enableLoginMethod","disableLoginMethod","changedLdapMethod","isValidConnexionForm","isValidSynchronizationForm","checkLdapConnexion","server_data","connexionServerStatus","isSaveBtnDisabled","ldapSynchronization","isLaunchBtnDisabled","synchronizationData","synchroUsersStatus","saveLoginMethodConfigs","methodDataToSave","disabled","mailCollectConfigId","keys","globalForm","defaultProcessData","allForms","allSplitterInputs","loadProcess","processIsEnabled","process","updateGlobal","processLoading","updateProcessName","new_process_name","updateDatabase","loadingProcessName","oldProcessName","edit_name","input_label","addProcess","newProcess","process_default","processes","exists","resetDefaultData","getNameOfProcess","createProcess","duplicateConfirmDialog","processName","duplicateProcess","element_child","disableConfirmDialog","disableProcess","selectedIndex","enableConfirmDialog","enableProcess","deleteProcess","updateProcess","retrieveFolders","folderLoading","port","login","hostname","secured_connection","folders","allprocessesMail","processesMail","allRegex","regex","loadRegex","regex_id","content","searchRegex","roleForm","role","rolePrivileges","element2","newRoleId","privilegeId","found","getChildsByParent","parent","changePrivilege","privilege","checked","loadRoles","roleId","deleteRole","disableRole","enableRole","pattern","data_users","usersList","userQuotaConfigId","quotaEnabled","quotaNumber","quota","quotaEmailDestControl","email_dest","users_filtered","elem","trim","quotaUsersfiltered","usersControlSelect","updateQuotaNumber","maxLength","loadingCustomers","userForm","hasCustomer","_customerId","usersCustomers","updateUsersCustomers","allUsers","role_label","loadUsers","userQuotaConfig","activeUser","getUserQuotaFiltered","searchUser","deleteUser","disableUser","enableUser","getSelectedSetting","getSelectedParentSetting","getSettings","selectedSetting","selectedParentSetting","settingsFound","routeToGo","encapsulation","placeholder","retrieveModels","retrieveDoctypes","retrieveOCDoctypes","retrieveForms","docs","docStatus","doc","isSelected","linked_doctype","linked_form","controls","checkSelectedBatch","current_doc","totalChecked","onFormSelect","doctypes","newDoctype","doctype","code","is_default","changeOutputType","val","find","chosenForm","chosenDocs","formId","createModel","start_training","modelForm","isValidForm2","minPred","getValueFromForm","modelName","matches","fold","formid","log","ocTarget","folder","listModels","min_pred","model","isSelectRequired","selected","setValidators","clearValidators","updateValueAndValidity","fieldId","models","formControl","displayDoctypes","FileValidators","_r4","fileExtension","size","modelsList","tmp_doc","j","documents","train_time","accuracy","min_proba","selectRow","row","clickedRow","checkFile","fileName","pop","count","displaySelectedRowId","disp","modelId","deleteModel","showResponse","fileControl","isPredicting","res","onResponse","prediction","lastValueFrom","selectedFormId","len","doc_types","formById","doctypesFormControl","formsFormControl","tableData","Documents","Doctypes","Formulaires","updateModel","model_name","oc_targets","retrieve","fields","noMasterFolder","getLastFolderIndex","codeSelected","lastIndex","documentTypeFactoryComponent","treeDataObj","doctypeData","docType","startsWith","currentIdx","Number","getSelectedForm","addFolder","newFolder","getRawValue","reset","setErrors","loadTree","viewQuery","addDocType","newDocType","lastIndexInFolder","toString","isDefault","updateDoctype","getOutPut","selectedDocType","join","enable","disable","deleteDoctype","outputs","creationMode","info","formSettings","setting","outputForm","addOutput","metadataMethods","availableFieldsParent","unit","class_label","loadingCustomFields","form_fields","batch_metadata","document_metadata","category","currentField","childFields","dropFromAvailableFields","changeClass","newClass","classLabel","changeDisplay","newDisplay","displayIcon","display_icon","changeRequired","newRequired","requiredIcon","required_icon","dropFromForm","previousUnit","deleteField","parentField","storeNewOrder","categoryId","tmpCurrentOrder","currentOrder","removeOutput","updateForm","default_form","metadataMethod","metadata_method","exportZipFile","export_zip_file","createForm","loadForms","deleteForm","duplicateForm","disableForm","enableForm","default","inputForm","splitMethods","createInputAndScriptAndIncron","loadInputs","inputId","deleteInput","duplicateInput","createScriptAndIncron","outputsTypes","outputs_types","createOutput","ocrise","outputLabel","compressType","outputTypeId","selectedOutputType","loadOutputs","outputId","output","deleteOutput","duplicateOutput","originalOutputType","_output","outputsTypesForm","output_type_id","isJson","webservice","outputElement","testConnection","availableFields","invalid","json_error","retrieveDataFromWS","eval","testCmisConnection","getCmisConnectionInfo","connection","message","auth","testMEMConnection","getMEMConnectionInfo","getOpenadsConnectionInfo","testOpenadsConnection","getUsersFromMem","toPromise","setAutocompleteValues","getEntitiesFromMem","entities","serialId","entity_label","entity_id","getDoctypesFromMem","type_id","getPrioritiesFromMem","priorities","getStatusesFromMem","statuses","label_status","getIndexingModelsFromMem","indexingModels","updateOutput","_array","parse","sortArrayAlphab","filteredOptions","x","toUpperCase","y","functionName","testConnectionMapping","generateSeparator","onChangeType","selectedSeparator","loadingSeparator","separator","fileUrl","encoded_file","thumbnailUrl","encoded_thumbnail","downloadSeparator","downloadPdf","base64String","availableFieldsTmp","formInput","loadDisplay","formLoaded","currentForm","subtitles","item","updateLabel","updateDisplay","removeLine","drop_card","drop","color","format_icon","res_outputs","formSettingId","module_settings_id","openAvailableField","autocomplete","facturation","other","changeFormat","newFormat","formatIcon","changeColor","newColor","updateFormLoading","selectForLine","ctrlKey","lineSelected","selectedFields","fullSize","currentNumber","currentSize","Function","round","supplierVerif","supplier_verif","automaticValidationData","automatic_validation_data","allowAutomaticValidation","allow_automatic_validation","deleteDocumentsAfterOutputs","delete_documents_after_outputs","getInputs","inputList","inputListLabel","selectValues","selectLabel","updateInputsDefaultForm","newFormId","allInputs","text","t","pure","links","getCustomFieldsFromMem","getContactsCustomFieldsFromMem","createPositionsMask","supplierName","positions_masks","loadPositionMask","retrieveSuppliers","positionsMasks","mask","supplier_id","supplier_name","positionMaskId","positionsMask","deletePositionMask","duplicatePositionMask","positionsMaskId","disablePositionMask","enablePositionMask","launchOnInit","getConfig","getPositionMask","documentImageName","documentImageNbPages","nb_pages","documentImageWidth","imageDocument","$","thumbB64","getThumb","documentImageSrc","ratio","ocr","loadingFields","drawPositions","triggerEvent","hide","positions","position","getPage","String","currentPage","lastId","lastLabel","lastColor","focus","Infinity","newArea","height","trigger","drawPositionByField","updatePositionsMask","deleteImage","pages","background","outline","imageContainer","addClass","removeClass","show","_this","innerText","deleteArea","backgroundArea","resizeArea","toggleClass","selectAreas","allowNudge","minSize","maxSize","onChanged","img","selection","ocr_process","onDeleted","attr","deletePosition","deletePage","deleteClicked","ocrFromUser","labelContainer","css","labelCount","cptToDelete","_selection","getSelectionByCpt","savePosition","savePage","checkIfObjectIsEqual","object1","object2","aProps","getOwnPropertyNames","bProps","propName","nextPage","changeImage","previousPage","pageToShow","oldPage","extension","oldCpt","substr","newCpt","newFilename","parentCpt","EventEmitter","FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","BehaviorSubject","ChecklistDatabase","dataChange","retrieveDocTypes","initialize","buildFileTree","lastSearchValue","obj","level","o","node","TreeItemNode","children","so","_normalizeValue","normalize","filterText","filteredTreeData","d","lastIndexOf","ftd","concat","TreeItemFlatNode","Map","expandable","_","_nodeData","existingNode","nestedNodeMap","flatNode","flatNodeMap","treeFlattener","transformer","getLevel","isExpandable","getChildren","treeControl","dataSource","expandAll","selectFormControl","selectedFormOutput","emit","defaultFormId","filterChanged","searchText","collapseAll","selectNode","isDblClick","selectedDocTypeInput","selectedDoctypeOutput","selectFolder","canFolderBeSelected","loadDefaultDocType","cloneFormDoctypes","sourceFormId","destFormId","MAT_DIALOG_DATA","selectedItem","close","_sanitizer","selectedTab","currentTime","batchList","loadBatches","isLoading","batches","currentStatus","totals","batch","formLabel","date","customerName","documentsCount","thumbnail","sanitize","querySelectorAll","batchesSelected","mergeAllConfirmDialog","parentId","mergeAllBatches","isCheckboxChecked","batchId","checkboxList","getElementsByClassName","Array","from","checkboxId","listOfBatchToMerge","listOfBatchFormId","uniqueFormId","ar","deleteAllConfirmDialog","deleteAllBatches","openConfirmDialog","deleteBatch","batch_id","selectOrUnselectAllBatches","srcElement","textContent","lastBatch","batchDelete","onTabChange","changeStatus","debounceTime","delay","takeUntil","ReplaySubject","Subject","page_r107","ctx_r119","ctx_r121","_r68","ctx_r127","ctx_r138","rotation","pageIdInLoad","previousFormId","maxSplitIndex","selectedPagesCount","selectedDocument","displayOrder","beforeunloadHandler","isDataEdited","returnValue","currentBatch","loadSelectedBatch","setValuesFromSavedMetadata","autocompletionValue","fieldsCategories","customFieldsValues","savedValue","batchMetadataValues","batchForm","defaultDoctype","loadBatchById","loadStatus","loadFormFields","loadDocuments","loadOutputsData","loadReferentialOnView","getStatusLabel","statusId","statusFound","outputsId","outputsData","batchesLoading","documentsLoading","documentIndex","documentTypeName","documentTypeKey","splitIndex","getFormForDocument","sourcePage","showZoomButton","checkBox","selectDocument","updateDocumentDisplayOrder","updatedDocuments","currentDisplayOrder","newDisplayOrder","sortDocumentsByDisplayOrder","createDocument","addDocumentLoading","documentDisplayOrder","newId","newDocumentId","newForm","labelShort","addControl","controlSearch","getZoomPage","showZoomPage","zoomPage","pageId","getPlaceholderFromResultMask","metadata","maskVariables","maskVariable","getPlaceholderFromSearchMask","changeInputMode","inputMode","fillDataValues","newValue","callOnSplitterView","loadReferential","refreshAfterLoad","metadataItem","metadataId","filteredServerSideMetadata","fillData","setValueChange","ngOnDestroy","_onDestroy","complete","selectedMetadata","optionId","onFormChange","fieldCategory","searchMask","resultMask","validationMask","toBatchFormGroup","searching","filteredMetadata","getFormFieldsValues","addDocumentIdToDropList","DropListDocumentsIds","dropPage","movedPages","dropDocument","OrderDisplayDocumentValues","openDocumentTypeDialog","deleteDocument","pagesCount","confirmMessage","deletedDocumentsIds","deleteItemFromList","list","countSelectedPages","selectedPageCount","deleteSelectedPages","deletedPagesIds","setAllPagesTo","check","selectPagesCount","rotatePage","currentDegree","rotateSelectedPages","sendSelectedPages","selectedDoc","toolSelectedOption","selectedDocIndex","newPosition","changeBatch","cancel","validateWithConfirmation","valid","validate","batchMetadata","_documents","_document","saveInfo","saveInfosLoading","getDocumentsUploadedVerifier","currentYear","submodules","historyCpt","months","month","_submodule","currentData","getDocumentsUploadedSplitter","getFormsProcessDocument","getUsersProcessDocument","changeStatistic","selectedStatistic","changeDiagramType","diagramTypes","selectedDiagramType","selectedInput","selectedInputTechnicalId","input_id","setInput","uploadInvoice","sending","ctx_r58","ctx_r59","parent_id","purchase_or_sale","_transformer","removeLockByUserId","filteredForms","TREE_DATA","allowedCustomers","data_customers_by_id","customer_id","loadInvoices","invoiceToDeleteSelected","invoices","allowedSuppliers","purchaseOrSale","invoice","thumb","invoice_display_tmp","subtitle_data","datas","customersPurchaseToKeep","customersSaleToKeep","_data","customer1","childExists","createChildren","customer2","filterCustomers","fillChildren","childName","childNameExists","resetSearchCustomer","customerFilter","tmpData","customerFilterEmpty","customerMatch","changeCustomer","invoiceId","resetInvoices","changeInvoiceForm","invoice_id","loadInvoicePerCustomer","selectOrUnselectAllInvoices","deleteAllInvoices","deleteInvoice","document_id","checkCheckedInvoices","displayInvoiceLocked","lockedBy","changeForm","searchInvoice","expanded","ctx_r61","ctx_r65","ctx_r88","ctx_r110","alphanum","alphanum_extended","alphanum_extended_with_accent","number_int","number_float","char","updateInvoice","getInvoice","currentFilename","full_jpg_filename","generateOutputs","formList","getAllForm","supplierFormFound","currentSupplier","currentFormFields","defaultFormFound","getForm","imageInvoice","img_width","fillForm","getSupplierInfo","convertAutocomplete","scrollTo","top","behavior","supplierNamecontrol","supplier_element","autocomplete_values","_filter_data","resources","getFormFieldsById","getFormById","getOutputs","outputsLabel","output_label","generateTokenInsee","tokenError","imgArray","imgSrc","supplierExists","updateFilteredOption","patchValue","getFieldInfo","splittedFieldId","isNaN","blur","disableOCR","ocr_from_user","getPattern","fullSizeSelected","_field","retrieveAccountingPlan","accountingPlanEmpty","retrieveDefaultAccountingPlan","accountingPlan","sortArray","_filter_accounting","replaceAll","Date","_d","checkSirenOrSiret","checkVAT","findChildren","field_data","duplicateLine","toHighlightAccounting","compte_lib","compte_num","hideVisuals","visualIsHide","visuals","splitted","labels","scrollToElement","_img","updateFormValue","deleteDataOnChangeForm","deleteData","currentHeight","innerHeight","getBoundingClientRect","deleteContainer","resizeHandler","isOCRRunning","document_lang","thumbSize","currentTarget","oldPosition","saveData","savePages","showNotif","oldData","getField","createSupplier","addressData","supplierData","supplier_data","editSupplier","multiple","neededValue","listOfNewField","listOfNewFieldData","numberOfField","deleteLine","lineEmpty","newFieldId","parent_field","duplicateField","removeDuplicateLine","listOfFieldToDelete","removeDuplicateField","isChildField","splittedId","isInteger","address_id","address1","address2","city","postal_code","getOnlyRawFooter","get_only_raw_footer","column","verify","isVAT","bal","step","charCodeAt","datePickerPattern","matDatepickerParse","siret_error","siren_error","vat_error","requiredPattern","setAutocompleteDefaultValue","autocomplete_id","validateForm","loadingSubmit","arrayData","refuseForm","settingsOpen","tmpFieldId","siretOrSiren","sizeSIREN","sizeSIRET","oldSIREN","oldSIRET","oldVAT","sizeVAT","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","AuthService","getToken","setCachedUrl","tokenNames","getTokenName","setTokenConfig","getTokenConfig","tokenName","userDataName","cachedUrlName","configName","user_token","providedIn","ConfigService","Promise","resolve","setConfig","atob","routeConfig","specificClass","HistoryService","submodule","desc","previousUrl","getCurrentUrl","LocalStorageService","setItem","getItem","removeItem","LocaleService","dateAdapter","setLocale","updateLocale","monthsShort","weekdays","weekdaysMin","LT","LTS","L","l","LL","LLL","LLLL","week","dow","llll","locale","dateAdaptaterLocale","changeLocale","localeLoading","_elementRef","nativeElement","reload","babel_lang","moment_lang","URLSearchParams","token_param","entries","hash","MAT_SNACK_BAR_DATA","CustomSnackbarComponent","dismiss","NotificationService","snackBar","_duration","duration","getMessageDuration","_openedSnackBarRef","instance","openFromComponent","panelClass","verticalPosition","horizontalPosition","icon","statusText","server","exception","minimumDuration","maxDuration","items","it","PrivilegesService","userPrivileges","CommonModule","TasksWatcherComponent","SettingsService","setSelectedSettings","setSelectedParentSettings","foundSettings","settingsParent","closeOtherParent","changeSetting","settingId","settingParentId","getSettingsParent","opened","getSettingsAction","actions","interval","minimizeDisplay","authorizedUrl","getTaskRunning","getLastTasks","changeDisplayMode","isFirstCallDone","displayedTasksData","tasks","task","begin_time","end_time","error_description","age","showError","UserService","getUserData","userTokenName"],"sourceRoot":"webpack:///","x_google_ignoreList":[161]}